

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 28 02:01:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0xCA0,32
    40                           	dabs	1,0xC20,80
    41                           	dabs	1,0xBA0,80
    42                           	dabs	1,0xB30,64
    43                           	dabs	1,0xB20,16
    44                           	dabs	1,0xAA0,80
    45                           	dabs	1,0xA20,80
    46                           	dabs	1,0x9A0,80
    47                           	dabs	1,0x920,80
    48                           	dabs	1,0x8A0,80
    49                           	dabs	1,0x820,80
    50                           	dabs	1,0x7E0,16
    51                           	dabs	1,0x7A0,64
    52                           	dabs	1,0x720,80
    53                           	dabs	1,0x6A0,80
    54                           	dabs	1,0x650,32
    55                           	dabs	1,0x23F0,0,_lutRY
    56                           	dabs	1,0x24F0,0,_lutRX
    57                           	dabs	1,0x25F0,0,_lutLY
    58                           	dabs	1,0x26F0,0,_lutLX
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F18876 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001C                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0110                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  018E                     	;# 
   194  018F                     	;# 
   195  0190                     	;# 
   196  0191                     	;# 
   197  0192                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200  0198                     	;# 
   201  0199                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019C                     	;# 
   205  020C                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  020E                     	;# 
   209  020F                     	;# 
   210  020F                     	;# 
   211  0210                     	;# 
   212  0210                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  0218                     	;# 
   226  0218                     	;# 
   227  0219                     	;# 
   228  021A                     	;# 
   229  021B                     	;# 
   230  021B                     	;# 
   231  021C                     	;# 
   232  021C                     	;# 
   233  021D                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028D                     	;# 
   241  028E                     	;# 
   242  028F                     	;# 
   243  0290                     	;# 
   244  0290                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0293                     	;# 
   250  0294                     	;# 
   251  0295                     	;# 
   252  0296                     	;# 
   253  0296                     	;# 
   254  0297                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029C                     	;# 
   263  029D                     	;# 
   264  030C                     	;# 
   265  030C                     	;# 
   266  030D                     	;# 
   267  030E                     	;# 
   268  030F                     	;# 
   269  0310                     	;# 
   270  0310                     	;# 
   271  0311                     	;# 
   272  0312                     	;# 
   273  0313                     	;# 
   274  0314                     	;# 
   275  0314                     	;# 
   276  0315                     	;# 
   277  0316                     	;# 
   278  0317                     	;# 
   279  0318                     	;# 
   280  0318                     	;# 
   281  0319                     	;# 
   282  031A                     	;# 
   283  031B                     	;# 
   284  031C                     	;# 
   285  031C                     	;# 
   286  031D                     	;# 
   287  031E                     	;# 
   288  031F                     	;# 
   289  038C                     	;# 
   290  038C                     	;# 
   291  038D                     	;# 
   292  038E                     	;# 
   293  0390                     	;# 
   294  0390                     	;# 
   295  0391                     	;# 
   296  0392                     	;# 
   297  040C                     	;# 
   298  040D                     	;# 
   299  040E                     	;# 
   300  040F                     	;# 
   301  0410                     	;# 
   302  0411                     	;# 
   303  0416                     	;# 
   304  0416                     	;# 
   305  0417                     	;# 
   306  0418                     	;# 
   307  0418                     	;# 
   308  0419                     	;# 
   309  041A                     	;# 
   310  041A                     	;# 
   311  041B                     	;# 
   312  041C                     	;# 
   313  041C                     	;# 
   314  041D                     	;# 
   315  041E                     	;# 
   316  041F                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  050C                     	;# 
   340  050C                     	;# 
   341  050D                     	;# 
   342  050E                     	;# 
   343  050F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0515                     	;# 
   353  0516                     	;# 
   354  0517                     	;# 
   355  0518                     	;# 
   356  0519                     	;# 
   357  051A                     	;# 
   358  051B                     	;# 
   359  051C                     	;# 
   360  051D                     	;# 
   361  058C                     	;# 
   362  058C                     	;# 
   363  058D                     	;# 
   364  058E                     	;# 
   365  058F                     	;# 
   366  058F                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0593                     	;# 
   371  060C                     	;# 
   372  060D                     	;# 
   373  060E                     	;# 
   374  060F                     	;# 
   375  0610                     	;# 
   376  0611                     	;# 
   377  0612                     	;# 
   378  0613                     	;# 
   379  0614                     	;# 
   380  0616                     	;# 
   381  0617                     	;# 
   382  0618                     	;# 
   383  0619                     	;# 
   384  061A                     	;# 
   385  061B                     	;# 
   386  061C                     	;# 
   387  061D                     	;# 
   388  061E                     	;# 
   389  068C                     	;# 
   390  068D                     	;# 
   391  068E                     	;# 
   392  068F                     	;# 
   393  0690                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  070C                     	;# 
   399  070D                     	;# 
   400  070E                     	;# 
   401  070F                     	;# 
   402  0710                     	;# 
   403  0711                     	;# 
   404  0712                     	;# 
   405  0713                     	;# 
   406  0714                     	;# 
   407  0716                     	;# 
   408  0717                     	;# 
   409  0718                     	;# 
   410  0719                     	;# 
   411  071A                     	;# 
   412  071B                     	;# 
   413  071C                     	;# 
   414  071D                     	;# 
   415  071E                     	;# 
   416  0796                     	;# 
   417  0797                     	;# 
   418  0798                     	;# 
   419  0799                     	;# 
   420  079A                     	;# 
   421  079B                     	;# 
   422  080C                     	;# 
   423  080D                     	;# 
   424  080E                     	;# 
   425  080F                     	;# 
   426  0810                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  081A                     	;# 
   432  081B                     	;# 
   433  081C                     	;# 
   434  081D                     	;# 
   435  081E                     	;# 
   436  081F                     	;# 
   437  088C                     	;# 
   438  088D                     	;# 
   439  088E                     	;# 
   440  088F                     	;# 
   441  0890                     	;# 
   442  0891                     	;# 
   443  0892                     	;# 
   444  0893                     	;# 
   445  0895                     	;# 
   446  0896                     	;# 
   447  0897                     	;# 
   448  0898                     	;# 
   449  0899                     	;# 
   450  089A                     	;# 
   451  089B                     	;# 
   452  090C                     	;# 
   453  090E                     	;# 
   454  090F                     	;# 
   455  091F                     	;# 
   456  098F                     	;# 
   457  098F                     	;# 
   458  0990                     	;# 
   459  0991                     	;# 
   460  0992                     	;# 
   461  0993                     	;# 
   462  0994                     	;# 
   463  0995                     	;# 
   464  0996                     	;# 
   465  0997                     	;# 
   466  0E0F                     	;# 
   467  0E10                     	;# 
   468  0E11                     	;# 
   469  0E12                     	;# 
   470  0E13                     	;# 
   471  0E14                     	;# 
   472  0E15                     	;# 
   473  0E16                     	;# 
   474  0E17                     	;# 
   475  0E18                     	;# 
   476  0E19                     	;# 
   477  0E1A                     	;# 
   478  0E1B                     	;# 
   479  0E1C                     	;# 
   480  0E1D                     	;# 
   481  0E1E                     	;# 
   482  0E1F                     	;# 
   483  0E20                     	;# 
   484  0E21                     	;# 
   485  0E22                     	;# 
   486  0E23                     	;# 
   487  0E24                     	;# 
   488  0E25                     	;# 
   489  0E26                     	;# 
   490  0E27                     	;# 
   491  0E28                     	;# 
   492  0E29                     	;# 
   493  0E2A                     	;# 
   494  0E2B                     	;# 
   495  0E2C                     	;# 
   496  0E2D                     	;# 
   497  0E2E                     	;# 
   498  0E2F                     	;# 
   499  0E30                     	;# 
   500  0E31                     	;# 
   501  0E32                     	;# 
   502  0E33                     	;# 
   503  0E34                     	;# 
   504  0E35                     	;# 
   505  0E36                     	;# 
   506  0E37                     	;# 
   507  0E8F                     	;# 
   508  0E90                     	;# 
   509  0E91                     	;# 
   510  0E92                     	;# 
   511  0E93                     	;# 
   512  0E94                     	;# 
   513  0E95                     	;# 
   514  0E96                     	;# 
   515  0E97                     	;# 
   516  0E9C                     	;# 
   517  0E9D                     	;# 
   518  0E9E                     	;# 
   519  0EA1                     	;# 
   520  0EA2                     	;# 
   521  0EA3                     	;# 
   522  0EA4                     	;# 
   523  0EA5                     	;# 
   524  0EA9                     	;# 
   525  0EAA                     	;# 
   526  0EAB                     	;# 
   527  0EAC                     	;# 
   528  0EB1                     	;# 
   529  0EB2                     	;# 
   530  0EB3                     	;# 
   531  0EB8                     	;# 
   532  0EB9                     	;# 
   533  0EBA                     	;# 
   534  0EBB                     	;# 
   535  0EBC                     	;# 
   536  0EBD                     	;# 
   537  0EBE                     	;# 
   538  0EC3                     	;# 
   539  0EC5                     	;# 
   540  0EC6                     	;# 
   541  0EC7                     	;# 
   542  0EC8                     	;# 
   543  0EC9                     	;# 
   544  0ECA                     	;# 
   545  0ECB                     	;# 
   546  0ECC                     	;# 
   547  0F10                     	;# 
   548  0F11                     	;# 
   549  0F12                     	;# 
   550  0F13                     	;# 
   551  0F14                     	;# 
   552  0F15                     	;# 
   553  0F16                     	;# 
   554  0F17                     	;# 
   555  0F18                     	;# 
   556  0F19                     	;# 
   557  0F1A                     	;# 
   558  0F1B                     	;# 
   559  0F1C                     	;# 
   560  0F1D                     	;# 
   561  0F1E                     	;# 
   562  0F1F                     	;# 
   563  0F20                     	;# 
   564  0F21                     	;# 
   565  0F22                     	;# 
   566  0F23                     	;# 
   567  0F24                     	;# 
   568  0F25                     	;# 
   569  0F26                     	;# 
   570  0F27                     	;# 
   571  0F28                     	;# 
   572  0F29                     	;# 
   573  0F2A                     	;# 
   574  0F2B                     	;# 
   575  0F2C                     	;# 
   576  0F2D                     	;# 
   577  0F2E                     	;# 
   578  0F2F                     	;# 
   579  0F30                     	;# 
   580  0F31                     	;# 
   581  0F32                     	;# 
   582  0F38                     	;# 
   583  0F39                     	;# 
   584  0F3A                     	;# 
   585  0F3B                     	;# 
   586  0F3C                     	;# 
   587  0F3D                     	;# 
   588  0F3E                     	;# 
   589  0F3F                     	;# 
   590  0F40                     	;# 
   591  0F41                     	;# 
   592  0F43                     	;# 
   593  0F44                     	;# 
   594  0F45                     	;# 
   595  0F46                     	;# 
   596  0F47                     	;# 
   597  0F48                     	;# 
   598  0F49                     	;# 
   599  0F4A                     	;# 
   600  0F4B                     	;# 
   601  0F4C                     	;# 
   602  0F4E                     	;# 
   603  0F4F                     	;# 
   604  0F50                     	;# 
   605  0F51                     	;# 
   606  0F52                     	;# 
   607  0F53                     	;# 
   608  0F54                     	;# 
   609  0F55                     	;# 
   610  0F56                     	;# 
   611  0F57                     	;# 
   612  0F59                     	;# 
   613  0F5A                     	;# 
   614  0F5B                     	;# 
   615  0F5C                     	;# 
   616  0F5D                     	;# 
   617  0F61                     	;# 
   618  0F62                     	;# 
   619  0F64                     	;# 
   620  0F65                     	;# 
   621  0F66                     	;# 
   622  0F67                     	;# 
   623  0F68                     	;# 
   624  0F69                     	;# 
   625  0F6A                     	;# 
   626  0F6B                     	;# 
   627  0F6C                     	;# 
   628  0F6D                     	;# 
   629  0FE4                     	;# 
   630  0FE5                     	;# 
   631  0FE6                     	;# 
   632  0FE7                     	;# 
   633  0FE8                     	;# 
   634  0FE9                     	;# 
   635  0FEA                     	;# 
   636  0FEB                     	;# 
   637  0FED                     	;# 
   638  0FEE                     	;# 
   639  0FEF                     	;# 
   640  0000                     	;# 
   641  0001                     	;# 
   642  0002                     	;# 
   643  0003                     	;# 
   644  0004                     	;# 
   645  0005                     	;# 
   646  0006                     	;# 
   647  0007                     	;# 
   648  0008                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  000F                     	;# 
   656  0010                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0014                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001C                     	;# 
   668  001C                     	;# 
   669  001D                     	;# 
   670  001D                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  008C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008E                     	;# 
   678  008F                     	;# 
   679  0090                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0110                     	;# 
   700  0110                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0112                     	;# 
   704  0113                     	;# 
   705  0114                     	;# 
   706  0114                     	;# 
   707  0115                     	;# 
   708  0116                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0119                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  011A                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011C                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011D                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011E                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  018C                     	;# 
   737  018D                     	;# 
   738  018E                     	;# 
   739  018F                     	;# 
   740  0190                     	;# 
   741  0191                     	;# 
   742  0192                     	;# 
   743  0196                     	;# 
   744  0197                     	;# 
   745  0198                     	;# 
   746  0199                     	;# 
   747  019A                     	;# 
   748  019B                     	;# 
   749  019C                     	;# 
   750  020C                     	;# 
   751  020C                     	;# 
   752  020D                     	;# 
   753  020E                     	;# 
   754  020F                     	;# 
   755  020F                     	;# 
   756  0210                     	;# 
   757  0210                     	;# 
   758  0211                     	;# 
   759  0211                     	;# 
   760  0212                     	;# 
   761  0212                     	;# 
   762  0213                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  0218                     	;# 
   771  0218                     	;# 
   772  0219                     	;# 
   773  021A                     	;# 
   774  021B                     	;# 
   775  021B                     	;# 
   776  021C                     	;# 
   777  021C                     	;# 
   778  021D                     	;# 
   779  021D                     	;# 
   780  021E                     	;# 
   781  021F                     	;# 
   782  028C                     	;# 
   783  028C                     	;# 
   784  028D                     	;# 
   785  028D                     	;# 
   786  028E                     	;# 
   787  028F                     	;# 
   788  0290                     	;# 
   789  0290                     	;# 
   790  0291                     	;# 
   791  0292                     	;# 
   792  0292                     	;# 
   793  0293                     	;# 
   794  0293                     	;# 
   795  0294                     	;# 
   796  0295                     	;# 
   797  0296                     	;# 
   798  0296                     	;# 
   799  0297                     	;# 
   800  0298                     	;# 
   801  0298                     	;# 
   802  0299                     	;# 
   803  0299                     	;# 
   804  029A                     	;# 
   805  029B                     	;# 
   806  029C                     	;# 
   807  029C                     	;# 
   808  029D                     	;# 
   809  030C                     	;# 
   810  030C                     	;# 
   811  030D                     	;# 
   812  030E                     	;# 
   813  030F                     	;# 
   814  0310                     	;# 
   815  0310                     	;# 
   816  0311                     	;# 
   817  0312                     	;# 
   818  0313                     	;# 
   819  0314                     	;# 
   820  0314                     	;# 
   821  0315                     	;# 
   822  0316                     	;# 
   823  0317                     	;# 
   824  0318                     	;# 
   825  0318                     	;# 
   826  0319                     	;# 
   827  031A                     	;# 
   828  031B                     	;# 
   829  031C                     	;# 
   830  031C                     	;# 
   831  031D                     	;# 
   832  031E                     	;# 
   833  031F                     	;# 
   834  038C                     	;# 
   835  038C                     	;# 
   836  038D                     	;# 
   837  038E                     	;# 
   838  0390                     	;# 
   839  0390                     	;# 
   840  0391                     	;# 
   841  0392                     	;# 
   842  040C                     	;# 
   843  040D                     	;# 
   844  040E                     	;# 
   845  040F                     	;# 
   846  0410                     	;# 
   847  0411                     	;# 
   848  0416                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  0418                     	;# 
   852  0418                     	;# 
   853  0419                     	;# 
   854  041A                     	;# 
   855  041A                     	;# 
   856  041B                     	;# 
   857  041C                     	;# 
   858  041C                     	;# 
   859  041D                     	;# 
   860  041E                     	;# 
   861  041F                     	;# 
   862  048C                     	;# 
   863  048C                     	;# 
   864  048D                     	;# 
   865  048E                     	;# 
   866  048F                     	;# 
   867  048F                     	;# 
   868  0490                     	;# 
   869  0491                     	;# 
   870  0492                     	;# 
   871  0492                     	;# 
   872  0493                     	;# 
   873  0494                     	;# 
   874  0495                     	;# 
   875  0495                     	;# 
   876  0496                     	;# 
   877  0497                     	;# 
   878  0498                     	;# 
   879  0499                     	;# 
   880  049A                     	;# 
   881  049B                     	;# 
   882  049C                     	;# 
   883  049D                     	;# 
   884  050C                     	;# 
   885  050C                     	;# 
   886  050D                     	;# 
   887  050E                     	;# 
   888  050F                     	;# 
   889  050F                     	;# 
   890  0510                     	;# 
   891  0511                     	;# 
   892  0512                     	;# 
   893  0512                     	;# 
   894  0513                     	;# 
   895  0514                     	;# 
   896  0515                     	;# 
   897  0515                     	;# 
   898  0516                     	;# 
   899  0517                     	;# 
   900  0518                     	;# 
   901  0519                     	;# 
   902  051A                     	;# 
   903  051B                     	;# 
   904  051C                     	;# 
   905  051D                     	;# 
   906  058C                     	;# 
   907  058C                     	;# 
   908  058D                     	;# 
   909  058E                     	;# 
   910  058F                     	;# 
   911  058F                     	;# 
   912  0590                     	;# 
   913  0591                     	;# 
   914  0592                     	;# 
   915  0593                     	;# 
   916  060C                     	;# 
   917  060D                     	;# 
   918  060E                     	;# 
   919  060F                     	;# 
   920  0610                     	;# 
   921  0611                     	;# 
   922  0612                     	;# 
   923  0613                     	;# 
   924  0614                     	;# 
   925  0616                     	;# 
   926  0617                     	;# 
   927  0618                     	;# 
   928  0619                     	;# 
   929  061A                     	;# 
   930  061B                     	;# 
   931  061C                     	;# 
   932  061D                     	;# 
   933  061E                     	;# 
   934  068C                     	;# 
   935  068D                     	;# 
   936  068E                     	;# 
   937  068F                     	;# 
   938  0690                     	;# 
   939  0691                     	;# 
   940  0692                     	;# 
   941  0693                     	;# 
   942  0694                     	;# 
   943  070C                     	;# 
   944  070D                     	;# 
   945  070E                     	;# 
   946  070F                     	;# 
   947  0710                     	;# 
   948  0711                     	;# 
   949  0712                     	;# 
   950  0713                     	;# 
   951  0714                     	;# 
   952  0716                     	;# 
   953  0717                     	;# 
   954  0718                     	;# 
   955  0719                     	;# 
   956  071A                     	;# 
   957  071B                     	;# 
   958  071C                     	;# 
   959  071D                     	;# 
   960  071E                     	;# 
   961  0796                     	;# 
   962  0797                     	;# 
   963  0798                     	;# 
   964  0799                     	;# 
   965  079A                     	;# 
   966  079B                     	;# 
   967  080C                     	;# 
   968  080D                     	;# 
   969  080E                     	;# 
   970  080F                     	;# 
   971  0810                     	;# 
   972  0811                     	;# 
   973  0812                     	;# 
   974  0813                     	;# 
   975  0814                     	;# 
   976  081A                     	;# 
   977  081B                     	;# 
   978  081C                     	;# 
   979  081D                     	;# 
   980  081E                     	;# 
   981  081F                     	;# 
   982  088C                     	;# 
   983  088D                     	;# 
   984  088E                     	;# 
   985  088F                     	;# 
   986  0890                     	;# 
   987  0891                     	;# 
   988  0892                     	;# 
   989  0893                     	;# 
   990  0895                     	;# 
   991  0896                     	;# 
   992  0897                     	;# 
   993  0898                     	;# 
   994  0899                     	;# 
   995  089A                     	;# 
   996  089B                     	;# 
   997  090C                     	;# 
   998  090E                     	;# 
   999  090F                     	;# 
  1000  091F                     	;# 
  1001  098F                     	;# 
  1002  098F                     	;# 
  1003  0990                     	;# 
  1004  0991                     	;# 
  1005  0992                     	;# 
  1006  0993                     	;# 
  1007  0994                     	;# 
  1008  0995                     	;# 
  1009  0996                     	;# 
  1010  0997                     	;# 
  1011  0E0F                     	;# 
  1012  0E10                     	;# 
  1013  0E11                     	;# 
  1014  0E12                     	;# 
  1015  0E13                     	;# 
  1016  0E14                     	;# 
  1017  0E15                     	;# 
  1018  0E16                     	;# 
  1019  0E17                     	;# 
  1020  0E18                     	;# 
  1021  0E19                     	;# 
  1022  0E1A                     	;# 
  1023  0E1B                     	;# 
  1024  0E1C                     	;# 
  1025  0E1D                     	;# 
  1026  0E1E                     	;# 
  1027  0E1F                     	;# 
  1028  0E20                     	;# 
  1029  0E21                     	;# 
  1030  0E22                     	;# 
  1031  0E23                     	;# 
  1032  0E24                     	;# 
  1033  0E25                     	;# 
  1034  0E26                     	;# 
  1035  0E27                     	;# 
  1036  0E28                     	;# 
  1037  0E29                     	;# 
  1038  0E2A                     	;# 
  1039  0E2B                     	;# 
  1040  0E2C                     	;# 
  1041  0E2D                     	;# 
  1042  0E2E                     	;# 
  1043  0E2F                     	;# 
  1044  0E30                     	;# 
  1045  0E31                     	;# 
  1046  0E32                     	;# 
  1047  0E33                     	;# 
  1048  0E34                     	;# 
  1049  0E35                     	;# 
  1050  0E36                     	;# 
  1051  0E37                     	;# 
  1052  0E8F                     	;# 
  1053  0E90                     	;# 
  1054  0E91                     	;# 
  1055  0E92                     	;# 
  1056  0E93                     	;# 
  1057  0E94                     	;# 
  1058  0E95                     	;# 
  1059  0E96                     	;# 
  1060  0E97                     	;# 
  1061  0E9C                     	;# 
  1062  0E9D                     	;# 
  1063  0E9E                     	;# 
  1064  0EA1                     	;# 
  1065  0EA2                     	;# 
  1066  0EA3                     	;# 
  1067  0EA4                     	;# 
  1068  0EA5                     	;# 
  1069  0EA9                     	;# 
  1070  0EAA                     	;# 
  1071  0EAB                     	;# 
  1072  0EAC                     	;# 
  1073  0EB1                     	;# 
  1074  0EB2                     	;# 
  1075  0EB3                     	;# 
  1076  0EB8                     	;# 
  1077  0EB9                     	;# 
  1078  0EBA                     	;# 
  1079  0EBB                     	;# 
  1080  0EBC                     	;# 
  1081  0EBD                     	;# 
  1082  0EBE                     	;# 
  1083  0EC3                     	;# 
  1084  0EC5                     	;# 
  1085  0EC6                     	;# 
  1086  0EC7                     	;# 
  1087  0EC8                     	;# 
  1088  0EC9                     	;# 
  1089  0ECA                     	;# 
  1090  0ECB                     	;# 
  1091  0ECC                     	;# 
  1092  0F10                     	;# 
  1093  0F11                     	;# 
  1094  0F12                     	;# 
  1095  0F13                     	;# 
  1096  0F14                     	;# 
  1097  0F15                     	;# 
  1098  0F16                     	;# 
  1099  0F17                     	;# 
  1100  0F18                     	;# 
  1101  0F19                     	;# 
  1102  0F1A                     	;# 
  1103  0F1B                     	;# 
  1104  0F1C                     	;# 
  1105  0F1D                     	;# 
  1106  0F1E                     	;# 
  1107  0F1F                     	;# 
  1108  0F20                     	;# 
  1109  0F21                     	;# 
  1110  0F22                     	;# 
  1111  0F23                     	;# 
  1112  0F24                     	;# 
  1113  0F25                     	;# 
  1114  0F26                     	;# 
  1115  0F27                     	;# 
  1116  0F28                     	;# 
  1117  0F29                     	;# 
  1118  0F2A                     	;# 
  1119  0F2B                     	;# 
  1120  0F2C                     	;# 
  1121  0F2D                     	;# 
  1122  0F2E                     	;# 
  1123  0F2F                     	;# 
  1124  0F30                     	;# 
  1125  0F31                     	;# 
  1126  0F32                     	;# 
  1127  0F38                     	;# 
  1128  0F39                     	;# 
  1129  0F3A                     	;# 
  1130  0F3B                     	;# 
  1131  0F3C                     	;# 
  1132  0F3D                     	;# 
  1133  0F3E                     	;# 
  1134  0F3F                     	;# 
  1135  0F40                     	;# 
  1136  0F41                     	;# 
  1137  0F43                     	;# 
  1138  0F44                     	;# 
  1139  0F45                     	;# 
  1140  0F46                     	;# 
  1141  0F47                     	;# 
  1142  0F48                     	;# 
  1143  0F49                     	;# 
  1144  0F4A                     	;# 
  1145  0F4B                     	;# 
  1146  0F4C                     	;# 
  1147  0F4E                     	;# 
  1148  0F4F                     	;# 
  1149  0F50                     	;# 
  1150  0F51                     	;# 
  1151  0F52                     	;# 
  1152  0F53                     	;# 
  1153  0F54                     	;# 
  1154  0F55                     	;# 
  1155  0F56                     	;# 
  1156  0F57                     	;# 
  1157  0F59                     	;# 
  1158  0F5A                     	;# 
  1159  0F5B                     	;# 
  1160  0F5C                     	;# 
  1161  0F5D                     	;# 
  1162  0F61                     	;# 
  1163  0F62                     	;# 
  1164  0F64                     	;# 
  1165  0F65                     	;# 
  1166  0F66                     	;# 
  1167  0F67                     	;# 
  1168  0F68                     	;# 
  1169  0F69                     	;# 
  1170  0F6A                     	;# 
  1171  0F6B                     	;# 
  1172  0F6C                     	;# 
  1173  0F6D                     	;# 
  1174  0FE4                     	;# 
  1175  0FE5                     	;# 
  1176  0FE6                     	;# 
  1177  0FE7                     	;# 
  1178  0FE8                     	;# 
  1179  0FE9                     	;# 
  1180  0FEA                     	;# 
  1181  0FEB                     	;# 
  1182  0FED                     	;# 
  1183  0FEE                     	;# 
  1184  0FEF                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0008                     	;# 
  1194  0009                     	;# 
  1195  000A                     	;# 
  1196  000B                     	;# 
  1197  000C                     	;# 
  1198  000D                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0017                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001C                     	;# 
  1213  001C                     	;# 
  1214  001D                     	;# 
  1215  001D                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  008C                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008E                     	;# 
  1223  008F                     	;# 
  1224  0090                     	;# 
  1225  0090                     	;# 
  1226  0091                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0096                     	;# 
  1231  0097                     	;# 
  1232  0098                     	;# 
  1233  0099                     	;# 
  1234  009A                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  010E                     	;# 
  1243  010F                     	;# 
  1244  0110                     	;# 
  1245  0110                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0119                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  011A                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011B                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011C                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011D                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011E                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011F                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  018E                     	;# 
  1284  018F                     	;# 
  1285  0190                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0196                     	;# 
  1289  0197                     	;# 
  1290  0198                     	;# 
  1291  0199                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  020C                     	;# 
  1296  020C                     	;# 
  1297  020D                     	;# 
  1298  020E                     	;# 
  1299  020F                     	;# 
  1300  020F                     	;# 
  1301  0210                     	;# 
  1302  0210                     	;# 
  1303  0211                     	;# 
  1304  0211                     	;# 
  1305  0212                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0216                     	;# 
  1313  0217                     	;# 
  1314  0217                     	;# 
  1315  0218                     	;# 
  1316  0218                     	;# 
  1317  0219                     	;# 
  1318  021A                     	;# 
  1319  021B                     	;# 
  1320  021B                     	;# 
  1321  021C                     	;# 
  1322  021C                     	;# 
  1323  021D                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  028C                     	;# 
  1328  028C                     	;# 
  1329  028D                     	;# 
  1330  028D                     	;# 
  1331  028E                     	;# 
  1332  028F                     	;# 
  1333  0290                     	;# 
  1334  0290                     	;# 
  1335  0291                     	;# 
  1336  0292                     	;# 
  1337  0292                     	;# 
  1338  0293                     	;# 
  1339  0293                     	;# 
  1340  0294                     	;# 
  1341  0295                     	;# 
  1342  0296                     	;# 
  1343  0296                     	;# 
  1344  0297                     	;# 
  1345  0298                     	;# 
  1346  0298                     	;# 
  1347  0299                     	;# 
  1348  0299                     	;# 
  1349  029A                     	;# 
  1350  029B                     	;# 
  1351  029C                     	;# 
  1352  029C                     	;# 
  1353  029D                     	;# 
  1354  030C                     	;# 
  1355  030C                     	;# 
  1356  030D                     	;# 
  1357  030E                     	;# 
  1358  030F                     	;# 
  1359  0310                     	;# 
  1360  0310                     	;# 
  1361  0311                     	;# 
  1362  0312                     	;# 
  1363  0313                     	;# 
  1364  0314                     	;# 
  1365  0314                     	;# 
  1366  0315                     	;# 
  1367  0316                     	;# 
  1368  0317                     	;# 
  1369  0318                     	;# 
  1370  0318                     	;# 
  1371  0319                     	;# 
  1372  031A                     	;# 
  1373  031B                     	;# 
  1374  031C                     	;# 
  1375  031C                     	;# 
  1376  031D                     	;# 
  1377  031E                     	;# 
  1378  031F                     	;# 
  1379  038C                     	;# 
  1380  038C                     	;# 
  1381  038D                     	;# 
  1382  038E                     	;# 
  1383  0390                     	;# 
  1384  0390                     	;# 
  1385  0391                     	;# 
  1386  0392                     	;# 
  1387  040C                     	;# 
  1388  040D                     	;# 
  1389  040E                     	;# 
  1390  040F                     	;# 
  1391  0410                     	;# 
  1392  0411                     	;# 
  1393  0416                     	;# 
  1394  0416                     	;# 
  1395  0417                     	;# 
  1396  0418                     	;# 
  1397  0418                     	;# 
  1398  0419                     	;# 
  1399  041A                     	;# 
  1400  041A                     	;# 
  1401  041B                     	;# 
  1402  041C                     	;# 
  1403  041C                     	;# 
  1404  041D                     	;# 
  1405  041E                     	;# 
  1406  041F                     	;# 
  1407  048C                     	;# 
  1408  048C                     	;# 
  1409  048D                     	;# 
  1410  048E                     	;# 
  1411  048F                     	;# 
  1412  048F                     	;# 
  1413  0490                     	;# 
  1414  0491                     	;# 
  1415  0492                     	;# 
  1416  0492                     	;# 
  1417  0493                     	;# 
  1418  0494                     	;# 
  1419  0495                     	;# 
  1420  0495                     	;# 
  1421  0496                     	;# 
  1422  0497                     	;# 
  1423  0498                     	;# 
  1424  0499                     	;# 
  1425  049A                     	;# 
  1426  049B                     	;# 
  1427  049C                     	;# 
  1428  049D                     	;# 
  1429  050C                     	;# 
  1430  050C                     	;# 
  1431  050D                     	;# 
  1432  050E                     	;# 
  1433  050F                     	;# 
  1434  050F                     	;# 
  1435  0510                     	;# 
  1436  0511                     	;# 
  1437  0512                     	;# 
  1438  0512                     	;# 
  1439  0513                     	;# 
  1440  0514                     	;# 
  1441  0515                     	;# 
  1442  0515                     	;# 
  1443  0516                     	;# 
  1444  0517                     	;# 
  1445  0518                     	;# 
  1446  0519                     	;# 
  1447  051A                     	;# 
  1448  051B                     	;# 
  1449  051C                     	;# 
  1450  051D                     	;# 
  1451  058C                     	;# 
  1452  058C                     	;# 
  1453  058D                     	;# 
  1454  058E                     	;# 
  1455  058F                     	;# 
  1456  058F                     	;# 
  1457  0590                     	;# 
  1458  0591                     	;# 
  1459  0592                     	;# 
  1460  0593                     	;# 
  1461  060C                     	;# 
  1462  060D                     	;# 
  1463  060E                     	;# 
  1464  060F                     	;# 
  1465  0610                     	;# 
  1466  0611                     	;# 
  1467  0612                     	;# 
  1468  0613                     	;# 
  1469  0614                     	;# 
  1470  0616                     	;# 
  1471  0617                     	;# 
  1472  0618                     	;# 
  1473  0619                     	;# 
  1474  061A                     	;# 
  1475  061B                     	;# 
  1476  061C                     	;# 
  1477  061D                     	;# 
  1478  061E                     	;# 
  1479  068C                     	;# 
  1480  068D                     	;# 
  1481  068E                     	;# 
  1482  068F                     	;# 
  1483  0690                     	;# 
  1484  0691                     	;# 
  1485  0692                     	;# 
  1486  0693                     	;# 
  1487  0694                     	;# 
  1488  070C                     	;# 
  1489  070D                     	;# 
  1490  070E                     	;# 
  1491  070F                     	;# 
  1492  0710                     	;# 
  1493  0711                     	;# 
  1494  0712                     	;# 
  1495  0713                     	;# 
  1496  0714                     	;# 
  1497  0716                     	;# 
  1498  0717                     	;# 
  1499  0718                     	;# 
  1500  0719                     	;# 
  1501  071A                     	;# 
  1502  071B                     	;# 
  1503  071C                     	;# 
  1504  071D                     	;# 
  1505  071E                     	;# 
  1506  0796                     	;# 
  1507  0797                     	;# 
  1508  0798                     	;# 
  1509  0799                     	;# 
  1510  079A                     	;# 
  1511  079B                     	;# 
  1512  080C                     	;# 
  1513  080D                     	;# 
  1514  080E                     	;# 
  1515  080F                     	;# 
  1516  0810                     	;# 
  1517  0811                     	;# 
  1518  0812                     	;# 
  1519  0813                     	;# 
  1520  0814                     	;# 
  1521  081A                     	;# 
  1522  081B                     	;# 
  1523  081C                     	;# 
  1524  081D                     	;# 
  1525  081E                     	;# 
  1526  081F                     	;# 
  1527  088C                     	;# 
  1528  088D                     	;# 
  1529  088E                     	;# 
  1530  088F                     	;# 
  1531  0890                     	;# 
  1532  0891                     	;# 
  1533  0892                     	;# 
  1534  0893                     	;# 
  1535  0895                     	;# 
  1536  0896                     	;# 
  1537  0897                     	;# 
  1538  0898                     	;# 
  1539  0899                     	;# 
  1540  089A                     	;# 
  1541  089B                     	;# 
  1542  090C                     	;# 
  1543  090E                     	;# 
  1544  090F                     	;# 
  1545  091F                     	;# 
  1546  098F                     	;# 
  1547  098F                     	;# 
  1548  0990                     	;# 
  1549  0991                     	;# 
  1550  0992                     	;# 
  1551  0993                     	;# 
  1552  0994                     	;# 
  1553  0995                     	;# 
  1554  0996                     	;# 
  1555  0997                     	;# 
  1556  0E0F                     	;# 
  1557  0E10                     	;# 
  1558  0E11                     	;# 
  1559  0E12                     	;# 
  1560  0E13                     	;# 
  1561  0E14                     	;# 
  1562  0E15                     	;# 
  1563  0E16                     	;# 
  1564  0E17                     	;# 
  1565  0E18                     	;# 
  1566  0E19                     	;# 
  1567  0E1A                     	;# 
  1568  0E1B                     	;# 
  1569  0E1C                     	;# 
  1570  0E1D                     	;# 
  1571  0E1E                     	;# 
  1572  0E1F                     	;# 
  1573  0E20                     	;# 
  1574  0E21                     	;# 
  1575  0E22                     	;# 
  1576  0E23                     	;# 
  1577  0E24                     	;# 
  1578  0E25                     	;# 
  1579  0E26                     	;# 
  1580  0E27                     	;# 
  1581  0E28                     	;# 
  1582  0E29                     	;# 
  1583  0E2A                     	;# 
  1584  0E2B                     	;# 
  1585  0E2C                     	;# 
  1586  0E2D                     	;# 
  1587  0E2E                     	;# 
  1588  0E2F                     	;# 
  1589  0E30                     	;# 
  1590  0E31                     	;# 
  1591  0E32                     	;# 
  1592  0E33                     	;# 
  1593  0E34                     	;# 
  1594  0E35                     	;# 
  1595  0E36                     	;# 
  1596  0E37                     	;# 
  1597  0E8F                     	;# 
  1598  0E90                     	;# 
  1599  0E91                     	;# 
  1600  0E92                     	;# 
  1601  0E93                     	;# 
  1602  0E94                     	;# 
  1603  0E95                     	;# 
  1604  0E96                     	;# 
  1605  0E97                     	;# 
  1606  0E9C                     	;# 
  1607  0E9D                     	;# 
  1608  0E9E                     	;# 
  1609  0EA1                     	;# 
  1610  0EA2                     	;# 
  1611  0EA3                     	;# 
  1612  0EA4                     	;# 
  1613  0EA5                     	;# 
  1614  0EA9                     	;# 
  1615  0EAA                     	;# 
  1616  0EAB                     	;# 
  1617  0EAC                     	;# 
  1618  0EB1                     	;# 
  1619  0EB2                     	;# 
  1620  0EB3                     	;# 
  1621  0EB8                     	;# 
  1622  0EB9                     	;# 
  1623  0EBA                     	;# 
  1624  0EBB                     	;# 
  1625  0EBC                     	;# 
  1626  0EBD                     	;# 
  1627  0EBE                     	;# 
  1628  0EC3                     	;# 
  1629  0EC5                     	;# 
  1630  0EC6                     	;# 
  1631  0EC7                     	;# 
  1632  0EC8                     	;# 
  1633  0EC9                     	;# 
  1634  0ECA                     	;# 
  1635  0ECB                     	;# 
  1636  0ECC                     	;# 
  1637  0F10                     	;# 
  1638  0F11                     	;# 
  1639  0F12                     	;# 
  1640  0F13                     	;# 
  1641  0F14                     	;# 
  1642  0F15                     	;# 
  1643  0F16                     	;# 
  1644  0F17                     	;# 
  1645  0F18                     	;# 
  1646  0F19                     	;# 
  1647  0F1A                     	;# 
  1648  0F1B                     	;# 
  1649  0F1C                     	;# 
  1650  0F1D                     	;# 
  1651  0F1E                     	;# 
  1652  0F1F                     	;# 
  1653  0F20                     	;# 
  1654  0F21                     	;# 
  1655  0F22                     	;# 
  1656  0F23                     	;# 
  1657  0F24                     	;# 
  1658  0F25                     	;# 
  1659  0F26                     	;# 
  1660  0F27                     	;# 
  1661  0F28                     	;# 
  1662  0F29                     	;# 
  1663  0F2A                     	;# 
  1664  0F2B                     	;# 
  1665  0F2C                     	;# 
  1666  0F2D                     	;# 
  1667  0F2E                     	;# 
  1668  0F2F                     	;# 
  1669  0F30                     	;# 
  1670  0F31                     	;# 
  1671  0F32                     	;# 
  1672  0F38                     	;# 
  1673  0F39                     	;# 
  1674  0F3A                     	;# 
  1675  0F3B                     	;# 
  1676  0F3C                     	;# 
  1677  0F3D                     	;# 
  1678  0F3E                     	;# 
  1679  0F3F                     	;# 
  1680  0F40                     	;# 
  1681  0F41                     	;# 
  1682  0F43                     	;# 
  1683  0F44                     	;# 
  1684  0F45                     	;# 
  1685  0F46                     	;# 
  1686  0F47                     	;# 
  1687  0F48                     	;# 
  1688  0F49                     	;# 
  1689  0F4A                     	;# 
  1690  0F4B                     	;# 
  1691  0F4C                     	;# 
  1692  0F4E                     	;# 
  1693  0F4F                     	;# 
  1694  0F50                     	;# 
  1695  0F51                     	;# 
  1696  0F52                     	;# 
  1697  0F53                     	;# 
  1698  0F54                     	;# 
  1699  0F55                     	;# 
  1700  0F56                     	;# 
  1701  0F57                     	;# 
  1702  0F59                     	;# 
  1703  0F5A                     	;# 
  1704  0F5B                     	;# 
  1705  0F5C                     	;# 
  1706  0F5D                     	;# 
  1707  0F61                     	;# 
  1708  0F62                     	;# 
  1709  0F64                     	;# 
  1710  0F65                     	;# 
  1711  0F66                     	;# 
  1712  0F67                     	;# 
  1713  0F68                     	;# 
  1714  0F69                     	;# 
  1715  0F6A                     	;# 
  1716  0F6B                     	;# 
  1717  0F6C                     	;# 
  1718  0F6D                     	;# 
  1719  0FE4                     	;# 
  1720  0FE5                     	;# 
  1721  0FE6                     	;# 
  1722  0FE7                     	;# 
  1723  0FE8                     	;# 
  1724  0FE9                     	;# 
  1725  0FEA                     	;# 
  1726  0FEB                     	;# 
  1727  0FED                     	;# 
  1728  0FEE                     	;# 
  1729  0FEF                     	;# 
  1730  0000                     	;# 
  1731  0001                     	;# 
  1732  0002                     	;# 
  1733  0003                     	;# 
  1734  0004                     	;# 
  1735  0005                     	;# 
  1736  0006                     	;# 
  1737  0007                     	;# 
  1738  0008                     	;# 
  1739  0009                     	;# 
  1740  000A                     	;# 
  1741  000B                     	;# 
  1742  000C                     	;# 
  1743  000D                     	;# 
  1744  000E                     	;# 
  1745  000F                     	;# 
  1746  0010                     	;# 
  1747  0011                     	;# 
  1748  0012                     	;# 
  1749  0013                     	;# 
  1750  0014                     	;# 
  1751  0015                     	;# 
  1752  0016                     	;# 
  1753  0017                     	;# 
  1754  0018                     	;# 
  1755  0019                     	;# 
  1756  001A                     	;# 
  1757  001C                     	;# 
  1758  001C                     	;# 
  1759  001D                     	;# 
  1760  001D                     	;# 
  1761  001E                     	;# 
  1762  001F                     	;# 
  1763  008C                     	;# 
  1764  008C                     	;# 
  1765  008D                     	;# 
  1766  008E                     	;# 
  1767  008E                     	;# 
  1768  008F                     	;# 
  1769  0090                     	;# 
  1770  0090                     	;# 
  1771  0091                     	;# 
  1772  0093                     	;# 
  1773  0094                     	;# 
  1774  0095                     	;# 
  1775  0096                     	;# 
  1776  0097                     	;# 
  1777  0098                     	;# 
  1778  0099                     	;# 
  1779  009A                     	;# 
  1780  009B                     	;# 
  1781  009C                     	;# 
  1782  009D                     	;# 
  1783  009E                     	;# 
  1784  010C                     	;# 
  1785  010D                     	;# 
  1786  010E                     	;# 
  1787  010E                     	;# 
  1788  010F                     	;# 
  1789  0110                     	;# 
  1790  0110                     	;# 
  1791  0111                     	;# 
  1792  0112                     	;# 
  1793  0112                     	;# 
  1794  0113                     	;# 
  1795  0114                     	;# 
  1796  0114                     	;# 
  1797  0115                     	;# 
  1798  0116                     	;# 
  1799  0116                     	;# 
  1800  0117                     	;# 
  1801  0119                     	;# 
  1802  0119                     	;# 
  1803  0119                     	;# 
  1804  011A                     	;# 
  1805  011A                     	;# 
  1806  011A                     	;# 
  1807  011B                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011C                     	;# 
  1813  011C                     	;# 
  1814  011C                     	;# 
  1815  011D                     	;# 
  1816  011D                     	;# 
  1817  011D                     	;# 
  1818  011E                     	;# 
  1819  011E                     	;# 
  1820  011E                     	;# 
  1821  011F                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  018C                     	;# 
  1827  018D                     	;# 
  1828  018E                     	;# 
  1829  018F                     	;# 
  1830  0190                     	;# 
  1831  0191                     	;# 
  1832  0192                     	;# 
  1833  0196                     	;# 
  1834  0197                     	;# 
  1835  0198                     	;# 
  1836  0199                     	;# 
  1837  019A                     	;# 
  1838  019B                     	;# 
  1839  019C                     	;# 
  1840  020C                     	;# 
  1841  020C                     	;# 
  1842  020D                     	;# 
  1843  020E                     	;# 
  1844  020F                     	;# 
  1845  020F                     	;# 
  1846  0210                     	;# 
  1847  0210                     	;# 
  1848  0211                     	;# 
  1849  0211                     	;# 
  1850  0212                     	;# 
  1851  0212                     	;# 
  1852  0213                     	;# 
  1853  0214                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0216                     	;# 
  1857  0216                     	;# 
  1858  0217                     	;# 
  1859  0217                     	;# 
  1860  0218                     	;# 
  1861  0218                     	;# 
  1862  0219                     	;# 
  1863  021A                     	;# 
  1864  021B                     	;# 
  1865  021B                     	;# 
  1866  021C                     	;# 
  1867  021C                     	;# 
  1868  021D                     	;# 
  1869  021D                     	;# 
  1870  021E                     	;# 
  1871  021F                     	;# 
  1872  028C                     	;# 
  1873  028C                     	;# 
  1874  028D                     	;# 
  1875  028D                     	;# 
  1876  028E                     	;# 
  1877  028F                     	;# 
  1878  0290                     	;# 
  1879  0290                     	;# 
  1880  0291                     	;# 
  1881  0292                     	;# 
  1882  0292                     	;# 
  1883  0293                     	;# 
  1884  0293                     	;# 
  1885  0294                     	;# 
  1886  0295                     	;# 
  1887  0296                     	;# 
  1888  0296                     	;# 
  1889  0297                     	;# 
  1890  0298                     	;# 
  1891  0298                     	;# 
  1892  0299                     	;# 
  1893  0299                     	;# 
  1894  029A                     	;# 
  1895  029B                     	;# 
  1896  029C                     	;# 
  1897  029C                     	;# 
  1898  029D                     	;# 
  1899  030C                     	;# 
  1900  030C                     	;# 
  1901  030D                     	;# 
  1902  030E                     	;# 
  1903  030F                     	;# 
  1904  0310                     	;# 
  1905  0310                     	;# 
  1906  0311                     	;# 
  1907  0312                     	;# 
  1908  0313                     	;# 
  1909  0314                     	;# 
  1910  0314                     	;# 
  1911  0315                     	;# 
  1912  0316                     	;# 
  1913  0317                     	;# 
  1914  0318                     	;# 
  1915  0318                     	;# 
  1916  0319                     	;# 
  1917  031A                     	;# 
  1918  031B                     	;# 
  1919  031C                     	;# 
  1920  031C                     	;# 
  1921  031D                     	;# 
  1922  031E                     	;# 
  1923  031F                     	;# 
  1924  038C                     	;# 
  1925  038C                     	;# 
  1926  038D                     	;# 
  1927  038E                     	;# 
  1928  0390                     	;# 
  1929  0390                     	;# 
  1930  0391                     	;# 
  1931  0392                     	;# 
  1932  040C                     	;# 
  1933  040D                     	;# 
  1934  040E                     	;# 
  1935  040F                     	;# 
  1936  0410                     	;# 
  1937  0411                     	;# 
  1938  0416                     	;# 
  1939  0416                     	;# 
  1940  0417                     	;# 
  1941  0418                     	;# 
  1942  0418                     	;# 
  1943  0419                     	;# 
  1944  041A                     	;# 
  1945  041A                     	;# 
  1946  041B                     	;# 
  1947  041C                     	;# 
  1948  041C                     	;# 
  1949  041D                     	;# 
  1950  041E                     	;# 
  1951  041F                     	;# 
  1952  048C                     	;# 
  1953  048C                     	;# 
  1954  048D                     	;# 
  1955  048E                     	;# 
  1956  048F                     	;# 
  1957  048F                     	;# 
  1958  0490                     	;# 
  1959  0491                     	;# 
  1960  0492                     	;# 
  1961  0492                     	;# 
  1962  0493                     	;# 
  1963  0494                     	;# 
  1964  0495                     	;# 
  1965  0495                     	;# 
  1966  0496                     	;# 
  1967  0497                     	;# 
  1968  0498                     	;# 
  1969  0499                     	;# 
  1970  049A                     	;# 
  1971  049B                     	;# 
  1972  049C                     	;# 
  1973  049D                     	;# 
  1974  050C                     	;# 
  1975  050C                     	;# 
  1976  050D                     	;# 
  1977  050E                     	;# 
  1978  050F                     	;# 
  1979  050F                     	;# 
  1980  0510                     	;# 
  1981  0511                     	;# 
  1982  0512                     	;# 
  1983  0512                     	;# 
  1984  0513                     	;# 
  1985  0514                     	;# 
  1986  0515                     	;# 
  1987  0515                     	;# 
  1988  0516                     	;# 
  1989  0517                     	;# 
  1990  0518                     	;# 
  1991  0519                     	;# 
  1992  051A                     	;# 
  1993  051B                     	;# 
  1994  051C                     	;# 
  1995  051D                     	;# 
  1996  058C                     	;# 
  1997  058C                     	;# 
  1998  058D                     	;# 
  1999  058E                     	;# 
  2000  058F                     	;# 
  2001  058F                     	;# 
  2002  0590                     	;# 
  2003  0591                     	;# 
  2004  0592                     	;# 
  2005  0593                     	;# 
  2006  060C                     	;# 
  2007  060D                     	;# 
  2008  060E                     	;# 
  2009  060F                     	;# 
  2010  0610                     	;# 
  2011  0611                     	;# 
  2012  0612                     	;# 
  2013  0613                     	;# 
  2014  0614                     	;# 
  2015  0616                     	;# 
  2016  0617                     	;# 
  2017  0618                     	;# 
  2018  0619                     	;# 
  2019  061A                     	;# 
  2020  061B                     	;# 
  2021  061C                     	;# 
  2022  061D                     	;# 
  2023  061E                     	;# 
  2024  068C                     	;# 
  2025  068D                     	;# 
  2026  068E                     	;# 
  2027  068F                     	;# 
  2028  0690                     	;# 
  2029  0691                     	;# 
  2030  0692                     	;# 
  2031  0693                     	;# 
  2032  0694                     	;# 
  2033  070C                     	;# 
  2034  070D                     	;# 
  2035  070E                     	;# 
  2036  070F                     	;# 
  2037  0710                     	;# 
  2038  0711                     	;# 
  2039  0712                     	;# 
  2040  0713                     	;# 
  2041  0714                     	;# 
  2042  0716                     	;# 
  2043  0717                     	;# 
  2044  0718                     	;# 
  2045  0719                     	;# 
  2046  071A                     	;# 
  2047  071B                     	;# 
  2048  071C                     	;# 
  2049  071D                     	;# 
  2050  071E                     	;# 
  2051  0796                     	;# 
  2052  0797                     	;# 
  2053  0798                     	;# 
  2054  0799                     	;# 
  2055  079A                     	;# 
  2056  079B                     	;# 
  2057  080C                     	;# 
  2058  080D                     	;# 
  2059  080E                     	;# 
  2060  080F                     	;# 
  2061  0810                     	;# 
  2062  0811                     	;# 
  2063  0812                     	;# 
  2064  0813                     	;# 
  2065  0814                     	;# 
  2066  081A                     	;# 
  2067  081B                     	;# 
  2068  081C                     	;# 
  2069  081D                     	;# 
  2070  081E                     	;# 
  2071  081F                     	;# 
  2072  088C                     	;# 
  2073  088D                     	;# 
  2074  088E                     	;# 
  2075  088F                     	;# 
  2076  0890                     	;# 
  2077  0891                     	;# 
  2078  0892                     	;# 
  2079  0893                     	;# 
  2080  0895                     	;# 
  2081  0896                     	;# 
  2082  0897                     	;# 
  2083  0898                     	;# 
  2084  0899                     	;# 
  2085  089A                     	;# 
  2086  089B                     	;# 
  2087  090C                     	;# 
  2088  090E                     	;# 
  2089  090F                     	;# 
  2090  091F                     	;# 
  2091  098F                     	;# 
  2092  098F                     	;# 
  2093  0990                     	;# 
  2094  0991                     	;# 
  2095  0992                     	;# 
  2096  0993                     	;# 
  2097  0994                     	;# 
  2098  0995                     	;# 
  2099  0996                     	;# 
  2100  0997                     	;# 
  2101  0E0F                     	;# 
  2102  0E10                     	;# 
  2103  0E11                     	;# 
  2104  0E12                     	;# 
  2105  0E13                     	;# 
  2106  0E14                     	;# 
  2107  0E15                     	;# 
  2108  0E16                     	;# 
  2109  0E17                     	;# 
  2110  0E18                     	;# 
  2111  0E19                     	;# 
  2112  0E1A                     	;# 
  2113  0E1B                     	;# 
  2114  0E1C                     	;# 
  2115  0E1D                     	;# 
  2116  0E1E                     	;# 
  2117  0E1F                     	;# 
  2118  0E20                     	;# 
  2119  0E21                     	;# 
  2120  0E22                     	;# 
  2121  0E23                     	;# 
  2122  0E24                     	;# 
  2123  0E25                     	;# 
  2124  0E26                     	;# 
  2125  0E27                     	;# 
  2126  0E28                     	;# 
  2127  0E29                     	;# 
  2128  0E2A                     	;# 
  2129  0E2B                     	;# 
  2130  0E2C                     	;# 
  2131  0E2D                     	;# 
  2132  0E2E                     	;# 
  2133  0E2F                     	;# 
  2134  0E30                     	;# 
  2135  0E31                     	;# 
  2136  0E32                     	;# 
  2137  0E33                     	;# 
  2138  0E34                     	;# 
  2139  0E35                     	;# 
  2140  0E36                     	;# 
  2141  0E37                     	;# 
  2142  0E8F                     	;# 
  2143  0E90                     	;# 
  2144  0E91                     	;# 
  2145  0E92                     	;# 
  2146  0E93                     	;# 
  2147  0E94                     	;# 
  2148  0E95                     	;# 
  2149  0E96                     	;# 
  2150  0E97                     	;# 
  2151  0E9C                     	;# 
  2152  0E9D                     	;# 
  2153  0E9E                     	;# 
  2154  0EA1                     	;# 
  2155  0EA2                     	;# 
  2156  0EA3                     	;# 
  2157  0EA4                     	;# 
  2158  0EA5                     	;# 
  2159  0EA9                     	;# 
  2160  0EAA                     	;# 
  2161  0EAB                     	;# 
  2162  0EAC                     	;# 
  2163  0EB1                     	;# 
  2164  0EB2                     	;# 
  2165  0EB3                     	;# 
  2166  0EB8                     	;# 
  2167  0EB9                     	;# 
  2168  0EBA                     	;# 
  2169  0EBB                     	;# 
  2170  0EBC                     	;# 
  2171  0EBD                     	;# 
  2172  0EBE                     	;# 
  2173  0EC3                     	;# 
  2174  0EC5                     	;# 
  2175  0EC6                     	;# 
  2176  0EC7                     	;# 
  2177  0EC8                     	;# 
  2178  0EC9                     	;# 
  2179  0ECA                     	;# 
  2180  0ECB                     	;# 
  2181  0ECC                     	;# 
  2182  0F10                     	;# 
  2183  0F11                     	;# 
  2184  0F12                     	;# 
  2185  0F13                     	;# 
  2186  0F14                     	;# 
  2187  0F15                     	;# 
  2188  0F16                     	;# 
  2189  0F17                     	;# 
  2190  0F18                     	;# 
  2191  0F19                     	;# 
  2192  0F1A                     	;# 
  2193  0F1B                     	;# 
  2194  0F1C                     	;# 
  2195  0F1D                     	;# 
  2196  0F1E                     	;# 
  2197  0F1F                     	;# 
  2198  0F20                     	;# 
  2199  0F21                     	;# 
  2200  0F22                     	;# 
  2201  0F23                     	;# 
  2202  0F24                     	;# 
  2203  0F25                     	;# 
  2204  0F26                     	;# 
  2205  0F27                     	;# 
  2206  0F28                     	;# 
  2207  0F29                     	;# 
  2208  0F2A                     	;# 
  2209  0F2B                     	;# 
  2210  0F2C                     	;# 
  2211  0F2D                     	;# 
  2212  0F2E                     	;# 
  2213  0F2F                     	;# 
  2214  0F30                     	;# 
  2215  0F31                     	;# 
  2216  0F32                     	;# 
  2217  0F38                     	;# 
  2218  0F39                     	;# 
  2219  0F3A                     	;# 
  2220  0F3B                     	;# 
  2221  0F3C                     	;# 
  2222  0F3D                     	;# 
  2223  0F3E                     	;# 
  2224  0F3F                     	;# 
  2225  0F40                     	;# 
  2226  0F41                     	;# 
  2227  0F43                     	;# 
  2228  0F44                     	;# 
  2229  0F45                     	;# 
  2230  0F46                     	;# 
  2231  0F47                     	;# 
  2232  0F48                     	;# 
  2233  0F49                     	;# 
  2234  0F4A                     	;# 
  2235  0F4B                     	;# 
  2236  0F4C                     	;# 
  2237  0F4E                     	;# 
  2238  0F4F                     	;# 
  2239  0F50                     	;# 
  2240  0F51                     	;# 
  2241  0F52                     	;# 
  2242  0F53                     	;# 
  2243  0F54                     	;# 
  2244  0F55                     	;# 
  2245  0F56                     	;# 
  2246  0F57                     	;# 
  2247  0F59                     	;# 
  2248  0F5A                     	;# 
  2249  0F5B                     	;# 
  2250  0F5C                     	;# 
  2251  0F5D                     	;# 
  2252  0F61                     	;# 
  2253  0F62                     	;# 
  2254  0F64                     	;# 
  2255  0F65                     	;# 
  2256  0F66                     	;# 
  2257  0F67                     	;# 
  2258  0F68                     	;# 
  2259  0F69                     	;# 
  2260  0F6A                     	;# 
  2261  0F6B                     	;# 
  2262  0F6C                     	;# 
  2263  0F6D                     	;# 
  2264  0FE4                     	;# 
  2265  0FE5                     	;# 
  2266  0FE6                     	;# 
  2267  0FE7                     	;# 
  2268  0FE8                     	;# 
  2269  0FE9                     	;# 
  2270  0FEA                     	;# 
  2271  0FEB                     	;# 
  2272  0FED                     	;# 
  2273  0FEE                     	;# 
  2274  0FEF                     	;# 
  2275  0000                     	;# 
  2276  0001                     	;# 
  2277  0002                     	;# 
  2278  0003                     	;# 
  2279  0004                     	;# 
  2280  0005                     	;# 
  2281  0006                     	;# 
  2282  0007                     	;# 
  2283  0008                     	;# 
  2284  0009                     	;# 
  2285  000A                     	;# 
  2286  000B                     	;# 
  2287  000C                     	;# 
  2288  000D                     	;# 
  2289  000E                     	;# 
  2290  000F                     	;# 
  2291  0010                     	;# 
  2292  0011                     	;# 
  2293  0012                     	;# 
  2294  0013                     	;# 
  2295  0014                     	;# 
  2296  0015                     	;# 
  2297  0016                     	;# 
  2298  0017                     	;# 
  2299  0018                     	;# 
  2300  0019                     	;# 
  2301  001A                     	;# 
  2302  001C                     	;# 
  2303  001C                     	;# 
  2304  001D                     	;# 
  2305  001D                     	;# 
  2306  001E                     	;# 
  2307  001F                     	;# 
  2308  008C                     	;# 
  2309  008C                     	;# 
  2310  008D                     	;# 
  2311  008E                     	;# 
  2312  008E                     	;# 
  2313  008F                     	;# 
  2314  0090                     	;# 
  2315  0090                     	;# 
  2316  0091                     	;# 
  2317  0093                     	;# 
  2318  0094                     	;# 
  2319  0095                     	;# 
  2320  0096                     	;# 
  2321  0097                     	;# 
  2322  0098                     	;# 
  2323  0099                     	;# 
  2324  009A                     	;# 
  2325  009B                     	;# 
  2326  009C                     	;# 
  2327  009D                     	;# 
  2328  009E                     	;# 
  2329  010C                     	;# 
  2330  010D                     	;# 
  2331  010E                     	;# 
  2332  010E                     	;# 
  2333  010F                     	;# 
  2334  0110                     	;# 
  2335  0110                     	;# 
  2336  0111                     	;# 
  2337  0112                     	;# 
  2338  0112                     	;# 
  2339  0113                     	;# 
  2340  0114                     	;# 
  2341  0114                     	;# 
  2342  0115                     	;# 
  2343  0116                     	;# 
  2344  0116                     	;# 
  2345  0117                     	;# 
  2346  0119                     	;# 
  2347  0119                     	;# 
  2348  0119                     	;# 
  2349  011A                     	;# 
  2350  011A                     	;# 
  2351  011A                     	;# 
  2352  011B                     	;# 
  2353  011B                     	;# 
  2354  011B                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011C                     	;# 
  2358  011C                     	;# 
  2359  011C                     	;# 
  2360  011D                     	;# 
  2361  011D                     	;# 
  2362  011D                     	;# 
  2363  011E                     	;# 
  2364  011E                     	;# 
  2365  011E                     	;# 
  2366  011F                     	;# 
  2367  011F                     	;# 
  2368  011F                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  018C                     	;# 
  2372  018D                     	;# 
  2373  018E                     	;# 
  2374  018F                     	;# 
  2375  0190                     	;# 
  2376  0191                     	;# 
  2377  0192                     	;# 
  2378  0196                     	;# 
  2379  0197                     	;# 
  2380  0198                     	;# 
  2381  0199                     	;# 
  2382  019A                     	;# 
  2383  019B                     	;# 
  2384  019C                     	;# 
  2385  020C                     	;# 
  2386  020C                     	;# 
  2387  020D                     	;# 
  2388  020E                     	;# 
  2389  020F                     	;# 
  2390  020F                     	;# 
  2391  0210                     	;# 
  2392  0210                     	;# 
  2393  0211                     	;# 
  2394  0211                     	;# 
  2395  0212                     	;# 
  2396  0212                     	;# 
  2397  0213                     	;# 
  2398  0214                     	;# 
  2399  0215                     	;# 
  2400  0215                     	;# 
  2401  0216                     	;# 
  2402  0216                     	;# 
  2403  0217                     	;# 
  2404  0217                     	;# 
  2405  0218                     	;# 
  2406  0218                     	;# 
  2407  0219                     	;# 
  2408  021A                     	;# 
  2409  021B                     	;# 
  2410  021B                     	;# 
  2411  021C                     	;# 
  2412  021C                     	;# 
  2413  021D                     	;# 
  2414  021D                     	;# 
  2415  021E                     	;# 
  2416  021F                     	;# 
  2417  028C                     	;# 
  2418  028C                     	;# 
  2419  028D                     	;# 
  2420  028D                     	;# 
  2421  028E                     	;# 
  2422  028F                     	;# 
  2423  0290                     	;# 
  2424  0290                     	;# 
  2425  0291                     	;# 
  2426  0292                     	;# 
  2427  0292                     	;# 
  2428  0293                     	;# 
  2429  0293                     	;# 
  2430  0294                     	;# 
  2431  0295                     	;# 
  2432  0296                     	;# 
  2433  0296                     	;# 
  2434  0297                     	;# 
  2435  0298                     	;# 
  2436  0298                     	;# 
  2437  0299                     	;# 
  2438  0299                     	;# 
  2439  029A                     	;# 
  2440  029B                     	;# 
  2441  029C                     	;# 
  2442  029C                     	;# 
  2443  029D                     	;# 
  2444  030C                     	;# 
  2445  030C                     	;# 
  2446  030D                     	;# 
  2447  030E                     	;# 
  2448  030F                     	;# 
  2449  0310                     	;# 
  2450  0310                     	;# 
  2451  0311                     	;# 
  2452  0312                     	;# 
  2453  0313                     	;# 
  2454  0314                     	;# 
  2455  0314                     	;# 
  2456  0315                     	;# 
  2457  0316                     	;# 
  2458  0317                     	;# 
  2459  0318                     	;# 
  2460  0318                     	;# 
  2461  0319                     	;# 
  2462  031A                     	;# 
  2463  031B                     	;# 
  2464  031C                     	;# 
  2465  031C                     	;# 
  2466  031D                     	;# 
  2467  031E                     	;# 
  2468  031F                     	;# 
  2469  038C                     	;# 
  2470  038C                     	;# 
  2471  038D                     	;# 
  2472  038E                     	;# 
  2473  0390                     	;# 
  2474  0390                     	;# 
  2475  0391                     	;# 
  2476  0392                     	;# 
  2477  040C                     	;# 
  2478  040D                     	;# 
  2479  040E                     	;# 
  2480  040F                     	;# 
  2481  0410                     	;# 
  2482  0411                     	;# 
  2483  0416                     	;# 
  2484  0416                     	;# 
  2485  0417                     	;# 
  2486  0418                     	;# 
  2487  0418                     	;# 
  2488  0419                     	;# 
  2489  041A                     	;# 
  2490  041A                     	;# 
  2491  041B                     	;# 
  2492  041C                     	;# 
  2493  041C                     	;# 
  2494  041D                     	;# 
  2495  041E                     	;# 
  2496  041F                     	;# 
  2497  048C                     	;# 
  2498  048C                     	;# 
  2499  048D                     	;# 
  2500  048E                     	;# 
  2501  048F                     	;# 
  2502  048F                     	;# 
  2503  0490                     	;# 
  2504  0491                     	;# 
  2505  0492                     	;# 
  2506  0492                     	;# 
  2507  0493                     	;# 
  2508  0494                     	;# 
  2509  0495                     	;# 
  2510  0495                     	;# 
  2511  0496                     	;# 
  2512  0497                     	;# 
  2513  0498                     	;# 
  2514  0499                     	;# 
  2515  049A                     	;# 
  2516  049B                     	;# 
  2517  049C                     	;# 
  2518  049D                     	;# 
  2519  050C                     	;# 
  2520  050C                     	;# 
  2521  050D                     	;# 
  2522  050E                     	;# 
  2523  050F                     	;# 
  2524  050F                     	;# 
  2525  0510                     	;# 
  2526  0511                     	;# 
  2527  0512                     	;# 
  2528  0512                     	;# 
  2529  0513                     	;# 
  2530  0514                     	;# 
  2531  0515                     	;# 
  2532  0515                     	;# 
  2533  0516                     	;# 
  2534  0517                     	;# 
  2535  0518                     	;# 
  2536  0519                     	;# 
  2537  051A                     	;# 
  2538  051B                     	;# 
  2539  051C                     	;# 
  2540  051D                     	;# 
  2541  058C                     	;# 
  2542  058C                     	;# 
  2543  058D                     	;# 
  2544  058E                     	;# 
  2545  058F                     	;# 
  2546  058F                     	;# 
  2547  0590                     	;# 
  2548  0591                     	;# 
  2549  0592                     	;# 
  2550  0593                     	;# 
  2551  060C                     	;# 
  2552  060D                     	;# 
  2553  060E                     	;# 
  2554  060F                     	;# 
  2555  0610                     	;# 
  2556  0611                     	;# 
  2557  0612                     	;# 
  2558  0613                     	;# 
  2559  0614                     	;# 
  2560  0616                     	;# 
  2561  0617                     	;# 
  2562  0618                     	;# 
  2563  0619                     	;# 
  2564  061A                     	;# 
  2565  061B                     	;# 
  2566  061C                     	;# 
  2567  061D                     	;# 
  2568  061E                     	;# 
  2569  068C                     	;# 
  2570  068D                     	;# 
  2571  068E                     	;# 
  2572  068F                     	;# 
  2573  0690                     	;# 
  2574  0691                     	;# 
  2575  0692                     	;# 
  2576  0693                     	;# 
  2577  0694                     	;# 
  2578  070C                     	;# 
  2579  070D                     	;# 
  2580  070E                     	;# 
  2581  070F                     	;# 
  2582  0710                     	;# 
  2583  0711                     	;# 
  2584  0712                     	;# 
  2585  0713                     	;# 
  2586  0714                     	;# 
  2587  0716                     	;# 
  2588  0717                     	;# 
  2589  0718                     	;# 
  2590  0719                     	;# 
  2591  071A                     	;# 
  2592  071B                     	;# 
  2593  071C                     	;# 
  2594  071D                     	;# 
  2595  071E                     	;# 
  2596  0796                     	;# 
  2597  0797                     	;# 
  2598  0798                     	;# 
  2599  0799                     	;# 
  2600  079A                     	;# 
  2601  079B                     	;# 
  2602  080C                     	;# 
  2603  080D                     	;# 
  2604  080E                     	;# 
  2605  080F                     	;# 
  2606  0810                     	;# 
  2607  0811                     	;# 
  2608  0812                     	;# 
  2609  0813                     	;# 
  2610  0814                     	;# 
  2611  081A                     	;# 
  2612  081B                     	;# 
  2613  081C                     	;# 
  2614  081D                     	;# 
  2615  081E                     	;# 
  2616  081F                     	;# 
  2617  088C                     	;# 
  2618  088D                     	;# 
  2619  088E                     	;# 
  2620  088F                     	;# 
  2621  0890                     	;# 
  2622  0891                     	;# 
  2623  0892                     	;# 
  2624  0893                     	;# 
  2625  0895                     	;# 
  2626  0896                     	;# 
  2627  0897                     	;# 
  2628  0898                     	;# 
  2629  0899                     	;# 
  2630  089A                     	;# 
  2631  089B                     	;# 
  2632  090C                     	;# 
  2633  090E                     	;# 
  2634  090F                     	;# 
  2635  091F                     	;# 
  2636  098F                     	;# 
  2637  098F                     	;# 
  2638  0990                     	;# 
  2639  0991                     	;# 
  2640  0992                     	;# 
  2641  0993                     	;# 
  2642  0994                     	;# 
  2643  0995                     	;# 
  2644  0996                     	;# 
  2645  0997                     	;# 
  2646  0E0F                     	;# 
  2647  0E10                     	;# 
  2648  0E11                     	;# 
  2649  0E12                     	;# 
  2650  0E13                     	;# 
  2651  0E14                     	;# 
  2652  0E15                     	;# 
  2653  0E16                     	;# 
  2654  0E17                     	;# 
  2655  0E18                     	;# 
  2656  0E19                     	;# 
  2657  0E1A                     	;# 
  2658  0E1B                     	;# 
  2659  0E1C                     	;# 
  2660  0E1D                     	;# 
  2661  0E1E                     	;# 
  2662  0E1F                     	;# 
  2663  0E20                     	;# 
  2664  0E21                     	;# 
  2665  0E22                     	;# 
  2666  0E23                     	;# 
  2667  0E24                     	;# 
  2668  0E25                     	;# 
  2669  0E26                     	;# 
  2670  0E27                     	;# 
  2671  0E28                     	;# 
  2672  0E29                     	;# 
  2673  0E2A                     	;# 
  2674  0E2B                     	;# 
  2675  0E2C                     	;# 
  2676  0E2D                     	;# 
  2677  0E2E                     	;# 
  2678  0E2F                     	;# 
  2679  0E30                     	;# 
  2680  0E31                     	;# 
  2681  0E32                     	;# 
  2682  0E33                     	;# 
  2683  0E34                     	;# 
  2684  0E35                     	;# 
  2685  0E36                     	;# 
  2686  0E37                     	;# 
  2687  0E8F                     	;# 
  2688  0E90                     	;# 
  2689  0E91                     	;# 
  2690  0E92                     	;# 
  2691  0E93                     	;# 
  2692  0E94                     	;# 
  2693  0E95                     	;# 
  2694  0E96                     	;# 
  2695  0E97                     	;# 
  2696  0E9C                     	;# 
  2697  0E9D                     	;# 
  2698  0E9E                     	;# 
  2699  0EA1                     	;# 
  2700  0EA2                     	;# 
  2701  0EA3                     	;# 
  2702  0EA4                     	;# 
  2703  0EA5                     	;# 
  2704  0EA9                     	;# 
  2705  0EAA                     	;# 
  2706  0EAB                     	;# 
  2707  0EAC                     	;# 
  2708  0EB1                     	;# 
  2709  0EB2                     	;# 
  2710  0EB3                     	;# 
  2711  0EB8                     	;# 
  2712  0EB9                     	;# 
  2713  0EBA                     	;# 
  2714  0EBB                     	;# 
  2715  0EBC                     	;# 
  2716  0EBD                     	;# 
  2717  0EBE                     	;# 
  2718  0EC3                     	;# 
  2719  0EC5                     	;# 
  2720  0EC6                     	;# 
  2721  0EC7                     	;# 
  2722  0EC8                     	;# 
  2723  0EC9                     	;# 
  2724  0ECA                     	;# 
  2725  0ECB                     	;# 
  2726  0ECC                     	;# 
  2727  0F10                     	;# 
  2728  0F11                     	;# 
  2729  0F12                     	;# 
  2730  0F13                     	;# 
  2731  0F14                     	;# 
  2732  0F15                     	;# 
  2733  0F16                     	;# 
  2734  0F17                     	;# 
  2735  0F18                     	;# 
  2736  0F19                     	;# 
  2737  0F1A                     	;# 
  2738  0F1B                     	;# 
  2739  0F1C                     	;# 
  2740  0F1D                     	;# 
  2741  0F1E                     	;# 
  2742  0F1F                     	;# 
  2743  0F20                     	;# 
  2744  0F21                     	;# 
  2745  0F22                     	;# 
  2746  0F23                     	;# 
  2747  0F24                     	;# 
  2748  0F25                     	;# 
  2749  0F26                     	;# 
  2750  0F27                     	;# 
  2751  0F28                     	;# 
  2752  0F29                     	;# 
  2753  0F2A                     	;# 
  2754  0F2B                     	;# 
  2755  0F2C                     	;# 
  2756  0F2D                     	;# 
  2757  0F2E                     	;# 
  2758  0F2F                     	;# 
  2759  0F30                     	;# 
  2760  0F31                     	;# 
  2761  0F32                     	;# 
  2762  0F38                     	;# 
  2763  0F39                     	;# 
  2764  0F3A                     	;# 
  2765  0F3B                     	;# 
  2766  0F3C                     	;# 
  2767  0F3D                     	;# 
  2768  0F3E                     	;# 
  2769  0F3F                     	;# 
  2770  0F40                     	;# 
  2771  0F41                     	;# 
  2772  0F43                     	;# 
  2773  0F44                     	;# 
  2774  0F45                     	;# 
  2775  0F46                     	;# 
  2776  0F47                     	;# 
  2777  0F48                     	;# 
  2778  0F49                     	;# 
  2779  0F4A                     	;# 
  2780  0F4B                     	;# 
  2781  0F4C                     	;# 
  2782  0F4E                     	;# 
  2783  0F4F                     	;# 
  2784  0F50                     	;# 
  2785  0F51                     	;# 
  2786  0F52                     	;# 
  2787  0F53                     	;# 
  2788  0F54                     	;# 
  2789  0F55                     	;# 
  2790  0F56                     	;# 
  2791  0F57                     	;# 
  2792  0F59                     	;# 
  2793  0F5A                     	;# 
  2794  0F5B                     	;# 
  2795  0F5C                     	;# 
  2796  0F5D                     	;# 
  2797  0F61                     	;# 
  2798  0F62                     	;# 
  2799  0F64                     	;# 
  2800  0F65                     	;# 
  2801  0F66                     	;# 
  2802  0F67                     	;# 
  2803  0F68                     	;# 
  2804  0F69                     	;# 
  2805  0F6A                     	;# 
  2806  0F6B                     	;# 
  2807  0F6C                     	;# 
  2808  0F6D                     	;# 
  2809  0FE4                     	;# 
  2810  0FE5                     	;# 
  2811  0FE6                     	;# 
  2812  0FE7                     	;# 
  2813  0FE8                     	;# 
  2814  0FE9                     	;# 
  2815  0FEA                     	;# 
  2816  0FEB                     	;# 
  2817  0FED                     	;# 
  2818  0FEE                     	;# 
  2819  0FEF                     	;# 
  2820  0000                     	;# 
  2821  0001                     	;# 
  2822  0002                     	;# 
  2823  0003                     	;# 
  2824  0004                     	;# 
  2825  0005                     	;# 
  2826  0006                     	;# 
  2827  0007                     	;# 
  2828  0008                     	;# 
  2829  0009                     	;# 
  2830  000A                     	;# 
  2831  000B                     	;# 
  2832  000C                     	;# 
  2833  000D                     	;# 
  2834  000E                     	;# 
  2835  000F                     	;# 
  2836  0010                     	;# 
  2837  0011                     	;# 
  2838  0012                     	;# 
  2839  0013                     	;# 
  2840  0014                     	;# 
  2841  0015                     	;# 
  2842  0016                     	;# 
  2843  0017                     	;# 
  2844  0018                     	;# 
  2845  0019                     	;# 
  2846  001A                     	;# 
  2847  001C                     	;# 
  2848  001C                     	;# 
  2849  001D                     	;# 
  2850  001D                     	;# 
  2851  001E                     	;# 
  2852  001F                     	;# 
  2853  008C                     	;# 
  2854  008C                     	;# 
  2855  008D                     	;# 
  2856  008E                     	;# 
  2857  008E                     	;# 
  2858  008F                     	;# 
  2859  0090                     	;# 
  2860  0090                     	;# 
  2861  0091                     	;# 
  2862  0093                     	;# 
  2863  0094                     	;# 
  2864  0095                     	;# 
  2865  0096                     	;# 
  2866  0097                     	;# 
  2867  0098                     	;# 
  2868  0099                     	;# 
  2869  009A                     	;# 
  2870  009B                     	;# 
  2871  009C                     	;# 
  2872  009D                     	;# 
  2873  009E                     	;# 
  2874  010C                     	;# 
  2875  010D                     	;# 
  2876  010E                     	;# 
  2877  010E                     	;# 
  2878  010F                     	;# 
  2879  0110                     	;# 
  2880  0110                     	;# 
  2881  0111                     	;# 
  2882  0112                     	;# 
  2883  0112                     	;# 
  2884  0113                     	;# 
  2885  0114                     	;# 
  2886  0114                     	;# 
  2887  0115                     	;# 
  2888  0116                     	;# 
  2889  0116                     	;# 
  2890  0117                     	;# 
  2891  0119                     	;# 
  2892  0119                     	;# 
  2893  0119                     	;# 
  2894  011A                     	;# 
  2895  011A                     	;# 
  2896  011A                     	;# 
  2897  011B                     	;# 
  2898  011B                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011C                     	;# 
  2903  011C                     	;# 
  2904  011C                     	;# 
  2905  011D                     	;# 
  2906  011D                     	;# 
  2907  011D                     	;# 
  2908  011E                     	;# 
  2909  011E                     	;# 
  2910  011E                     	;# 
  2911  011F                     	;# 
  2912  011F                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  018C                     	;# 
  2917  018D                     	;# 
  2918  018E                     	;# 
  2919  018F                     	;# 
  2920  0190                     	;# 
  2921  0191                     	;# 
  2922  0192                     	;# 
  2923  0196                     	;# 
  2924  0197                     	;# 
  2925  0198                     	;# 
  2926  0199                     	;# 
  2927  019A                     	;# 
  2928  019B                     	;# 
  2929  019C                     	;# 
  2930  020C                     	;# 
  2931  020C                     	;# 
  2932  020D                     	;# 
  2933  020E                     	;# 
  2934  020F                     	;# 
  2935  020F                     	;# 
  2936  0210                     	;# 
  2937  0210                     	;# 
  2938  0211                     	;# 
  2939  0211                     	;# 
  2940  0212                     	;# 
  2941  0212                     	;# 
  2942  0213                     	;# 
  2943  0214                     	;# 
  2944  0215                     	;# 
  2945  0215                     	;# 
  2946  0216                     	;# 
  2947  0216                     	;# 
  2948  0217                     	;# 
  2949  0217                     	;# 
  2950  0218                     	;# 
  2951  0218                     	;# 
  2952  0219                     	;# 
  2953  021A                     	;# 
  2954  021B                     	;# 
  2955  021B                     	;# 
  2956  021C                     	;# 
  2957  021C                     	;# 
  2958  021D                     	;# 
  2959  021D                     	;# 
  2960  021E                     	;# 
  2961  021F                     	;# 
  2962  028C                     	;# 
  2963  028C                     	;# 
  2964  028D                     	;# 
  2965  028D                     	;# 
  2966  028E                     	;# 
  2967  028F                     	;# 
  2968  0290                     	;# 
  2969  0290                     	;# 
  2970  0291                     	;# 
  2971  0292                     	;# 
  2972  0292                     	;# 
  2973  0293                     	;# 
  2974  0293                     	;# 
  2975  0294                     	;# 
  2976  0295                     	;# 
  2977  0296                     	;# 
  2978  0296                     	;# 
  2979  0297                     	;# 
  2980  0298                     	;# 
  2981  0298                     	;# 
  2982  0299                     	;# 
  2983  0299                     	;# 
  2984  029A                     	;# 
  2985  029B                     	;# 
  2986  029C                     	;# 
  2987  029C                     	;# 
  2988  029D                     	;# 
  2989  030C                     	;# 
  2990  030C                     	;# 
  2991  030D                     	;# 
  2992  030E                     	;# 
  2993  030F                     	;# 
  2994  0310                     	;# 
  2995  0310                     	;# 
  2996  0311                     	;# 
  2997  0312                     	;# 
  2998  0313                     	;# 
  2999  0314                     	;# 
  3000  0314                     	;# 
  3001  0315                     	;# 
  3002  0316                     	;# 
  3003  0317                     	;# 
  3004  0318                     	;# 
  3005  0318                     	;# 
  3006  0319                     	;# 
  3007  031A                     	;# 
  3008  031B                     	;# 
  3009  031C                     	;# 
  3010  031C                     	;# 
  3011  031D                     	;# 
  3012  031E                     	;# 
  3013  031F                     	;# 
  3014  038C                     	;# 
  3015  038C                     	;# 
  3016  038D                     	;# 
  3017  038E                     	;# 
  3018  0390                     	;# 
  3019  0390                     	;# 
  3020  0391                     	;# 
  3021  0392                     	;# 
  3022  040C                     	;# 
  3023  040D                     	;# 
  3024  040E                     	;# 
  3025  040F                     	;# 
  3026  0410                     	;# 
  3027  0411                     	;# 
  3028  0416                     	;# 
  3029  0416                     	;# 
  3030  0417                     	;# 
  3031  0418                     	;# 
  3032  0418                     	;# 
  3033  0419                     	;# 
  3034  041A                     	;# 
  3035  041A                     	;# 
  3036  041B                     	;# 
  3037  041C                     	;# 
  3038  041C                     	;# 
  3039  041D                     	;# 
  3040  041E                     	;# 
  3041  041F                     	;# 
  3042  048C                     	;# 
  3043  048C                     	;# 
  3044  048D                     	;# 
  3045  048E                     	;# 
  3046  048F                     	;# 
  3047  048F                     	;# 
  3048  0490                     	;# 
  3049  0491                     	;# 
  3050  0492                     	;# 
  3051  0492                     	;# 
  3052  0493                     	;# 
  3053  0494                     	;# 
  3054  0495                     	;# 
  3055  0495                     	;# 
  3056  0496                     	;# 
  3057  0497                     	;# 
  3058  0498                     	;# 
  3059  0499                     	;# 
  3060  049A                     	;# 
  3061  049B                     	;# 
  3062  049C                     	;# 
  3063  049D                     	;# 
  3064  050C                     	;# 
  3065  050C                     	;# 
  3066  050D                     	;# 
  3067  050E                     	;# 
  3068  050F                     	;# 
  3069  050F                     	;# 
  3070  0510                     	;# 
  3071  0511                     	;# 
  3072  0512                     	;# 
  3073  0512                     	;# 
  3074  0513                     	;# 
  3075  0514                     	;# 
  3076  0515                     	;# 
  3077  0515                     	;# 
  3078  0516                     	;# 
  3079  0517                     	;# 
  3080  0518                     	;# 
  3081  0519                     	;# 
  3082  051A                     	;# 
  3083  051B                     	;# 
  3084  051C                     	;# 
  3085  051D                     	;# 
  3086  058C                     	;# 
  3087  058C                     	;# 
  3088  058D                     	;# 
  3089  058E                     	;# 
  3090  058F                     	;# 
  3091  058F                     	;# 
  3092  0590                     	;# 
  3093  0591                     	;# 
  3094  0592                     	;# 
  3095  0593                     	;# 
  3096  060C                     	;# 
  3097  060D                     	;# 
  3098  060E                     	;# 
  3099  060F                     	;# 
  3100  0610                     	;# 
  3101  0611                     	;# 
  3102  0612                     	;# 
  3103  0613                     	;# 
  3104  0614                     	;# 
  3105  0616                     	;# 
  3106  0617                     	;# 
  3107  0618                     	;# 
  3108  0619                     	;# 
  3109  061A                     	;# 
  3110  061B                     	;# 
  3111  061C                     	;# 
  3112  061D                     	;# 
  3113  061E                     	;# 
  3114  068C                     	;# 
  3115  068D                     	;# 
  3116  068E                     	;# 
  3117  068F                     	;# 
  3118  0690                     	;# 
  3119  0691                     	;# 
  3120  0692                     	;# 
  3121  0693                     	;# 
  3122  0694                     	;# 
  3123  070C                     	;# 
  3124  070D                     	;# 
  3125  070E                     	;# 
  3126  070F                     	;# 
  3127  0710                     	;# 
  3128  0711                     	;# 
  3129  0712                     	;# 
  3130  0713                     	;# 
  3131  0714                     	;# 
  3132  0716                     	;# 
  3133  0717                     	;# 
  3134  0718                     	;# 
  3135  0719                     	;# 
  3136  071A                     	;# 
  3137  071B                     	;# 
  3138  071C                     	;# 
  3139  071D                     	;# 
  3140  071E                     	;# 
  3141  0796                     	;# 
  3142  0797                     	;# 
  3143  0798                     	;# 
  3144  0799                     	;# 
  3145  079A                     	;# 
  3146  079B                     	;# 
  3147  080C                     	;# 
  3148  080D                     	;# 
  3149  080E                     	;# 
  3150  080F                     	;# 
  3151  0810                     	;# 
  3152  0811                     	;# 
  3153  0812                     	;# 
  3154  0813                     	;# 
  3155  0814                     	;# 
  3156  081A                     	;# 
  3157  081B                     	;# 
  3158  081C                     	;# 
  3159  081D                     	;# 
  3160  081E                     	;# 
  3161  081F                     	;# 
  3162  088C                     	;# 
  3163  088D                     	;# 
  3164  088E                     	;# 
  3165  088F                     	;# 
  3166  0890                     	;# 
  3167  0891                     	;# 
  3168  0892                     	;# 
  3169  0893                     	;# 
  3170  0895                     	;# 
  3171  0896                     	;# 
  3172  0897                     	;# 
  3173  0898                     	;# 
  3174  0899                     	;# 
  3175  089A                     	;# 
  3176  089B                     	;# 
  3177  090C                     	;# 
  3178  090E                     	;# 
  3179  090F                     	;# 
  3180  091F                     	;# 
  3181  098F                     	;# 
  3182  098F                     	;# 
  3183  0990                     	;# 
  3184  0991                     	;# 
  3185  0992                     	;# 
  3186  0993                     	;# 
  3187  0994                     	;# 
  3188  0995                     	;# 
  3189  0996                     	;# 
  3190  0997                     	;# 
  3191  0E0F                     	;# 
  3192  0E10                     	;# 
  3193  0E11                     	;# 
  3194  0E12                     	;# 
  3195  0E13                     	;# 
  3196  0E14                     	;# 
  3197  0E15                     	;# 
  3198  0E16                     	;# 
  3199  0E17                     	;# 
  3200  0E18                     	;# 
  3201  0E19                     	;# 
  3202  0E1A                     	;# 
  3203  0E1B                     	;# 
  3204  0E1C                     	;# 
  3205  0E1D                     	;# 
  3206  0E1E                     	;# 
  3207  0E1F                     	;# 
  3208  0E20                     	;# 
  3209  0E21                     	;# 
  3210  0E22                     	;# 
  3211  0E23                     	;# 
  3212  0E24                     	;# 
  3213  0E25                     	;# 
  3214  0E26                     	;# 
  3215  0E27                     	;# 
  3216  0E28                     	;# 
  3217  0E29                     	;# 
  3218  0E2A                     	;# 
  3219  0E2B                     	;# 
  3220  0E2C                     	;# 
  3221  0E2D                     	;# 
  3222  0E2E                     	;# 
  3223  0E2F                     	;# 
  3224  0E30                     	;# 
  3225  0E31                     	;# 
  3226  0E32                     	;# 
  3227  0E33                     	;# 
  3228  0E34                     	;# 
  3229  0E35                     	;# 
  3230  0E36                     	;# 
  3231  0E37                     	;# 
  3232  0E8F                     	;# 
  3233  0E90                     	;# 
  3234  0E91                     	;# 
  3235  0E92                     	;# 
  3236  0E93                     	;# 
  3237  0E94                     	;# 
  3238  0E95                     	;# 
  3239  0E96                     	;# 
  3240  0E97                     	;# 
  3241  0E9C                     	;# 
  3242  0E9D                     	;# 
  3243  0E9E                     	;# 
  3244  0EA1                     	;# 
  3245  0EA2                     	;# 
  3246  0EA3                     	;# 
  3247  0EA4                     	;# 
  3248  0EA5                     	;# 
  3249  0EA9                     	;# 
  3250  0EAA                     	;# 
  3251  0EAB                     	;# 
  3252  0EAC                     	;# 
  3253  0EB1                     	;# 
  3254  0EB2                     	;# 
  3255  0EB3                     	;# 
  3256  0EB8                     	;# 
  3257  0EB9                     	;# 
  3258  0EBA                     	;# 
  3259  0EBB                     	;# 
  3260  0EBC                     	;# 
  3261  0EBD                     	;# 
  3262  0EBE                     	;# 
  3263  0EC3                     	;# 
  3264  0EC5                     	;# 
  3265  0EC6                     	;# 
  3266  0EC7                     	;# 
  3267  0EC8                     	;# 
  3268  0EC9                     	;# 
  3269  0ECA                     	;# 
  3270  0ECB                     	;# 
  3271  0ECC                     	;# 
  3272  0F10                     	;# 
  3273  0F11                     	;# 
  3274  0F12                     	;# 
  3275  0F13                     	;# 
  3276  0F14                     	;# 
  3277  0F15                     	;# 
  3278  0F16                     	;# 
  3279  0F17                     	;# 
  3280  0F18                     	;# 
  3281  0F19                     	;# 
  3282  0F1A                     	;# 
  3283  0F1B                     	;# 
  3284  0F1C                     	;# 
  3285  0F1D                     	;# 
  3286  0F1E                     	;# 
  3287  0F1F                     	;# 
  3288  0F20                     	;# 
  3289  0F21                     	;# 
  3290  0F22                     	;# 
  3291  0F23                     	;# 
  3292  0F24                     	;# 
  3293  0F25                     	;# 
  3294  0F26                     	;# 
  3295  0F27                     	;# 
  3296  0F28                     	;# 
  3297  0F29                     	;# 
  3298  0F2A                     	;# 
  3299  0F2B                     	;# 
  3300  0F2C                     	;# 
  3301  0F2D                     	;# 
  3302  0F2E                     	;# 
  3303  0F2F                     	;# 
  3304  0F30                     	;# 
  3305  0F31                     	;# 
  3306  0F32                     	;# 
  3307  0F38                     	;# 
  3308  0F39                     	;# 
  3309  0F3A                     	;# 
  3310  0F3B                     	;# 
  3311  0F3C                     	;# 
  3312  0F3D                     	;# 
  3313  0F3E                     	;# 
  3314  0F3F                     	;# 
  3315  0F40                     	;# 
  3316  0F41                     	;# 
  3317  0F43                     	;# 
  3318  0F44                     	;# 
  3319  0F45                     	;# 
  3320  0F46                     	;# 
  3321  0F47                     	;# 
  3322  0F48                     	;# 
  3323  0F49                     	;# 
  3324  0F4A                     	;# 
  3325  0F4B                     	;# 
  3326  0F4C                     	;# 
  3327  0F4E                     	;# 
  3328  0F4F                     	;# 
  3329  0F50                     	;# 
  3330  0F51                     	;# 
  3331  0F52                     	;# 
  3332  0F53                     	;# 
  3333  0F54                     	;# 
  3334  0F55                     	;# 
  3335  0F56                     	;# 
  3336  0F57                     	;# 
  3337  0F59                     	;# 
  3338  0F5A                     	;# 
  3339  0F5B                     	;# 
  3340  0F5C                     	;# 
  3341  0F5D                     	;# 
  3342  0F61                     	;# 
  3343  0F62                     	;# 
  3344  0F64                     	;# 
  3345  0F65                     	;# 
  3346  0F66                     	;# 
  3347  0F67                     	;# 
  3348  0F68                     	;# 
  3349  0F69                     	;# 
  3350  0F6A                     	;# 
  3351  0F6B                     	;# 
  3352  0F6C                     	;# 
  3353  0F6D                     	;# 
  3354  0FE4                     	;# 
  3355  0FE5                     	;# 
  3356  0FE6                     	;# 
  3357  0FE7                     	;# 
  3358  0FE8                     	;# 
  3359  0FE9                     	;# 
  3360  0FEA                     	;# 
  3361  0FEB                     	;# 
  3362  0FED                     	;# 
  3363  0FEE                     	;# 
  3364  0FEF                     	;_lutRY
  3365                           
  3366                           	psect	idataCOMMON
  3367  0002                     __pidataCOMMON:	
  3368                           
  3369                           ;initializer for _analogMode
  3370  0002  3401               	retlw	1
  3371                           
  3372                           ;initializer for _rxData
  3373  0003  34F7               	retlw	247
  3374                           
  3375                           	psect	idataBANK0
  3376  0F78                     __pidataBANK0:	
  3377                           
  3378                           ;initializer for _responseLength
  3379  0F78  3409               	retlw	9
  3380                           
  3381                           ;initializer for _analogMax
  3382  0F79  34FF               	retlw	255
  3383                           
  3384                           ;initializer for _debounceLoops
  3385  0F7A  3403               	retlw	3
  3386                           
  3387                           ;initializer for _defaultAnalogSticks
  3388  0F7B  3401               	retlw	1
  3389                           
  3390                           ;initializer for _lyData
  3391  0F7C  34F7               	retlw	247
  3392                           
  3393                           ;initializer for _lxData
  3394  0F7D  34F7               	retlw	247
  3395                           
  3396                           ;initializer for _ryData
  3397  0F7E  34F7               	retlw	247
  3398                           
  3399                           ;initializer for _digitalStateSecond
  3400  0F7F  34FF               	retlw	255
  3401                           
  3402                           ;initializer for _digitalStateFirst
  3403  0F80  34FF               	retlw	255
  3404                           
  3405                           ;initializer for _response
  3406  0F81  349E               	retlw	158
  3407  0F82  345A               	retlw	90
  3408  0F83  3400               	retlw	0
  3409  0F84  3400               	retlw	0
  3410  0F85  3400               	retlw	0
  3411  0F86  3400               	retlw	0
  3412  0F87  3400               	retlw	0
  3413  0F88  3400               	retlw	0
  3414  0F89  3400               	retlw	0
  3415  0F8A  3400               	retlw	0
  3416  0F8B  3400               	retlw	0
  3417  0F8C  3400               	retlw	0
  3418  0F8D  3400               	retlw	0
  3419  0F8E  3400               	retlw	0
  3420  0F8F  3400               	retlw	0
  3421  0F90  3400               	retlw	0
  3422  0F91  3400               	retlw	0
  3423  0F92  3400               	retlw	0
  3424  0F93  3400               	retlw	0
  3425  0F94  3400               	retlw	0
  3426  0011                     _TRISAbits	set	17
  3427  0013                     _TRISCbits	set	19
  3428  0015                     _TRISE	set	21
  3429  0014                     _TRISD	set	20
  3430  0013                     _TRISC	set	19
  3431  0012                     _TRISB	set	18
  3432  0011                     _TRISA	set	17
  3433  000B                     _INTCONbits	set	11
  3434  006B                     _RB3	set	107
  3435  006A                     _RB2	set	106
  3436  006D                     _RB5	set	109
  3437  006C                     _RB4	set	108
  3438  0061                     _RA1	set	97
  3439  0062                     _RA2	set	98
  3440  0063                     _RA3	set	99
  3441  0060                     _RA0	set	96
  3442  006F                     _RB7	set	111
  3443  006E                     _RB6	set	110
  3444  0072                     _RC2	set	114
  3445  0078                     _RD0	set	120
  3446  0069                     _RB1	set	105
  3447  0068                     _RB0	set	104
  3448  0066                     _RA6	set	102
  3449  0067                     _RA7	set	103
  3450  0065                     _RA5	set	101
  3451  0064                     _RA4	set	100
  3452  007C                     _RD4	set	124
  3453  0098                     _ADCLK	set	152
  3454  009A                     _ADREF	set	154
  3455  0095                     _ADCON2	set	149
  3456  0094                     _ADCON1	set	148
  3457  0093                     _ADCON0	set	147
  3458  008C                     _ADRESL	set	140
  3459  008D                     _ADRESH	set	141
  3460  0093                     _ADCON0bits	set	147
  3461  009D                     _ADACQ	set	157
  3462  009C                     _ADPRE	set	156
  3463  009E                     _ADPCH	set	158
  3464  018F                     _SSP1STATbits	set	399
  3465  0190                     _SSP1CON1	set	400
  3466  018F                     _SSP1STAT	set	399
  3467  018C                     _SSP1BUF	set	396
  3468  38C8                     _SSP1IE	set	14536
  3469  3878                     _SSP1IF	set	14456
  3470  081F                     _NVMCON2	set	2079
  3471  081C                     _NVMDATL	set	2076
  3472  081A                     _NVMADRL	set	2074
  3473  081B                     _NVMADRH	set	2075
  3474  081E                     _NVMCON1bits	set	2078
  3475  0E8F                     _PPSLOCK	set	3727
  3476  0F25                     _RC5PPS	set	3877
  3477  0F65                     _WPUE	set	3941
  3478  0F5A                     _WPUD	set	3930
  3479  0F4F                     _WPUC	set	3919
  3480  0F44                     _WPUB	set	3908
  3481  0F39                     _WPUA	set	3897
  3482  0F64                     _ANSELE	set	3940
  3483  0F59                     _ANSELD	set	3929
  3484  0F4E                     _ANSELC	set	3918
  3485  0F43                     _ANSELB	set	3907
  3486  0F38                     _ANSELA	set	3896
  3487                           
  3488                           ; #config settings
  3489  0000                     
  3490                           	psect	cinit
  3491  0154                     start_initialization:	
  3492  0154                     __initialization:		;BIGRAM
  3493                           
  3494                           ; Initialize objects allocated to COMMON
  3495  0154  3180  2002  3181   	fcall	__pidataCOMMON	;fetch initializer
  3496  0157  00F8               	movwf	__pdataCOMMON& (0+127)
  3497  0158  3180  2003  3181   	fcall	__pidataCOMMON+1	;fetch initializer
  3498  015B  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  3499                           
  3500                           ; Initialize objects allocated to BANK0
  3501  015C  3078               	movlw	low __pidataBANK0
  3502  015D  0084               	movwf	4
  3503  015E  308F               	movlw	(high __pidataBANK0)| (0+128)
  3504  015F  0085               	movwf	5
  3505  0160  3050               	movlw	low __pdataBANK0
  3506  0161  0086               	movwf	6
  3507  0162  3000               	movlw	high __pdataBANK0
  3508  0163  0087               	movwf	7
  3509  0164  3000               	movlw	0
  3510  0165  00FF               	movwf	btemp+1
  3511  0166  301D               	movlw	29
  3512  0167  318F  2740  3181   	fcall	init_ram
  3513                           
  3514                           ; Clear objects allocated to BIGRAM
  3515  016A  30F0               	movlw	low (0+9200)
  3516  016B  0084               	movwf	4
  3517  016C  3023               	movlw	high (0+9200)
  3518  016D  0085               	movwf	5
  3519  016E  3000               	movlw	0
  3520  016F  00FE               	movwf	btemp
  3521  0170  3004               	movlw	4
  3522  0171  00FF               	movwf	btemp+1
  3523  0172  318F  2734  3181   	fcall	clear_ram0
  3524                           
  3525                           ; Clear objects allocated to COMMON
  3526  0175  01F5               	clrf	__pbssCOMMON& (0+127)
  3527  0176  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  3528  0177  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  3529                           
  3530                           ; Clear objects allocated to BANK0
  3531  0178  01ED               	clrf	__pbssBANK0& (0+127)
  3532  0179  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3533                           
  3534                           ; Clear objects allocated to BANK1
  3535  017A  30A0               	movlw	low __pbssBANK1
  3536  017B  0084               	movwf	4
  3537  017C  3000               	movlw	high __pbssBANK1
  3538  017D  0085               	movwf	5
  3539  017E  3040               	movlw	64
  3540  017F  00FE               	movwf	btemp
  3541  0180  3000               	movlw	0
  3542  0181  00FF               	movwf	btemp+1
  3543  0182  318F  2734         	fcall	clear_ram0
  3544  0184                     end_of_initialization:	
  3545                           ;End of C runtime variable initialization code
  3546                           
  3547  0184                     __end_of__initialization:	
  3548  0184  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3549  0185  0020               	movlb	0
  3550  0186  3187  2F30         	ljmp	_main	;jump to C main() function
  3551                           
  3552                           	psect	bssCOMMON
  3553  0075                     __pbssCOMMON:	
  3554  0075                     _previousCmd:	
  3555  0075                     	ds	1
  3556  0076                     _cmdCounter:	
  3557  0076                     	ds	1
  3558  0077                     _index:	
  3559  0077                     	ds	1
  3560                           
  3561                           	psect	dataCOMMON
  3562  0078                     __pdataCOMMON:	
  3563  0078                     _analogMode:	
  3564  0078                     	ds	1
  3565  0079                     _rxData:	
  3566  0079                     	ds	1
  3567                           
  3568                           	psect	bssBANK0
  3569  006D                     __pbssBANK0:	
  3570  006D                     _escapeMode:	
  3571  006D                     	ds	1
  3572  006E                     _analogMin:	
  3573  006E                     	ds	1
  3574                           
  3575                           	psect	dataBANK0
  3576  0050                     __pdataBANK0:	
  3577  0050                     _responseLength:	
  3578  0050                     	ds	1
  3579  0051                     _analogMax:	
  3580  0051                     	ds	1
  3581  0052                     _debounceLoops:	
  3582  0052                     	ds	1
  3583  0053                     _defaultAnalogSticks:	
  3584  0053                     	ds	1
  3585  0054                     _lyData:	
  3586  0054                     	ds	1
  3587  0055                     _lxData:	
  3588  0055                     	ds	1
  3589  0056                     _ryData:	
  3590  0056                     	ds	1
  3591  0057                     _digitalStateSecond:	
  3592  0057                     	ds	1
  3593  0058                     _digitalStateFirst:	
  3594  0058                     	ds	1
  3595  0059                     _response:	
  3596  0059                     	ds	20
  3597                           
  3598                           	psect	bssBANK1
  3599  00A0                     __pbssBANK1:	
  3600  00A0                     _IndexDigitalByte2:	
  3601  00A0                     	ds	8
  3602  00A8                     _IndexDigitalByte1:	
  3603  00A8                     	ds	8
  3604  00B0                     _PreviousDigitalByte2:	
  3605  00B0                     	ds	8
  3606  00B8                     _PreviousDigitalByte1:	
  3607  00B8                     	ds	8
  3608  00C0                     _DigitalControllerByte2:	
  3609  00C0                     	ds	8
  3610  00C8                     _DigitalControllerByte1:	
  3611  00C8                     	ds	8
  3612  00D0                     _analogStateSecond:	
  3613  00D0                     	ds	8
  3614  00D8                     _analogStateFirst:	
  3615  00D8                     	ds	8
  3616                           
  3617                           	psect	inittext
  3618  0F40                     init_ram:	
  3619  0F40  00FE               	movwf	126
  3620  0F41                     initloop:	
  3621  0F41  0012               	moviw fsr0++
  3622  0F42  001E               	movwi fsr1++
  3623  0F43  3001               	movlw	1
  3624  0F44  02FE               	subwf	126,f
  3625  0F45  3000               	movlw	0
  3626  0F46  3BFF               	subwfb	127,f
  3627  0F47  087F               	movf	127,w
  3628  0F48  047E               	iorwf	126,w
  3629  0F49  1903               	btfsc	3,2
  3630  0F4A  3400               	retlw	0
  3631  0F4B  2F41               	goto	initloop
  3632                           
  3633                           	psect	clrtext
  3634  0F34                     clear_ram0:	
  3635                           ;	Called with FSR0 containing the base address, and
  3636                           ;	btemp/btemp+1 has the size to clear
  3637                           
  3638  0F34  0064               	clrwdt	;clear the watchdog before getting into this loop
  3639  0F35                     clrloop0:	
  3640  0F35  0180               	clrf	0	;clear RAM location pointed to by FSR
  3641  0F36  3101               	addfsr 0,1
  3642  0F37  3001               	movlw	1
  3643  0F38  02FE               	subwf	126,f
  3644  0F39  3000               	movlw	0
  3645  0F3A  3BFF               	subwfb	127,f
  3646  0F3B  087F               	movf	127,w
  3647  0F3C  047E               	iorwf	126,w
  3648  0F3D  1903               	btfsc	3,2
  3649  0F3E  3400               	retlw	0	;all done for this memory range, return
  3650  0F3F  2F35               	goto	clrloop0	;have we reached the end yet?
  3651                           
  3652                           	psect	cstackCOMMON
  3653  0070                     __pcstackCOMMON:	
  3654  0070                     ?_spiRead:	
  3655  0070                     ??_spiRead:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ?_spiWrite:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0070                     ??_spiWrite:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0070                     ?_picInit:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0070                     ?_adcInit:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0070                     ?_lutInit:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0070                     ?_configureController:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0070                     ?_readController:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679  0070                     ?_readControllerAnalog:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0070                     ?_eepromRead:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685  0070                     ?_nvmUnlock:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_pollController:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ??_pollController:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_PS2Command:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_main:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_reversebyte:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_ppsUnlock:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_ppsLock:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_spiReceiveWait:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ??_spiReceiveWait:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     spiWrite@dat:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718                           
  3719                           ; 1 bytes @ 0x0
  3720  0070                     	ds	1
  3721  0071                     pollController@response:	
  3722                           
  3723                           ; 1 bytes @ 0x1
  3724  0071                     	ds	1
  3725  0072                     ??_PS2Command:	
  3726                           
  3727                           ; 1 bytes @ 0x2
  3728  0072                     	ds	2
  3729  0074                     PS2Command@cmd:	
  3730                           
  3731                           ; 1 bytes @ 0x4
  3732  0074                     	ds	1
  3733                           
  3734                           	psect	cstackBANK0
  3735  0020                     __pcstackBANK0:	
  3736  0020                     ??_adcInit:	
  3737  0020                     ??_readController:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0020                     ??_eepromRead:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0020                     ?_eepromWrite:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0020                     ?_spiInit:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0020                     ??_nvmUnlock:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0020                     ??_reversebyte:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0020                     ??_ppsUnlock:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758  0020                     ??_ppsLock:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761  0020                     ?_readADC:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764  0020                     ?___wmul:	
  3765                           ; 2 bytes @ 0x0
  3766                           
  3767  0020                     spiInit@sDataSample:	
  3768                           ; 2 bytes @ 0x0
  3769                           
  3770  0020                     eepromWrite@data:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773  0020                     readADC@channel:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0020                     ___wmul@multiplier:	
  3777                           ; 2 bytes @ 0x0
  3778                           
  3779                           
  3780                           ; 2 bytes @ 0x0
  3781  0020                     	ds	1
  3782  0021                     ??_eepromWrite:	
  3783  0021                     spiInit@sClockIdle:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786  0021                     eepromWrite@address:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789  0021                     eepromRead@address:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792                           
  3793                           ; 1 bytes @ 0x1
  3794  0021                     	ds	1
  3795  0022                     ??_readADC:	
  3796  0022                     readController@analogMode:	
  3797                           ; 1 bytes @ 0x2
  3798                           
  3799  0022                     spiInit@sTransmitEdge:	
  3800                           ; 1 bytes @ 0x2
  3801                           
  3802  0022                     eepromWrite@interruptStatus:	
  3803                           ; 1 bytes @ 0x2
  3804                           
  3805  0022                     eepromRead@data:	
  3806                           ; 1 bytes @ 0x2
  3807                           
  3808  0022                     ___wmul@multiplicand:	
  3809                           ; 1 bytes @ 0x2
  3810                           
  3811                           
  3812                           ; 2 bytes @ 0x2
  3813  0022                     	ds	1
  3814  0023                     ??_spiInit:	
  3815  0023                     reversebyte@byte:	
  3816                           ; 1 bytes @ 0x3
  3817                           
  3818  0023                     spiInit@sType:	
  3819                           ; 1 bytes @ 0x3
  3820                           
  3821                           
  3822                           ; 1 bytes @ 0x3
  3823  0023                     	ds	1
  3824  0024                     ??_picInit:	
  3825  0024                     ??___wmul:	
  3826                           ; 1 bytes @ 0x4
  3827                           
  3828  0024                     ___wmul@product:	
  3829                           ; 1 bytes @ 0x4
  3830                           
  3831                           
  3832                           ; 2 bytes @ 0x4
  3833  0024                     	ds	2
  3834  0026                     ?___awdiv:	
  3835  0026                     ___awdiv@divisor:	
  3836                           ; 2 bytes @ 0x6
  3837                           
  3838                           
  3839                           ; 2 bytes @ 0x6
  3840  0026                     	ds	2
  3841  0028                     ___awdiv@dividend:	
  3842                           
  3843                           ; 2 bytes @ 0x8
  3844  0028                     	ds	1
  3845  0029                     ??_configureController:	
  3846  0029                     ??_readControllerAnalog:	
  3847                           ; 1 bytes @ 0x9
  3848                           
  3849                           
  3850                           ; 1 bytes @ 0x9
  3851  0029                     	ds	1
  3852  002A                     ??___awdiv:	
  3853  002A                     configureController@lxMin:	
  3854                           ; 1 bytes @ 0xA
  3855                           
  3856                           
  3857                           ; 1 bytes @ 0xA
  3858  002A                     	ds	1
  3859  002B                     configureController@lxMax:	
  3860  002B                     ___awdiv@counter:	
  3861                           ; 1 bytes @ 0xB
  3862                           
  3863                           
  3864                           ; 1 bytes @ 0xB
  3865  002B                     	ds	1
  3866  002C                     configureController@lyMin:	
  3867  002C                     ___awdiv@sign:	
  3868                           ; 1 bytes @ 0xC
  3869                           
  3870                           
  3871                           ; 1 bytes @ 0xC
  3872  002C                     	ds	1
  3873  002D                     configureController@lyMax:	
  3874  002D                     ___awdiv@quotient:	
  3875                           ; 1 bytes @ 0xD
  3876                           
  3877                           
  3878                           ; 2 bytes @ 0xD
  3879  002D                     	ds	1
  3880  002E                     configureController@rxMin:	
  3881                           
  3882                           ; 1 bytes @ 0xE
  3883  002E                     	ds	1
  3884  002F                     ?_Map:	
  3885  002F                     configureController@rxMax:	
  3886                           ; 1 bytes @ 0xF
  3887                           
  3888  002F                     Map@x:	
  3889                           ; 1 bytes @ 0xF
  3890                           
  3891                           
  3892                           ; 2 bytes @ 0xF
  3893  002F                     	ds	1
  3894  0030                     configureController@ryMin:	
  3895                           
  3896                           ; 1 bytes @ 0x10
  3897  0030                     	ds	1
  3898  0031                     configureController@ryMax:	
  3899  0031                     Map@inMin:	
  3900                           ; 1 bytes @ 0x11
  3901                           
  3902                           
  3903                           ; 2 bytes @ 0x11
  3904  0031                     	ds	1
  3905  0032                     configureController@lx:	
  3906                           
  3907                           ; 1 bytes @ 0x12
  3908  0032                     	ds	1
  3909  0033                     configureController@ly:	
  3910  0033                     Map@inMax:	
  3911                           ; 1 bytes @ 0x13
  3912                           
  3913                           
  3914                           ; 2 bytes @ 0x13
  3915  0033                     	ds	1
  3916  0034                     configureController@rx:	
  3917                           
  3918                           ; 1 bytes @ 0x14
  3919  0034                     	ds	1
  3920  0035                     configureController@ry:	
  3921  0035                     Map@outMin:	
  3922                           ; 1 bytes @ 0x15
  3923                           
  3924                           
  3925                           ; 2 bytes @ 0x15
  3926  0035                     	ds	2
  3927  0037                     Map@outMax:	
  3928                           
  3929                           ; 2 bytes @ 0x17
  3930  0037                     	ds	2
  3931  0039                     ??_lutInit:	
  3932  0039                     ??_Map:	
  3933                           ; 1 bytes @ 0x19
  3934                           
  3935                           
  3936                           ; 1 bytes @ 0x19
  3937  0039                     	ds	9
  3938  0042                     lutInit@lxMin:	
  3939                           
  3940                           ; 1 bytes @ 0x22
  3941  0042                     	ds	1
  3942  0043                     lutInit@lxMax:	
  3943                           
  3944                           ; 1 bytes @ 0x23
  3945  0043                     	ds	1
  3946  0044                     lutInit@lyMin:	
  3947                           
  3948                           ; 1 bytes @ 0x24
  3949  0044                     	ds	1
  3950  0045                     lutInit@lyMax:	
  3951                           
  3952                           ; 1 bytes @ 0x25
  3953  0045                     	ds	1
  3954  0046                     lutInit@rxMin:	
  3955                           
  3956                           ; 1 bytes @ 0x26
  3957  0046                     	ds	1
  3958  0047                     lutInit@rxMax:	
  3959                           
  3960                           ; 1 bytes @ 0x27
  3961  0047                     	ds	1
  3962  0048                     lutInit@ryMin:	
  3963                           
  3964                           ; 1 bytes @ 0x28
  3965  0048                     	ds	1
  3966  0049                     lutInit@ryMax:	
  3967                           
  3968                           ; 1 bytes @ 0x29
  3969  0049                     	ds	1
  3970  004A                     lutInit@position:	
  3971                           
  3972                           ; 2 bytes @ 0x2A
  3973  004A                     	ds	2
  3974  004C                     ??_main:	
  3975                           
  3976                           ; 1 bytes @ 0x2C
  3977  004C                     	ds	1
  3978  004D                     main@slaveSelectStatePrev:	
  3979                           
  3980                           ; 1 bytes @ 0x2D
  3981  004D                     	ds	1
  3982  004E                     main@count:	
  3983                           
  3984                           ; 1 bytes @ 0x2E
  3985  004E                     	ds	1
  3986  004F                     main@slaveSelect:	
  3987                           
  3988                           ; 1 bytes @ 0x2F
  3989  004F                     	ds	1
  3990                           
  3991                           	psect	maintext
  3992  0730                     __pmaintext:	
  3993 ;;
  3994 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3995 ;;
  3996 ;; *************** function _main *****************
  3997 ;; Defined at:
  3998 ;;		line 384 in file "main.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  slaveSelect     1   47[BANK0 ] unsigned char 
  4003 ;;  count           1   46[BANK0 ] unsigned char 
  4004 ;;  slaveSelectS    1   45[BANK0 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : B1F/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        4 bytes
  4019 ;; Hardware stack levels required when called:    6
  4020 ;; This function calls:
  4021 ;;		_adcInit
  4022 ;;		_configureController
  4023 ;;		_lutInit
  4024 ;;		_picInit
  4025 ;;		_readController
  4026 ;;		_readControllerAnalog
  4027 ;; This function is called by:
  4028 ;;		Startup code after reset
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _main
  4034  0730                     _main:	
  4035                           
  4036                           ;main.c: 386:     picInit();
  4037                           
  4038                           ;incstack = 0
  4039                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4040  0730  3187  2776  3187   	fcall	_picInit
  4041                           
  4042                           ;main.c: 387:     adcInit();
  4043  0733  318F  272A  3187   	fcall	_adcInit
  4044                           
  4045                           ;main.c: 388:     lutInit();
  4046  0736  3181  2188  3187   	fcall	_lutInit
  4047                           
  4048                           ;main.c: 390:     response[1] = 0x5A;
  4049  0739  305A               	movlw	90
  4050  073A  0020               	movlb	0	; select bank0
  4051  073B  00CC               	movwf	??_main
  4052  073C  084C               	movf	??_main,w
  4053  073D  00DA               	movwf	_response+1
  4054                           
  4055                           ;main.c: 392:     char slaveSelect;;main.c: 393:     char slaveSelectStatePrev = 0;
  4056  073E  01CD               	clrf	main@slaveSelectStatePrev
  4057                           
  4058                           ;main.c: 394:     char count = 0;
  4059  073F  01CE               	clrf	main@count
  4060                           
  4061                           ;main.c: 395:     RA4 = 1;
  4062  0740  160C               	bsf	12,4	;volatile
  4063  0741                     l2890:	
  4064                           
  4065                           ;main.c: 402:         if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4066  0741  307F               	movlw	127
  4067  0742  0020               	movlb	0	; select bank0
  4068  0743  0658               	xorwf	_digitalStateFirst,w
  4069  0744  1D03               	btfss	3,2
  4070  0745  2F4D               	goto	l2896
  4071  0746  305F               	movlw	95
  4072  0747  0657               	xorwf	_digitalStateSecond,w
  4073  0748  1D03               	btfss	3,2
  4074  0749  2F4D               	goto	l2896
  4075                           
  4076                           ;main.c: 405:             configureController();
  4077  074A  3183  2363  3187   	fcall	_configureController
  4078  074D                     l2896:	
  4079                           
  4080                           ;main.c: 409:         slaveSelect = RA5;
  4081  074D  3000               	movlw	0
  4082  074E  0020               	movlb	0	; select bank0
  4083  074F  1A8C               	btfsc	12,5	;volatile
  4084  0750  3001               	movlw	1
  4085  0751  00CF               	movwf	main@slaveSelect
  4086                           
  4087                           ;main.c: 411:         if (slaveSelect) {
  4088  0752  084F               	movf	main@slaveSelect,w
  4089  0753  1903               	btfsc	3,2
  4090  0754  2F59               	goto	l153
  4091                           
  4092                           ;main.c: 412:             count++;
  4093  0755  3001               	movlw	1
  4094  0756  00CC               	movwf	??_main
  4095  0757  084C               	movf	??_main,w
  4096  0758  07CE               	addwf	main@count,f
  4097  0759                     l153:	
  4098                           ;main.c: 413:         }
  4099                           
  4100                           
  4101                           ;main.c: 415:         if (slaveSelect ^ slaveSelectStatePrev) {
  4102  0759  084F               	movf	main@slaveSelect,w
  4103  075A  064D               	xorwf	main@slaveSelectStatePrev,w
  4104  075B  1D03               	btfss	3,2
  4105                           
  4106                           ;main.c: 416:             count = 0;
  4107  075C  01CE               	clrf	main@count
  4108                           
  4109                           ;main.c: 419:         slaveSelectStatePrev = slaveSelect;
  4110  075D  084F               	movf	main@slaveSelect,w
  4111  075E  00CC               	movwf	??_main
  4112  075F  084C               	movf	??_main,w
  4113  0760  00CD               	movwf	main@slaveSelectStatePrev
  4114                           
  4115                           ;main.c: 421:         if (count >= 3) {
  4116  0761  3003               	movlw	3
  4117  0762  024E               	subwf	main@count,w
  4118  0763  1C03               	skipc
  4119  0764  2F6E               	goto	l2914
  4120                           
  4121                           ;main.c: 423:             cmdCounter = 0;
  4122  0765  01F6               	clrf	_cmdCounter
  4123                           
  4124                           ;main.c: 424:             responseLength = 9;
  4125  0766  3009               	movlw	9
  4126  0767  00CC               	movwf	??_main
  4127  0768  084C               	movf	??_main,w
  4128  0769  00D0               	movwf	_responseLength
  4129                           
  4130                           ;main.c: 425:             SSP1BUF = 0xFF;
  4131  076A  30FF               	movlw	255
  4132  076B  0023               	movlb	3	; select bank3
  4133  076C  008C               	movwf	12	;volatile
  4134                           
  4135                           ;main.c: 426:             previousCmd = 0x00;
  4136  076D  01F5               	clrf	_previousCmd
  4137  076E                     l2914:	
  4138                           
  4139                           ;main.c: 430:         readController(analogMode);
  4140  076E  0878               	movf	_analogMode,w
  4141  076F  3184  24A9  3187   	fcall	_readController
  4142                           
  4143                           ;main.c: 432:         readControllerAnalog();
  4144  0772  3186  2675  3187   	fcall	_readControllerAnalog
  4145  0775  2F41               	goto	l2890
  4146  0776                     __end_of_main:	
  4147                           
  4148                           	psect	text1
  4149  0675                     __ptext1:	
  4150 ;; *************** function _readControllerAnalog *****************
  4151 ;; Defined at:
  4152 ;;		line 184 in file "Controller.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4168 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        3 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    4
  4173 ;; This function calls:
  4174 ;;		_readADC
  4175 ;;		_reversebyte
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function _readControllerAnalog
  4183  0675                     _readControllerAnalog:	
  4184                           
  4185                           ;Controller.c: 186:     lxData = reversebyte(lutLX[readADC(0b010000)]);
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4189  0675  3010               	movlw	16
  4190  0676  0020               	movlb	0	; select bank0
  4191  0677  00A0               	movwf	readADC@channel
  4192  0678  3000               	movlw	0
  4193  0679  00A1               	movwf	readADC@channel+1
  4194  067A  318F  27D7  3186   	fcall	_readADC
  4195  067D  30F0               	movlw	240
  4196  067E  0020               	movlb	0	; select bank0
  4197  067F  00A9               	movwf	??_readControllerAnalog
  4198  0680  3026               	movlw	38
  4199  0681  00AA               	movwf	??_readControllerAnalog+1
  4200  0682  0820               	movf	?_readADC,w
  4201  0683  0729               	addwf	??_readControllerAnalog,w
  4202  0684  0086               	movwf	6
  4203  0685  0821               	movf	?_readADC+1,w
  4204  0686  3D2A               	addwfc	??_readControllerAnalog+1,w
  4205  0687  0087               	movwf	7
  4206  0688  0801               	movf	1,w
  4207  0689  3187  27B0  3186   	fcall	_reversebyte
  4208  068C  0020               	movlb	0	; select bank0
  4209  068D  00AB               	movwf	??_readControllerAnalog+2
  4210  068E  082B               	movf	??_readControllerAnalog+2,w
  4211  068F  00D5               	movwf	_lxData
  4212                           
  4213                           ;Controller.c: 187:     lyData = reversebyte(lutLY[readADC(0b10001)]);
  4214  0690  3011               	movlw	17
  4215  0691  00A0               	movwf	readADC@channel
  4216  0692  3000               	movlw	0
  4217  0693  00A1               	movwf	readADC@channel+1
  4218  0694  318F  27D7  3186   	fcall	_readADC
  4219  0697  30F0               	movlw	240
  4220  0698  0020               	movlb	0	; select bank0
  4221  0699  00A9               	movwf	??_readControllerAnalog
  4222  069A  3025               	movlw	37
  4223  069B  00AA               	movwf	??_readControllerAnalog+1
  4224  069C  0820               	movf	?_readADC,w
  4225  069D  0729               	addwf	??_readControllerAnalog,w
  4226  069E  0086               	movwf	6
  4227  069F  0821               	movf	?_readADC+1,w
  4228  06A0  3D2A               	addwfc	??_readControllerAnalog+1,w
  4229  06A1  0087               	movwf	7
  4230  06A2  0801               	movf	1,w
  4231  06A3  3187  27B0  3186   	fcall	_reversebyte
  4232  06A6  0020               	movlb	0	; select bank0
  4233  06A7  00AB               	movwf	??_readControllerAnalog+2
  4234  06A8  082B               	movf	??_readControllerAnalog+2,w
  4235  06A9  00D4               	movwf	_lyData
  4236                           
  4237                           ;Controller.c: 189:     rxData = reversebyte(lutRX[readADC(0b010110)]);
  4238  06AA  3016               	movlw	22
  4239  06AB  00A0               	movwf	readADC@channel
  4240  06AC  3000               	movlw	0
  4241  06AD  00A1               	movwf	readADC@channel+1
  4242  06AE  318F  27D7  3186   	fcall	_readADC
  4243  06B1  30F0               	movlw	240
  4244  06B2  0020               	movlb	0	; select bank0
  4245  06B3  00A9               	movwf	??_readControllerAnalog
  4246  06B4  3024               	movlw	36
  4247  06B5  00AA               	movwf	??_readControllerAnalog+1
  4248  06B6  0820               	movf	?_readADC,w
  4249  06B7  0729               	addwf	??_readControllerAnalog,w
  4250  06B8  0086               	movwf	6
  4251  06B9  0821               	movf	?_readADC+1,w
  4252  06BA  3D2A               	addwfc	??_readControllerAnalog+1,w
  4253  06BB  0087               	movwf	7
  4254  06BC  0801               	movf	1,w
  4255  06BD  3187  27B0  3186   	fcall	_reversebyte
  4256  06C0  0020               	movlb	0	; select bank0
  4257  06C1  00AB               	movwf	??_readControllerAnalog+2
  4258  06C2  082B               	movf	??_readControllerAnalog+2,w
  4259  06C3  00F9               	movwf	_rxData
  4260                           
  4261                           ;Controller.c: 190:     ryData = reversebyte(lutRY[readADC(0b010111)]);
  4262  06C4  3017               	movlw	23
  4263  06C5  00A0               	movwf	readADC@channel
  4264  06C6  3000               	movlw	0
  4265  06C7  00A1               	movwf	readADC@channel+1
  4266  06C8  318F  27D7  3186   	fcall	_readADC
  4267  06CB  30F0               	movlw	240
  4268  06CC  0020               	movlb	0	; select bank0
  4269  06CD  00A9               	movwf	??_readControllerAnalog
  4270  06CE  3023               	movlw	35
  4271  06CF  00AA               	movwf	??_readControllerAnalog+1
  4272  06D0  0820               	movf	?_readADC,w
  4273  06D1  0729               	addwf	??_readControllerAnalog,w
  4274  06D2  0086               	movwf	6
  4275  06D3  0821               	movf	?_readADC+1,w
  4276  06D4  3D2A               	addwfc	??_readControllerAnalog+1,w
  4277  06D5  0087               	movwf	7
  4278  06D6  0801               	movf	1,w
  4279  06D7  3187  27B0         	fcall	_reversebyte
  4280  06D9  0020               	movlb	0	; select bank0
  4281  06DA  00AB               	movwf	??_readControllerAnalog+2
  4282  06DB  082B               	movf	??_readControllerAnalog+2,w
  4283  06DC  00D6               	movwf	_ryData
  4284  06DD  0008               	return
  4285  06DE                     __end_of_readControllerAnalog:	
  4286                           
  4287                           	psect	text2
  4288  07B0                     __ptext2:	
  4289 ;; *************** function _reversebyte *****************
  4290 ;; Defined at:
  4291 ;;		line 176 in file "Controller.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  byte            1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  byte            1    3[BANK0 ] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4307 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4309 ;;Total ram usage:        4 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    3
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_readControllerAnalog
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _reversebyte
  4321  07B0                     _reversebyte:	
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4325                           ;reversebyte@byte stored from wreg
  4326  07B0  0020               	movlb	0	; select bank0
  4327  07B1  00A3               	movwf	reversebyte@byte
  4328                           
  4329                           ;Controller.c: 177:     byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4330  07B2  0823               	movf	reversebyte@byte,w
  4331  07B3  390F               	andlw	15
  4332  07B4  00A0               	movwf	??_reversebyte
  4333  07B5  3004               	movlw	4
  4334  07B6                     u1815:	
  4335  07B6  35A0               	lslf	??_reversebyte,f
  4336  07B7  0B89               	decfsz	9,f
  4337  07B8  2FB6               	goto	u1815
  4338  07B9  0823               	movf	reversebyte@byte,w
  4339  07BA  00A1               	movwf	??_reversebyte+1
  4340  07BB  3004               	movlw	4
  4341  07BC                     u1825:	
  4342  07BC  36A1               	lsrf	??_reversebyte+1,f
  4343  07BD  0B89               	decfsz	9,f
  4344  07BE  2FBC               	goto	u1825
  4345  07BF  0821               	movf	??_reversebyte+1,w
  4346  07C0  390F               	andlw	15
  4347  07C1  0420               	iorwf	??_reversebyte,w
  4348  07C2  00A2               	movwf	??_reversebyte+2
  4349  07C3  0822               	movf	??_reversebyte+2,w
  4350  07C4  00A3               	movwf	reversebyte@byte
  4351                           
  4352                           ;Controller.c: 178:     byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4353  07C5  0823               	movf	reversebyte@byte,w
  4354  07C6  3933               	andlw	51
  4355  07C7  00A0               	movwf	??_reversebyte
  4356  07C8  3002               	movlw	2
  4357  07C9                     u1835:	
  4358  07C9  35A0               	lslf	??_reversebyte,f
  4359  07CA  0B89               	decfsz	9,f
  4360  07CB  2FC9               	goto	u1835
  4361  07CC  0823               	movf	reversebyte@byte,w
  4362  07CD  00A1               	movwf	??_reversebyte+1
  4363  07CE  3002               	movlw	2
  4364  07CF                     u1845:	
  4365  07CF  36A1               	lsrf	??_reversebyte+1,f
  4366  07D0  0B89               	decfsz	9,f
  4367  07D1  2FCF               	goto	u1845
  4368  07D2  0821               	movf	??_reversebyte+1,w
  4369  07D3  3933               	andlw	51
  4370  07D4  0420               	iorwf	??_reversebyte,w
  4371  07D5  00A2               	movwf	??_reversebyte+2
  4372  07D6  0822               	movf	??_reversebyte+2,w
  4373  07D7  00A3               	movwf	reversebyte@byte
  4374                           
  4375                           ;Controller.c: 179:     byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4376  07D8  0823               	movf	reversebyte@byte,w
  4377  07D9  3955               	andlw	85
  4378  07DA  00A0               	movwf	??_reversebyte
  4379  07DB  3001               	movlw	1
  4380  07DC                     u1855:	
  4381  07DC  35A0               	lslf	??_reversebyte,f
  4382  07DD  0B89               	decfsz	9,f
  4383  07DE  2FDC               	goto	u1855
  4384  07DF  3623               	lsrf	reversebyte@byte,w
  4385  07E0  3955               	andlw	85
  4386  07E1  0420               	iorwf	??_reversebyte,w
  4387  07E2  00A1               	movwf	??_reversebyte+1
  4388  07E3  0821               	movf	??_reversebyte+1,w
  4389  07E4  00A3               	movwf	reversebyte@byte
  4390                           
  4391                           ;Controller.c: 181:     return byte;
  4392  07E5  0823               	movf	reversebyte@byte,w
  4393  07E6  0008               	return
  4394  07E7                     __end_of_reversebyte:	
  4395                           
  4396                           	psect	text3
  4397  0776                     __ptext3:	
  4398 ;; *************** function _picInit *****************
  4399 ;; Defined at:
  4400 ;;		line 26 in file "PicConfig.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    4
  4421 ;; This function calls:
  4422 ;;		_ppsLock
  4423 ;;		_ppsUnlock
  4424 ;;		_spiInit
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _picInit
  4432  0776                     _picInit:	
  4433                           
  4434                           ;PicConfig.c: 29:     TRISA = 0xFF;
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  4438  0776  30FF               	movlw	255
  4439  0777  0020               	movlb	0	; select bank0
  4440  0778  0091               	movwf	17	;volatile
  4441                           
  4442                           ;PicConfig.c: 30:     TRISB = 0xFF;
  4443  0779  30FF               	movlw	255
  4444  077A  0092               	movwf	18	;volatile
  4445                           
  4446                           ;PicConfig.c: 31:     TRISC = 0xFF;
  4447  077B  30FF               	movlw	255
  4448  077C  0093               	movwf	19	;volatile
  4449                           
  4450                           ;PicConfig.c: 32:     TRISD = 0xEF;
  4451  077D  30EF               	movlw	239
  4452  077E  0094               	movwf	20	;volatile
  4453                           
  4454                           ;PicConfig.c: 33:     TRISE = 0xFF;
  4455  077F  30FF               	movlw	255
  4456  0780  0095               	movwf	21	;volatile
  4457                           
  4458                           ;PicConfig.c: 36:     ANSELA = 0;
  4459  0781  003E               	movlb	30	; select bank30
  4460  0782  01B8               	clrf	56	;volatile
  4461                           
  4462                           ;PicConfig.c: 37:     ANSELB = 0;
  4463  0783  01C3               	clrf	67	;volatile
  4464                           
  4465                           ;PicConfig.c: 38:     ANSELC = 0xC3;
  4466  0784  30C3               	movlw	195
  4467  0785  00CE               	movwf	78	;volatile
  4468                           
  4469                           ;PicConfig.c: 39:     ANSELD = 0;
  4470  0786  01D9               	clrf	89	;volatile
  4471                           
  4472                           ;PicConfig.c: 40:     ANSELE = 0;
  4473  0787  01E4               	clrf	100	;volatile
  4474                           
  4475                           ;PicConfig.c: 43:     WPUA = 0xCF;
  4476  0788  30CF               	movlw	207
  4477  0789  00B9               	movwf	57	;volatile
  4478                           
  4479                           ;PicConfig.c: 44:     WPUB = 0xFF;
  4480  078A  30FF               	movlw	255
  4481  078B  00C4               	movwf	68	;volatile
  4482                           
  4483                           ;PicConfig.c: 45:     WPUC = 0x04;
  4484  078C  3004               	movlw	4
  4485  078D  00CF               	movwf	79	;volatile
  4486                           
  4487                           ;PicConfig.c: 46:     WPUD = 0x01;
  4488  078E  3001               	movlw	1
  4489  078F  00DA               	movwf	90	;volatile
  4490                           
  4491                           ;PicConfig.c: 47:     WPUE = 0;
  4492  0790  01E5               	clrf	101	;volatile
  4493                           
  4494                           ;PicConfig.c: 50:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HI
      +                          GH, SPI_ACTIVE_2_IDLE);
  4495  0791  0020               	movlb	0	; select bank0
  4496  0792  01A0               	clrf	spiInit@sDataSample
  4497  0793  3010               	movlw	16
  4498  0794  00A4               	movwf	??_picInit
  4499  0795  0824               	movf	??_picInit,w
  4500  0796  00A1               	movwf	spiInit@sClockIdle
  4501  0797  3040               	movlw	64
  4502  0798  00A5               	movwf	??_picInit+1
  4503  0799  0825               	movf	??_picInit+1,w
  4504  079A  00A2               	movwf	spiInit@sTransmitEdge
  4505  079B  3024               	movlw	36
  4506  079C  318F  274C  3187   	fcall	_spiInit
  4507                           
  4508                           ;PicConfig.c: 52:     TRISCbits.TRISC5 = 0;
  4509  079F  0020               	movlb	0	; select bank0
  4510  07A0  1293               	bcf	19,5	;volatile
  4511                           
  4512                           ;PicConfig.c: 53:     TRISAbits.TRISA4 = 0;
  4513  07A1  1211               	bcf	17,4	;volatile
  4514                           
  4515                           ;PicConfig.c: 54:     ppsUnlock();
  4516  07A2  3187  27F9  3187   	fcall	_ppsUnlock
  4517                           
  4518                           ;PicConfig.c: 56:     RC5PPS = 0x15;
  4519  07A5  3015               	movlw	21
  4520  07A6  003E               	movlb	30	; select bank30
  4521  07A7  00A5               	movwf	37	;volatile
  4522                           
  4523                           ;PicConfig.c: 58:     ppsLock();
  4524  07A8  318F  2722         	fcall	_ppsLock
  4525                           
  4526                           ;PicConfig.c: 61:     INTCONbits.GIE = 1;
  4527  07AA  178B               	bsf	11,7	;volatile
  4528                           
  4529                           ;PicConfig.c: 62:     INTCONbits.PEIE = 1;
  4530  07AB  170B               	bsf	11,6	;volatile
  4531                           
  4532                           ;PicConfig.c: 63:     SSP1IF = 0;
  4533  07AC  002E               	movlb	14	; select bank14
  4534  07AD  100F               	bcf	15,0	;volatile
  4535                           
  4536                           ;PicConfig.c: 64:     SSP1IE = 1;
  4537  07AE  1419               	bsf	25,0	;volatile
  4538  07AF  0008               	return
  4539  07B0                     __end_of_picInit:	
  4540                           
  4541                           	psect	text4
  4542  0F4C                     __ptext4:	
  4543 ;; *************** function _spiInit *****************
  4544 ;; Defined at:
  4545 ;;		line 10 in file "Spi.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  sType           1    wreg     enum E12122
  4548 ;;  sDataSample     1    0[BANK0 ] enum E12130
  4549 ;;  sClockIdle      1    1[BANK0 ] enum E12134
  4550 ;;  sTransmitEdg    1    2[BANK0 ] enum E12138
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  sType           1    3[BANK0 ] enum E12122
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4562 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4565 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4566 ;;Total ram usage:        4 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    3
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_picInit
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _spiInit
  4578  0F4C                     _spiInit:	
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4582                           ;spiInit@sType stored from wreg
  4583  0F4C  0020               	movlb	0	; select bank0
  4584  0F4D  00A3               	movwf	spiInit@sType
  4585                           
  4586                           ;Spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);Spi.c: 11: {;Spi.c: 13:     if(sType & 0b00000
      +                          100)
  4587  0F4E  1D23               	btfss	spiInit@sType,2
  4588  0F4F  2F52               	goto	l2724
  4589                           
  4590                           ;Spi.c: 14:     {;Spi.c: 15:         SSP1STAT = sTransmitEdge;
  4591  0F50  0822               	movf	spiInit@sTransmitEdge,w
  4592  0F51  2F54               	goto	L1
  4593  0F52                     l2724:	
  4594                           ;Spi.c: 17:     }
  4595                           
  4596                           
  4597                           ;Spi.c: 19:     {;Spi.c: 20:         SSP1STAT = sDataSample | sTransmitEdge;
  4598  0F52  0820               	movf	spiInit@sDataSample,w
  4599  0F53  0422               	iorwf	spiInit@sTransmitEdge,w
  4600  0F54                     L1:	
  4601  0F54  0023               	movlb	3	; select bank3
  4602  0F55  008F               	movwf	15	;volatile
  4603                           
  4604                           ;Spi.c: 24:     SSP1CON1 = sType | sClockIdle;
  4605                           
  4606                           ;Spi.c: 22:     }
  4607  0F56  0020               	movlb	0	; select bank0
  4608  0F57  0823               	movf	spiInit@sType,w
  4609  0F58  0421               	iorwf	spiInit@sClockIdle,w
  4610  0F59  0023               	movlb	3	; select bank3
  4611  0F5A  0090               	movwf	16	;volatile
  4612  0F5B  0008               	return
  4613  0F5C                     __end_of_spiInit:	
  4614                           
  4615                           	psect	text5
  4616  07F9                     __ptext5:	
  4617 ;; *************** function _ppsUnlock *****************
  4618 ;; Defined at:
  4619 ;;		line 3 in file "PicConfig.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    3
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_picInit
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _ppsUnlock
  4649  07F9                     _ppsUnlock:	
  4650                           
  4651                           ;PicConfig.c: 4:     PPSLOCK = 0x55;
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _ppsUnlock: [wreg+status,2]
  4655  07F9  3055               	movlw	85
  4656  07FA  003D               	movlb	29	; select bank29
  4657  07FB  008F               	movwf	15	;volsfr
  4658                           
  4659                           ;PicConfig.c: 5:     PPSLOCK = 0xAA;
  4660  07FC  30AA               	movlw	170
  4661  07FD  008F               	movwf	15	;volsfr
  4662                           
  4663                           ;PicConfig.c: 6:     PPSLOCK = 0;
  4664  07FE  018F               	clrf	15	;volsfr
  4665  07FF  0008               	return
  4666  0800                     __end_of_ppsUnlock:	
  4667                           
  4668                           	psect	text6
  4669  0F22                     __ptext6:	
  4670 ;; *************** function _ppsLock *****************
  4671 ;; Defined at:
  4672 ;;		line 9 in file "PicConfig.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    3
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_picInit
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _ppsLock
  4702  0F22                     _ppsLock:	
  4703                           
  4704                           ;PicConfig.c: 10:     PPSLOCK = 0x55;
  4705                           
  4706                           ;incstack = 0
  4707                           ; Regs used in _ppsLock: [wreg]
  4708  0F22  3055               	movlw	85
  4709  0F23  003D               	movlb	29	; select bank29
  4710  0F24  008F               	movwf	15	;volsfr
  4711                           
  4712                           ;PicConfig.c: 11:     PPSLOCK = 0xAA;
  4713  0F25  30AA               	movlw	170
  4714  0F26  008F               	movwf	15	;volsfr
  4715                           
  4716                           ;PicConfig.c: 12:     PPSLOCK = 1;
  4717  0F27  3001               	movlw	1
  4718  0F28  008F               	movwf	15	;volsfr
  4719  0F29  0008               	return
  4720  0F2A                     __end_of_ppsLock:	
  4721                           
  4722                           	psect	text7
  4723  0188                     __ptext7:	
  4724 ;; *************** function _lutInit *****************
  4725 ;; Defined at:
  4726 ;;		line 103 in file "Controller.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  position        2   42[BANK0 ] int 
  4731 ;;  ryMax           1   41[BANK0 ] unsigned char 
  4732 ;;  ryMin           1   40[BANK0 ] unsigned char 
  4733 ;;  rxMax           1   39[BANK0 ] unsigned char 
  4734 ;;  rxMin           1   38[BANK0 ] unsigned char 
  4735 ;;  lyMax           1   37[BANK0 ] unsigned char 
  4736 ;;  lyMin           1   36[BANK0 ] unsigned char 
  4737 ;;  lxMax           1   35[BANK0 ] unsigned char 
  4738 ;;  lxMin           1   34[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4749 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4750 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4751 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4752 ;;Total ram usage:       19 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    5
  4755 ;; This function calls:
  4756 ;;		_Map
  4757 ;;		_eepromRead
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _lutInit
  4765  0188                     _lutInit:	
  4766                           
  4767                           ;Controller.c: 105:     char lxMin = eepromRead(0x60);
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4771  0188  3060               	movlw	96
  4772  0189  3187  27E7  3181   	fcall	_eepromRead
  4773  018C  0020               	movlb	0	; select bank0
  4774  018D  00B9               	movwf	??_lutInit
  4775  018E  0839               	movf	??_lutInit,w
  4776  018F  00C2               	movwf	lutInit@lxMin
  4777                           
  4778                           ;Controller.c: 106:     char lxMax = eepromRead(0x61);
  4779  0190  3061               	movlw	97
  4780  0191  3187  27E7  3181   	fcall	_eepromRead
  4781  0194  0020               	movlb	0	; select bank0
  4782  0195  00B9               	movwf	??_lutInit
  4783  0196  0839               	movf	??_lutInit,w
  4784  0197  00C3               	movwf	lutInit@lxMax
  4785                           
  4786                           ;Controller.c: 107:     char lyMin = eepromRead(0x62);
  4787  0198  3062               	movlw	98
  4788  0199  3187  27E7  3181   	fcall	_eepromRead
  4789  019C  0020               	movlb	0	; select bank0
  4790  019D  00B9               	movwf	??_lutInit
  4791  019E  0839               	movf	??_lutInit,w
  4792  019F  00C4               	movwf	lutInit@lyMin
  4793                           
  4794                           ;Controller.c: 108:     char lyMax = eepromRead(0x63);
  4795  01A0  3063               	movlw	99
  4796  01A1  3187  27E7  3181   	fcall	_eepromRead
  4797  01A4  0020               	movlb	0	; select bank0
  4798  01A5  00B9               	movwf	??_lutInit
  4799  01A6  0839               	movf	??_lutInit,w
  4800  01A7  00C5               	movwf	lutInit@lyMax
  4801                           
  4802                           ;Controller.c: 110:     char rxMin = eepromRead(0x64);
  4803  01A8  3064               	movlw	100
  4804  01A9  3187  27E7  3181   	fcall	_eepromRead
  4805  01AC  0020               	movlb	0	; select bank0
  4806  01AD  00B9               	movwf	??_lutInit
  4807  01AE  0839               	movf	??_lutInit,w
  4808  01AF  00C6               	movwf	lutInit@rxMin
  4809                           
  4810                           ;Controller.c: 111:     char rxMax = eepromRead(0x65);
  4811  01B0  3065               	movlw	101
  4812  01B1  3187  27E7  3181   	fcall	_eepromRead
  4813  01B4  0020               	movlb	0	; select bank0
  4814  01B5  00B9               	movwf	??_lutInit
  4815  01B6  0839               	movf	??_lutInit,w
  4816  01B7  00C7               	movwf	lutInit@rxMax
  4817                           
  4818                           ;Controller.c: 112:     char ryMin = eepromRead(0x66);
  4819  01B8  3066               	movlw	102
  4820  01B9  3187  27E7  3181   	fcall	_eepromRead
  4821  01BC  0020               	movlb	0	; select bank0
  4822  01BD  00B9               	movwf	??_lutInit
  4823  01BE  0839               	movf	??_lutInit,w
  4824  01BF  00C8               	movwf	lutInit@ryMin
  4825                           
  4826                           ;Controller.c: 113:     char ryMax = eepromRead(0x67);
  4827  01C0  3067               	movlw	103
  4828  01C1  3187  27E7  3181   	fcall	_eepromRead
  4829  01C4  0020               	movlb	0	; select bank0
  4830  01C5  00B9               	movwf	??_lutInit
  4831  01C6  0839               	movf	??_lutInit,w
  4832  01C7  00C9               	movwf	lutInit@ryMax
  4833                           
  4834                           ;Controller.c: 115:     for (int position = 0; position < 256; position++) {
  4835  01C8  01CA               	clrf	lutInit@position
  4836  01C9  01CB               	clrf	lutInit@position+1
  4837  01CA                     l2778:	
  4838                           
  4839                           ;Controller.c: 118:         if (position < lxMin) {
  4840  01CA  0020               	movlb	0	; select bank0
  4841  01CB  084B               	movf	lutInit@position+1,w
  4842  01CC  3A80               	xorlw	128
  4843  01CD  00B9               	movwf	??_lutInit
  4844  01CE  3080               	movlw	128
  4845  01CF  0239               	subwf	??_lutInit,w
  4846  01D0  1D03               	skipz
  4847  01D1  29D4               	goto	u1895
  4848  01D2  0842               	movf	lutInit@lxMin,w
  4849  01D3  024A               	subwf	lutInit@position,w
  4850  01D4                     u1895:	
  4851  01D4  1803               	skipnc
  4852  01D5  29E3               	goto	l2782
  4853                           
  4854                           ;Controller.c: 120:             lutLX[position] = 0;
  4855  01D6  30F0               	movlw	240
  4856  01D7  0020               	movlb	0	; select bank0
  4857  01D8  00B9               	movwf	??_lutInit
  4858  01D9  3026               	movlw	38
  4859  01DA  00BA               	movwf	??_lutInit+1
  4860  01DB  084A               	movf	lutInit@position,w
  4861  01DC  0739               	addwf	??_lutInit,w
  4862  01DD  0086               	movwf	6
  4863  01DE  084B               	movf	lutInit@position+1,w
  4864  01DF  3D3A               	addwfc	??_lutInit+1,w
  4865  01E0  0087               	movwf	7
  4866  01E1  0181               	clrf	1
  4867                           
  4868                           ;Controller.c: 121:         } else if (position > lxMax) {
  4869  01E2  2A2D               	goto	l2788
  4870  01E3                     l2782:	
  4871  01E3  0020               	movlb	0	; select bank0
  4872  01E4  084B               	movf	lutInit@position+1,w
  4873  01E5  3A80               	xorlw	128
  4874  01E6  3C80               	sublw	128
  4875  01E7  1D03               	skipz
  4876  01E8  29EB               	goto	u1905
  4877  01E9  084A               	movf	lutInit@position,w
  4878  01EA  0243               	subwf	lutInit@lxMax,w
  4879  01EB                     u1905:	
  4880  01EB  1803               	skipnc
  4881  01EC  29FE               	goto	l2786
  4882                           
  4883                           ;Controller.c: 122:             lutLX[position] = 255;
  4884  01ED  30F0               	movlw	240
  4885  01EE  0020               	movlb	0	; select bank0
  4886  01EF  00B9               	movwf	??_lutInit
  4887  01F0  3026               	movlw	38
  4888  01F1  00BA               	movwf	??_lutInit+1
  4889  01F2  084A               	movf	lutInit@position,w
  4890  01F3  0739               	addwf	??_lutInit,w
  4891  01F4  00BB               	movwf	??_lutInit+2
  4892  01F5  084B               	movf	lutInit@position+1,w
  4893  01F6  3D3A               	addwfc	??_lutInit+1,w
  4894  01F7  00BC               	movwf	??_lutInit+3
  4895  01F8  083B               	movf	??_lutInit+2,w
  4896  01F9  0086               	movwf	6
  4897  01FA  083C               	movf	??_lutInit+3,w
  4898  01FB  0087               	movwf	7
  4899  01FC  30FF               	movlw	255
  4900  01FD  2A2C               	goto	L2
  4901  01FE                     l2786:	
  4902                           ;Controller.c: 125:         } else {
  4903                           
  4904                           
  4905                           ;Controller.c: 126:             lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  4906  01FE  0020               	movlb	0	; select bank0
  4907  01FF  084B               	movf	lutInit@position+1,w
  4908  0200  00B0               	movwf	Map@x+1
  4909  0201  084A               	movf	lutInit@position,w
  4910  0202  00AF               	movwf	Map@x
  4911  0203  0842               	movf	lutInit@lxMin,w
  4912  0204  00B9               	movwf	??_lutInit
  4913  0205  01BA               	clrf	??_lutInit+1
  4914  0206  0839               	movf	??_lutInit,w
  4915  0207  00B1               	movwf	Map@inMin
  4916  0208  083A               	movf	??_lutInit+1,w
  4917  0209  00B2               	movwf	Map@inMin+1
  4918  020A  0843               	movf	lutInit@lxMax,w
  4919  020B  00BB               	movwf	??_lutInit+2
  4920  020C  01BC               	clrf	??_lutInit+3
  4921  020D  083B               	movf	??_lutInit+2,w
  4922  020E  00B3               	movwf	Map@inMax
  4923  020F  083C               	movf	??_lutInit+3,w
  4924  0210  00B4               	movwf	Map@inMax+1
  4925  0211  3000               	movlw	0
  4926  0212  00B5               	movwf	Map@outMin
  4927  0213  00B6               	movwf	Map@outMin+1
  4928  0214  30FF               	movlw	255
  4929  0215  00B7               	movwf	Map@outMax
  4930  0216  3000               	movlw	0
  4931  0217  00B8               	movwf	Map@outMax+1
  4932  0218  318F  27B6  3181   	fcall	_Map
  4933  021B  0020               	movlb	0	; select bank0
  4934  021C  00BD               	movwf	??_lutInit+4
  4935  021D  30F0               	movlw	240
  4936  021E  00BE               	movwf	??_lutInit+5
  4937  021F  3026               	movlw	38
  4938  0220  00BF               	movwf	??_lutInit+6
  4939  0221  084A               	movf	lutInit@position,w
  4940  0222  073E               	addwf	??_lutInit+5,w
  4941  0223  00C0               	movwf	??_lutInit+7
  4942  0224  084B               	movf	lutInit@position+1,w
  4943  0225  3D3F               	addwfc	??_lutInit+6,w
  4944  0226  00C1               	movwf	??_lutInit+8
  4945  0227  0840               	movf	??_lutInit+7,w
  4946  0228  0086               	movwf	6
  4947  0229  0841               	movf	??_lutInit+8,w
  4948  022A  0087               	movwf	7
  4949  022B  083D               	movf	??_lutInit+4,w
  4950  022C                     L2:	
  4951  022C  0081               	movwf	1
  4952  022D                     l2788:	
  4953                           
  4954                           ;Controller.c: 130:         if (position < lyMin) {
  4955  022D  084B               	movf	lutInit@position+1,w
  4956  022E  3A80               	xorlw	128
  4957  022F  00B9               	movwf	??_lutInit
  4958  0230  3080               	movlw	128
  4959  0231  0239               	subwf	??_lutInit,w
  4960  0232  1D03               	skipz
  4961  0233  2A36               	goto	u1915
  4962  0234  0844               	movf	lutInit@lyMin,w
  4963  0235  024A               	subwf	lutInit@position,w
  4964  0236                     u1915:	
  4965  0236  1803               	skipnc
  4966  0237  2A45               	goto	l2792
  4967                           
  4968                           ;Controller.c: 131:             lutLY[position] = 0;
  4969  0238  30F0               	movlw	240
  4970  0239  0020               	movlb	0	; select bank0
  4971  023A  00B9               	movwf	??_lutInit
  4972  023B  3025               	movlw	37
  4973  023C  00BA               	movwf	??_lutInit+1
  4974  023D  084A               	movf	lutInit@position,w
  4975  023E  0739               	addwf	??_lutInit,w
  4976  023F  0086               	movwf	6
  4977  0240  084B               	movf	lutInit@position+1,w
  4978  0241  3D3A               	addwfc	??_lutInit+1,w
  4979  0242  0087               	movwf	7
  4980  0243  0181               	clrf	1
  4981                           
  4982                           ;Controller.c: 132:         } else if (position > lyMax) {
  4983  0244  2A8F               	goto	l2798
  4984  0245                     l2792:	
  4985  0245  0020               	movlb	0	; select bank0
  4986  0246  084B               	movf	lutInit@position+1,w
  4987  0247  3A80               	xorlw	128
  4988  0248  3C80               	sublw	128
  4989  0249  1D03               	skipz
  4990  024A  2A4D               	goto	u1925
  4991  024B  084A               	movf	lutInit@position,w
  4992  024C  0245               	subwf	lutInit@lyMax,w
  4993  024D                     u1925:	
  4994  024D  1803               	skipnc
  4995  024E  2A60               	goto	l2796
  4996                           
  4997                           ;Controller.c: 133:             lutLY[position] = 255;
  4998  024F  30F0               	movlw	240
  4999  0250  0020               	movlb	0	; select bank0
  5000  0251  00B9               	movwf	??_lutInit
  5001  0252  3025               	movlw	37
  5002  0253  00BA               	movwf	??_lutInit+1
  5003  0254  084A               	movf	lutInit@position,w
  5004  0255  0739               	addwf	??_lutInit,w
  5005  0256  00BB               	movwf	??_lutInit+2
  5006  0257  084B               	movf	lutInit@position+1,w
  5007  0258  3D3A               	addwfc	??_lutInit+1,w
  5008  0259  00BC               	movwf	??_lutInit+3
  5009  025A  083B               	movf	??_lutInit+2,w
  5010  025B  0086               	movwf	6
  5011  025C  083C               	movf	??_lutInit+3,w
  5012  025D  0087               	movwf	7
  5013  025E  30FF               	movlw	255
  5014  025F  2A8E               	goto	L3
  5015  0260                     l2796:	
  5016                           ;Controller.c: 136:         } else {
  5017                           
  5018                           
  5019                           ;Controller.c: 137:             lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5020  0260  0020               	movlb	0	; select bank0
  5021  0261  084B               	movf	lutInit@position+1,w
  5022  0262  00B0               	movwf	Map@x+1
  5023  0263  084A               	movf	lutInit@position,w
  5024  0264  00AF               	movwf	Map@x
  5025  0265  0844               	movf	lutInit@lyMin,w
  5026  0266  00B9               	movwf	??_lutInit
  5027  0267  01BA               	clrf	??_lutInit+1
  5028  0268  0839               	movf	??_lutInit,w
  5029  0269  00B1               	movwf	Map@inMin
  5030  026A  083A               	movf	??_lutInit+1,w
  5031  026B  00B2               	movwf	Map@inMin+1
  5032  026C  0845               	movf	lutInit@lyMax,w
  5033  026D  00BB               	movwf	??_lutInit+2
  5034  026E  01BC               	clrf	??_lutInit+3
  5035  026F  083B               	movf	??_lutInit+2,w
  5036  0270  00B3               	movwf	Map@inMax
  5037  0271  083C               	movf	??_lutInit+3,w
  5038  0272  00B4               	movwf	Map@inMax+1
  5039  0273  3000               	movlw	0
  5040  0274  00B5               	movwf	Map@outMin
  5041  0275  00B6               	movwf	Map@outMin+1
  5042  0276  30FF               	movlw	255
  5043  0277  00B7               	movwf	Map@outMax
  5044  0278  3000               	movlw	0
  5045  0279  00B8               	movwf	Map@outMax+1
  5046  027A  318F  27B6  3181   	fcall	_Map
  5047  027D  0020               	movlb	0	; select bank0
  5048  027E  00BD               	movwf	??_lutInit+4
  5049  027F  30F0               	movlw	240
  5050  0280  00BE               	movwf	??_lutInit+5
  5051  0281  3025               	movlw	37
  5052  0282  00BF               	movwf	??_lutInit+6
  5053  0283  084A               	movf	lutInit@position,w
  5054  0284  073E               	addwf	??_lutInit+5,w
  5055  0285  00C0               	movwf	??_lutInit+7
  5056  0286  084B               	movf	lutInit@position+1,w
  5057  0287  3D3F               	addwfc	??_lutInit+6,w
  5058  0288  00C1               	movwf	??_lutInit+8
  5059  0289  0840               	movf	??_lutInit+7,w
  5060  028A  0086               	movwf	6
  5061  028B  0841               	movf	??_lutInit+8,w
  5062  028C  0087               	movwf	7
  5063  028D  083D               	movf	??_lutInit+4,w
  5064  028E                     L3:	
  5065  028E  0081               	movwf	1
  5066  028F                     l2798:	
  5067                           
  5068                           ;Controller.c: 141:         if (position < rxMin) {
  5069  028F  084B               	movf	lutInit@position+1,w
  5070  0290  3A80               	xorlw	128
  5071  0291  00B9               	movwf	??_lutInit
  5072  0292  3080               	movlw	128
  5073  0293  0239               	subwf	??_lutInit,w
  5074  0294  1D03               	skipz
  5075  0295  2A98               	goto	u1935
  5076  0296  0846               	movf	lutInit@rxMin,w
  5077  0297  024A               	subwf	lutInit@position,w
  5078  0298                     u1935:	
  5079  0298  1803               	skipnc
  5080  0299  2AA7               	goto	l2802
  5081                           
  5082                           ;Controller.c: 142:             lutRX[position] = 0;
  5083  029A  30F0               	movlw	240
  5084  029B  0020               	movlb	0	; select bank0
  5085  029C  00B9               	movwf	??_lutInit
  5086  029D  3024               	movlw	36
  5087  029E  00BA               	movwf	??_lutInit+1
  5088  029F  084A               	movf	lutInit@position,w
  5089  02A0  0739               	addwf	??_lutInit,w
  5090  02A1  0086               	movwf	6
  5091  02A2  084B               	movf	lutInit@position+1,w
  5092  02A3  3D3A               	addwfc	??_lutInit+1,w
  5093  02A4  0087               	movwf	7
  5094  02A5  0181               	clrf	1
  5095                           
  5096                           ;Controller.c: 143:         } else if (position > rxMax) {
  5097  02A6  2AF1               	goto	l2808
  5098  02A7                     l2802:	
  5099  02A7  0020               	movlb	0	; select bank0
  5100  02A8  084B               	movf	lutInit@position+1,w
  5101  02A9  3A80               	xorlw	128
  5102  02AA  3C80               	sublw	128
  5103  02AB  1D03               	skipz
  5104  02AC  2AAF               	goto	u1945
  5105  02AD  084A               	movf	lutInit@position,w
  5106  02AE  0247               	subwf	lutInit@rxMax,w
  5107  02AF                     u1945:	
  5108  02AF  1803               	skipnc
  5109  02B0  2AC2               	goto	l2806
  5110                           
  5111                           ;Controller.c: 144:             lutRX[position] = 255;
  5112  02B1  30F0               	movlw	240
  5113  02B2  0020               	movlb	0	; select bank0
  5114  02B3  00B9               	movwf	??_lutInit
  5115  02B4  3024               	movlw	36
  5116  02B5  00BA               	movwf	??_lutInit+1
  5117  02B6  084A               	movf	lutInit@position,w
  5118  02B7  0739               	addwf	??_lutInit,w
  5119  02B8  00BB               	movwf	??_lutInit+2
  5120  02B9  084B               	movf	lutInit@position+1,w
  5121  02BA  3D3A               	addwfc	??_lutInit+1,w
  5122  02BB  00BC               	movwf	??_lutInit+3
  5123  02BC  083B               	movf	??_lutInit+2,w
  5124  02BD  0086               	movwf	6
  5125  02BE  083C               	movf	??_lutInit+3,w
  5126  02BF  0087               	movwf	7
  5127  02C0  30FF               	movlw	255
  5128  02C1  2AF0               	goto	L4
  5129  02C2                     l2806:	
  5130                           ;Controller.c: 147:         } else {
  5131                           
  5132                           
  5133                           ;Controller.c: 148:             lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5134  02C2  0020               	movlb	0	; select bank0
  5135  02C3  084B               	movf	lutInit@position+1,w
  5136  02C4  00B0               	movwf	Map@x+1
  5137  02C5  084A               	movf	lutInit@position,w
  5138  02C6  00AF               	movwf	Map@x
  5139  02C7  0846               	movf	lutInit@rxMin,w
  5140  02C8  00B9               	movwf	??_lutInit
  5141  02C9  01BA               	clrf	??_lutInit+1
  5142  02CA  0839               	movf	??_lutInit,w
  5143  02CB  00B1               	movwf	Map@inMin
  5144  02CC  083A               	movf	??_lutInit+1,w
  5145  02CD  00B2               	movwf	Map@inMin+1
  5146  02CE  0847               	movf	lutInit@rxMax,w
  5147  02CF  00BB               	movwf	??_lutInit+2
  5148  02D0  01BC               	clrf	??_lutInit+3
  5149  02D1  083B               	movf	??_lutInit+2,w
  5150  02D2  00B3               	movwf	Map@inMax
  5151  02D3  083C               	movf	??_lutInit+3,w
  5152  02D4  00B4               	movwf	Map@inMax+1
  5153  02D5  3000               	movlw	0
  5154  02D6  00B5               	movwf	Map@outMin
  5155  02D7  00B6               	movwf	Map@outMin+1
  5156  02D8  30FF               	movlw	255
  5157  02D9  00B7               	movwf	Map@outMax
  5158  02DA  3000               	movlw	0
  5159  02DB  00B8               	movwf	Map@outMax+1
  5160  02DC  318F  27B6  3181   	fcall	_Map
  5161  02DF  0020               	movlb	0	; select bank0
  5162  02E0  00BD               	movwf	??_lutInit+4
  5163  02E1  30F0               	movlw	240
  5164  02E2  00BE               	movwf	??_lutInit+5
  5165  02E3  3024               	movlw	36
  5166  02E4  00BF               	movwf	??_lutInit+6
  5167  02E5  084A               	movf	lutInit@position,w
  5168  02E6  073E               	addwf	??_lutInit+5,w
  5169  02E7  00C0               	movwf	??_lutInit+7
  5170  02E8  084B               	movf	lutInit@position+1,w
  5171  02E9  3D3F               	addwfc	??_lutInit+6,w
  5172  02EA  00C1               	movwf	??_lutInit+8
  5173  02EB  0840               	movf	??_lutInit+7,w
  5174  02EC  0086               	movwf	6
  5175  02ED  0841               	movf	??_lutInit+8,w
  5176  02EE  0087               	movwf	7
  5177  02EF  083D               	movf	??_lutInit+4,w
  5178  02F0                     L4:	
  5179  02F0  0081               	movwf	1
  5180  02F1                     l2808:	
  5181                           
  5182                           ;Controller.c: 152:         if (position < ryMin) {
  5183  02F1  084B               	movf	lutInit@position+1,w
  5184  02F2  3A80               	xorlw	128
  5185  02F3  00B9               	movwf	??_lutInit
  5186  02F4  3080               	movlw	128
  5187  02F5  0239               	subwf	??_lutInit,w
  5188  02F6  1D03               	skipz
  5189  02F7  2AFA               	goto	u1955
  5190  02F8  0848               	movf	lutInit@ryMin,w
  5191  02F9  024A               	subwf	lutInit@position,w
  5192  02FA                     u1955:	
  5193  02FA  1803               	skipnc
  5194  02FB  2B09               	goto	l2812
  5195                           
  5196                           ;Controller.c: 153:             lutRY[position] = 0;
  5197  02FC  30F0               	movlw	240
  5198  02FD  0020               	movlb	0	; select bank0
  5199  02FE  00B9               	movwf	??_lutInit
  5200  02FF  3023               	movlw	35
  5201  0300  00BA               	movwf	??_lutInit+1
  5202  0301  084A               	movf	lutInit@position,w
  5203  0302  0739               	addwf	??_lutInit,w
  5204  0303  0086               	movwf	6
  5205  0304  084B               	movf	lutInit@position+1,w
  5206  0305  3D3A               	addwfc	??_lutInit+1,w
  5207  0306  0087               	movwf	7
  5208  0307  0181               	clrf	1
  5209                           
  5210                           ;Controller.c: 154:         } else if (position > ryMax) {
  5211  0308  2B53               	goto	l2818
  5212  0309                     l2812:	
  5213  0309  0020               	movlb	0	; select bank0
  5214  030A  084B               	movf	lutInit@position+1,w
  5215  030B  3A80               	xorlw	128
  5216  030C  3C80               	sublw	128
  5217  030D  1D03               	skipz
  5218  030E  2B11               	goto	u1965
  5219  030F  084A               	movf	lutInit@position,w
  5220  0310  0249               	subwf	lutInit@ryMax,w
  5221  0311                     u1965:	
  5222  0311  1803               	skipnc
  5223  0312  2B24               	goto	l2816
  5224                           
  5225                           ;Controller.c: 155:             lutRY[position] = 255;
  5226  0313  30F0               	movlw	240
  5227  0314  0020               	movlb	0	; select bank0
  5228  0315  00B9               	movwf	??_lutInit
  5229  0316  3023               	movlw	35
  5230  0317  00BA               	movwf	??_lutInit+1
  5231  0318  084A               	movf	lutInit@position,w
  5232  0319  0739               	addwf	??_lutInit,w
  5233  031A  00BB               	movwf	??_lutInit+2
  5234  031B  084B               	movf	lutInit@position+1,w
  5235  031C  3D3A               	addwfc	??_lutInit+1,w
  5236  031D  00BC               	movwf	??_lutInit+3
  5237  031E  083B               	movf	??_lutInit+2,w
  5238  031F  0086               	movwf	6
  5239  0320  083C               	movf	??_lutInit+3,w
  5240  0321  0087               	movwf	7
  5241  0322  30FF               	movlw	255
  5242  0323  2B52               	goto	L5
  5243  0324                     l2816:	
  5244                           ;Controller.c: 158:         } else {
  5245                           
  5246                           
  5247                           ;Controller.c: 159:             lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  5248  0324  0020               	movlb	0	; select bank0
  5249  0325  084B               	movf	lutInit@position+1,w
  5250  0326  00B0               	movwf	Map@x+1
  5251  0327  084A               	movf	lutInit@position,w
  5252  0328  00AF               	movwf	Map@x
  5253  0329  0848               	movf	lutInit@ryMin,w
  5254  032A  00B9               	movwf	??_lutInit
  5255  032B  01BA               	clrf	??_lutInit+1
  5256  032C  0839               	movf	??_lutInit,w
  5257  032D  00B1               	movwf	Map@inMin
  5258  032E  083A               	movf	??_lutInit+1,w
  5259  032F  00B2               	movwf	Map@inMin+1
  5260  0330  0849               	movf	lutInit@ryMax,w
  5261  0331  00BB               	movwf	??_lutInit+2
  5262  0332  01BC               	clrf	??_lutInit+3
  5263  0333  083B               	movf	??_lutInit+2,w
  5264  0334  00B3               	movwf	Map@inMax
  5265  0335  083C               	movf	??_lutInit+3,w
  5266  0336  00B4               	movwf	Map@inMax+1
  5267  0337  3000               	movlw	0
  5268  0338  00B5               	movwf	Map@outMin
  5269  0339  00B6               	movwf	Map@outMin+1
  5270  033A  30FF               	movlw	255
  5271  033B  00B7               	movwf	Map@outMax
  5272  033C  3000               	movlw	0
  5273  033D  00B8               	movwf	Map@outMax+1
  5274  033E  318F  27B6  3181   	fcall	_Map
  5275  0341  0020               	movlb	0	; select bank0
  5276  0342  00BD               	movwf	??_lutInit+4
  5277  0343  30F0               	movlw	240
  5278  0344  00BE               	movwf	??_lutInit+5
  5279  0345  3023               	movlw	35
  5280  0346  00BF               	movwf	??_lutInit+6
  5281  0347  084A               	movf	lutInit@position,w
  5282  0348  073E               	addwf	??_lutInit+5,w
  5283  0349  00C0               	movwf	??_lutInit+7
  5284  034A  084B               	movf	lutInit@position+1,w
  5285  034B  3D3F               	addwfc	??_lutInit+6,w
  5286  034C  00C1               	movwf	??_lutInit+8
  5287  034D  0840               	movf	??_lutInit+7,w
  5288  034E  0086               	movwf	6
  5289  034F  0841               	movf	??_lutInit+8,w
  5290  0350  0087               	movwf	7
  5291  0351  083D               	movf	??_lutInit+4,w
  5292  0352                     L5:	
  5293  0352  0081               	movwf	1
  5294  0353                     l2818:	
  5295                           
  5296                           ;Controller.c: 162:     }
  5297  0353  3001               	movlw	1
  5298  0354  07CA               	addwf	lutInit@position,f
  5299  0355  3000               	movlw	0
  5300  0356  3DCB               	addwfc	lutInit@position+1,f
  5301  0357  084B               	movf	lutInit@position+1,w
  5302  0358  3A80               	xorlw	128
  5303  0359  00B9               	movwf	??_lutInit
  5304  035A  3081               	movlw	129
  5305  035B  0239               	subwf	??_lutInit,w
  5306  035C  1D03               	skipz
  5307  035D  2B60               	goto	u1975
  5308  035E  3000               	movlw	0
  5309  035F  024A               	subwf	lutInit@position,w
  5310  0360                     u1975:	
  5311  0360  1803               	btfsc	3,0
  5312  0361  0008               	return
  5313  0362  29CA               	goto	l2778
  5314  0363                     __end_of_lutInit:	
  5315                           
  5316                           	psect	text8
  5317  07E7                     __ptext8:	
  5318 ;; *************** function _eepromRead *****************
  5319 ;; Defined at:
  5320 ;;		line 29 in file "Nvm.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  address         1    wreg     unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  address         1    1[BANK0 ] unsigned char 
  5325 ;;  data            1    2[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      unsigned char 
  5328 ;; Registers used:
  5329 ;;		wreg
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5337 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5338 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5339 ;;Total ram usage:        3 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    3
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_lutInit
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _eepromRead
  5351  07E7                     _eepromRead:	
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _eepromRead: [wreg]
  5355                           ;eepromRead@address stored from wreg
  5356  07E7  0020               	movlb	0	; select bank0
  5357  07E8  00A1               	movwf	eepromRead@address
  5358                           
  5359                           ;Nvm.c: 31:     char data;;Nvm.c: 33:     NVMCON1bits.NVMREGS = 1;
  5360  07E9  0030               	movlb	16	; select bank16
  5361  07EA  171E               	bsf	30,6	;volsfr
  5362                           
  5363                           ;Nvm.c: 34:     NVMADRH = 0xF0;
  5364  07EB  30F0               	movlw	240
  5365  07EC  009B               	movwf	27	;volatile
  5366                           
  5367                           ;Nvm.c: 35:     NVMADRL = address;
  5368  07ED  0020               	movlb	0	; select bank0
  5369  07EE  0821               	movf	eepromRead@address,w
  5370  07EF  0030               	movlb	16	; select bank16
  5371  07F0  009A               	movwf	26	;volatile
  5372                           
  5373                           ;Nvm.c: 36:     NVMCON1bits.RD = 1;
  5374  07F1  141E               	bsf	30,0	;volsfr
  5375                           
  5376                           ;Nvm.c: 38:     data = NVMDATL;
  5377  07F2  081C               	movf	28,w	;volatile
  5378  07F3  0020               	movlb	0	; select bank0
  5379  07F4  00A0               	movwf	??_eepromRead
  5380  07F5  0820               	movf	??_eepromRead,w
  5381  07F6  00A2               	movwf	eepromRead@data
  5382                           
  5383                           ;Nvm.c: 40:     return data;
  5384  07F7  0822               	movf	eepromRead@data,w
  5385  07F8  0008               	return
  5386  07F9                     __end_of_eepromRead:	
  5387                           
  5388                           	psect	text9
  5389  0FB6                     __ptext9:	
  5390 ;; *************** function _Map *****************
  5391 ;; Defined at:
  5392 ;;		line 98 in file "Controller.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  x               2   15[BANK0 ] int 
  5395 ;;  inMin           2   17[BANK0 ] int 
  5396 ;;  inMax           2   19[BANK0 ] int 
  5397 ;;  outMin          2   21[BANK0 ] int 
  5398 ;;  outMax          2   23[BANK0 ] int 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      unsigned char 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5410 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5413 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5414 ;;Total ram usage:       10 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    4
  5417 ;; This function calls:
  5418 ;;		___awdiv
  5419 ;;		___wmul
  5420 ;; This function is called by:
  5421 ;;		_lutInit
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _Map
  5427  0FB6                     _Map:	
  5428                           
  5429                           ;Controller.c: 100:     return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + o
      +                          utMin;
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  5433  0FB6  0020               	movlb	0	; select bank0
  5434  0FB7  0831               	movf	Map@inMin,w
  5435  0FB8  0233               	subwf	Map@inMax,w
  5436  0FB9  00A6               	movwf	___awdiv@divisor
  5437  0FBA  0832               	movf	Map@inMin+1,w
  5438  0FBB  3B34               	subwfb	Map@inMax+1,w
  5439  0FBC  00A7               	movwf	___awdiv@divisor+1
  5440  0FBD  0831               	movf	Map@inMin,w
  5441  0FBE  022F               	subwf	Map@x,w
  5442  0FBF  00A0               	movwf	___wmul@multiplier
  5443  0FC0  0832               	movf	Map@inMin+1,w
  5444  0FC1  3B30               	subwfb	Map@x+1,w
  5445  0FC2  00A1               	movwf	___wmul@multiplier+1
  5446  0FC3  0835               	movf	Map@outMin,w
  5447  0FC4  0237               	subwf	Map@outMax,w
  5448  0FC5  00A2               	movwf	___wmul@multiplicand
  5449  0FC6  0836               	movf	Map@outMin+1,w
  5450  0FC7  3B38               	subwfb	Map@outMax+1,w
  5451  0FC8  00A3               	movwf	___wmul@multiplicand+1
  5452  0FC9  318F  275C  318F   	fcall	___wmul
  5453  0FCC  0020               	movlb	0	; select bank0
  5454  0FCD  0821               	movf	?___wmul+1,w
  5455  0FCE  00A9               	movwf	___awdiv@dividend+1
  5456  0FCF  0820               	movf	?___wmul,w
  5457  0FD0  00A8               	movwf	___awdiv@dividend
  5458  0FD1  3186  26DE         	fcall	___awdiv
  5459  0FD3  0020               	movlb	0	; select bank0
  5460  0FD4  0826               	movf	?___awdiv,w
  5461  0FD5  0735               	addwf	Map@outMin,w
  5462  0FD6  0008               	return
  5463  0FD7                     __end_of_Map:	
  5464                           
  5465                           	psect	text10
  5466  0F5C                     __ptext10:	
  5467 ;; *************** function ___wmul *****************
  5468 ;; Defined at:
  5469 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5472 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  product         2    4[BANK0 ] unsigned int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  2    0[BANK0 ] unsigned int 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:        6 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    3
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_Map
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function ___wmul
  5500  0F5C                     ___wmul:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5504  0F5C  0020               	movlb	0	; select bank0
  5505  0F5D  01A4               	clrf	___wmul@product
  5506  0F5E  01A5               	clrf	___wmul@product+1
  5507  0F5F                     l2610:	
  5508  0F5F  1C20               	btfss	___wmul@multiplier,0
  5509  0F60  2F65               	goto	l594
  5510  0F61  0822               	movf	___wmul@multiplicand,w
  5511  0F62  07A4               	addwf	___wmul@product,f
  5512  0F63  0823               	movf	___wmul@multiplicand+1,w
  5513  0F64  3DA5               	addwfc	___wmul@product+1,f
  5514  0F65                     l594:	
  5515  0F65  3001               	movlw	1
  5516  0F66                     u1605:	
  5517  0F66  35A2               	lslf	___wmul@multiplicand,f
  5518  0F67  0DA3               	rlf	___wmul@multiplicand+1,f
  5519  0F68  0B89               	decfsz	9,f
  5520  0F69  2F66               	goto	u1605
  5521  0F6A  3001               	movlw	1
  5522  0F6B                     u1615:	
  5523  0F6B  36A1               	lsrf	___wmul@multiplier+1,f
  5524  0F6C  0CA0               	rrf	___wmul@multiplier,f
  5525  0F6D  0B89               	decfsz	9,f
  5526  0F6E  2F6B               	goto	u1615
  5527  0F6F  0820               	movf	___wmul@multiplier,w
  5528  0F70  0421               	iorwf	___wmul@multiplier+1,w
  5529  0F71  1D03               	btfss	3,2
  5530  0F72  2F5F               	goto	l2610
  5531  0F73  0825               	movf	___wmul@product+1,w
  5532  0F74  00A1               	movwf	?___wmul+1
  5533  0F75  0824               	movf	___wmul@product,w
  5534  0F76  00A0               	movwf	?___wmul
  5535  0F77  0008               	return
  5536  0F78                     __end_of___wmul:	
  5537                           
  5538                           	psect	text11
  5539  06DE                     __ptext11:	
  5540 ;; *************** function ___awdiv *****************
  5541 ;; Defined at:
  5542 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  divisor         2    6[BANK0 ] int 
  5545 ;;  dividend        2    8[BANK0 ] int 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  quotient        2   13[BANK0 ] int 
  5548 ;;  sign            1   12[BANK0 ] unsigned char 
  5549 ;;  counter         1   11[BANK0 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  2    6[BANK0 ] int 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5562 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5563 ;;Total ram usage:        9 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    3
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_Map
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function ___awdiv
  5575  06DE                     ___awdiv:	
  5576                           
  5577                           ;incstack = 0
  5578                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5579  06DE  0020               	movlb	0	; select bank0
  5580  06DF  01AC               	clrf	___awdiv@sign
  5581  06E0  1FA7               	btfss	___awdiv@divisor+1,7
  5582  06E1  2EE9               	goto	l1854
  5583  06E2  09A6               	comf	___awdiv@divisor,f
  5584  06E3  09A7               	comf	___awdiv@divisor+1,f
  5585  06E4  0AA6               	incf	___awdiv@divisor,f
  5586  06E5  1903               	skipnz
  5587  06E6  0AA7               	incf	___awdiv@divisor+1,f
  5588  06E7  01AC               	clrf	___awdiv@sign
  5589  06E8  0AAC               	incf	___awdiv@sign,f
  5590  06E9                     l1854:	
  5591  06E9  1FA9               	btfss	___awdiv@dividend+1,7
  5592  06EA  2EF4               	goto	l1860
  5593  06EB  09A8               	comf	___awdiv@dividend,f
  5594  06EC  09A9               	comf	___awdiv@dividend+1,f
  5595  06ED  0AA8               	incf	___awdiv@dividend,f
  5596  06EE  1903               	skipnz
  5597  06EF  0AA9               	incf	___awdiv@dividend+1,f
  5598  06F0  3001               	movlw	1
  5599  06F1  00AA               	movwf	??___awdiv
  5600  06F2  082A               	movf	??___awdiv,w
  5601  06F3  06AC               	xorwf	___awdiv@sign,f
  5602  06F4                     l1860:	
  5603  06F4  01AD               	clrf	___awdiv@quotient
  5604  06F5  01AE               	clrf	___awdiv@quotient+1
  5605  06F6  0826               	movf	___awdiv@divisor,w
  5606  06F7  0427               	iorwf	___awdiv@divisor+1,w
  5607  06F8  1903               	btfsc	3,2
  5608  06F9  2F23               	goto	l1882
  5609  06FA  01AB               	clrf	___awdiv@counter
  5610  06FB  0AAB               	incf	___awdiv@counter,f
  5611  06FC                     l1870:	
  5612  06FC  1BA7               	btfsc	___awdiv@divisor+1,7
  5613  06FD  2F08               	goto	l1872
  5614  06FE  3001               	movlw	1
  5615  06FF                     u875:	
  5616  06FF  35A6               	lslf	___awdiv@divisor,f
  5617  0700  0DA7               	rlf	___awdiv@divisor+1,f
  5618  0701  0B89               	decfsz	9,f
  5619  0702  2EFF               	goto	u875
  5620  0703  3001               	movlw	1
  5621  0704  00AA               	movwf	??___awdiv
  5622  0705  082A               	movf	??___awdiv,w
  5623  0706  07AB               	addwf	___awdiv@counter,f
  5624  0707  2EFC               	goto	l1870
  5625  0708                     l1872:	
  5626  0708  3001               	movlw	1
  5627  0709                     u895:	
  5628  0709  35AD               	lslf	___awdiv@quotient,f
  5629  070A  0DAE               	rlf	___awdiv@quotient+1,f
  5630  070B  0B89               	decfsz	9,f
  5631  070C  2F09               	goto	u895
  5632  070D  0827               	movf	___awdiv@divisor+1,w
  5633  070E  0229               	subwf	___awdiv@dividend+1,w
  5634  070F  1D03               	skipz
  5635  0710  2F13               	goto	u905
  5636  0711  0826               	movf	___awdiv@divisor,w
  5637  0712  0228               	subwf	___awdiv@dividend,w
  5638  0713                     u905:	
  5639  0713  1C03               	skipc
  5640  0714  2F1A               	goto	l1878
  5641  0715  0826               	movf	___awdiv@divisor,w
  5642  0716  02A8               	subwf	___awdiv@dividend,f
  5643  0717  0827               	movf	___awdiv@divisor+1,w
  5644  0718  3BA9               	subwfb	___awdiv@dividend+1,f
  5645  0719  142D               	bsf	___awdiv@quotient,0
  5646  071A                     l1878:	
  5647  071A  3001               	movlw	1
  5648  071B                     u915:	
  5649  071B  36A7               	lsrf	___awdiv@divisor+1,f
  5650  071C  0CA6               	rrf	___awdiv@divisor,f
  5651  071D  0B89               	decfsz	9,f
  5652  071E  2F1B               	goto	u915
  5653  071F  3001               	movlw	1
  5654  0720  02AB               	subwf	___awdiv@counter,f
  5655  0721  1D03               	btfss	3,2
  5656  0722  2F08               	goto	l1872
  5657  0723                     l1882:	
  5658  0723  082C               	movf	___awdiv@sign,w
  5659  0724  1903               	btfsc	3,2
  5660  0725  2F2B               	goto	l1886
  5661  0726  09AD               	comf	___awdiv@quotient,f
  5662  0727  09AE               	comf	___awdiv@quotient+1,f
  5663  0728  0AAD               	incf	___awdiv@quotient,f
  5664  0729  1903               	skipnz
  5665  072A  0AAE               	incf	___awdiv@quotient+1,f
  5666  072B                     l1886:	
  5667  072B  082E               	movf	___awdiv@quotient+1,w
  5668  072C  00A7               	movwf	?___awdiv+1
  5669  072D  082D               	movf	___awdiv@quotient,w
  5670  072E  00A6               	movwf	?___awdiv
  5671  072F  0008               	return
  5672  0730                     __end_of___awdiv:	
  5673                           
  5674                           	psect	text12
  5675  0363                     __ptext12:	
  5676 ;; *************** function _configureController *****************
  5677 ;; Defined at:
  5678 ;;		line 195 in file "Controller.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  ry              1   21[BANK0 ] unsigned char 
  5683 ;;  rx              1   20[BANK0 ] unsigned char 
  5684 ;;  ly              1   19[BANK0 ] unsigned char 
  5685 ;;  lx              1   18[BANK0 ] unsigned char 
  5686 ;;  ryMax           1   17[BANK0 ] unsigned char 
  5687 ;;  ryMin           1   16[BANK0 ] unsigned char 
  5688 ;;  rxMax           1   15[BANK0 ] unsigned char 
  5689 ;;  rxMin           1   14[BANK0 ] unsigned char 
  5690 ;;  lyMax           1   13[BANK0 ] unsigned char 
  5691 ;;  lyMin           1   12[BANK0 ] unsigned char 
  5692 ;;  lxMax           1   11[BANK0 ] unsigned char 
  5693 ;;  lxMin           1   10[BANK0 ] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5704 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5706 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5707 ;;Total ram usage:       13 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    5
  5710 ;; This function calls:
  5711 ;;		_eepromWrite
  5712 ;;		_readADC
  5713 ;;		_readController
  5714 ;; This function is called by:
  5715 ;;		_main
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function _configureController
  5721  0363                     _configureController:	
  5722                           
  5723                           ;Controller.c: 198:     INTCONbits.GIE = 0;
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5727  0363  138B               	bcf	11,7	;volatile
  5728                           
  5729                           ;Controller.c: 199:     INTCONbits.PEIE = 0;
  5730  0364  130B               	bcf	11,6	;volatile
  5731                           
  5732                           ;Controller.c: 201:     char lxMin = readADC(0b010000);
  5733  0365  3010               	movlw	16
  5734  0366  0020               	movlb	0	; select bank0
  5735  0367  00A0               	movwf	readADC@channel
  5736  0368  3000               	movlw	0
  5737  0369  00A1               	movwf	readADC@channel+1
  5738  036A  318F  27D7  3183   	fcall	_readADC
  5739  036D  0020               	movlb	0	; select bank0
  5740  036E  0820               	movf	?_readADC,w
  5741  036F  00A9               	movwf	??_configureController
  5742  0370  0829               	movf	??_configureController,w
  5743  0371  00AA               	movwf	configureController@lxMin
  5744                           
  5745                           ;Controller.c: 202:     char lxMax = readADC(0b010000);
  5746  0372  3010               	movlw	16
  5747  0373  00A0               	movwf	readADC@channel
  5748  0374  3000               	movlw	0
  5749  0375  00A1               	movwf	readADC@channel+1
  5750  0376  318F  27D7  3183   	fcall	_readADC
  5751  0379  0020               	movlb	0	; select bank0
  5752  037A  0820               	movf	?_readADC,w
  5753  037B  00A9               	movwf	??_configureController
  5754  037C  0829               	movf	??_configureController,w
  5755  037D  00AB               	movwf	configureController@lxMax
  5756                           
  5757                           ;Controller.c: 203:     char lyMin = readADC(0b10001);
  5758  037E  3011               	movlw	17
  5759  037F  00A0               	movwf	readADC@channel
  5760  0380  3000               	movlw	0
  5761  0381  00A1               	movwf	readADC@channel+1
  5762  0382  318F  27D7  3183   	fcall	_readADC
  5763  0385  0020               	movlb	0	; select bank0
  5764  0386  0820               	movf	?_readADC,w
  5765  0387  00A9               	movwf	??_configureController
  5766  0388  0829               	movf	??_configureController,w
  5767  0389  00AC               	movwf	configureController@lyMin
  5768                           
  5769                           ;Controller.c: 204:     char lyMax = readADC(0b10001);
  5770  038A  3011               	movlw	17
  5771  038B  00A0               	movwf	readADC@channel
  5772  038C  3000               	movlw	0
  5773  038D  00A1               	movwf	readADC@channel+1
  5774  038E  318F  27D7  3183   	fcall	_readADC
  5775  0391  0020               	movlb	0	; select bank0
  5776  0392  0820               	movf	?_readADC,w
  5777  0393  00A9               	movwf	??_configureController
  5778  0394  0829               	movf	??_configureController,w
  5779  0395  00AD               	movwf	configureController@lyMax
  5780                           
  5781                           ;Controller.c: 206:     char rxMin = readADC(0b010110);
  5782  0396  3016               	movlw	22
  5783  0397  00A0               	movwf	readADC@channel
  5784  0398  3000               	movlw	0
  5785  0399  00A1               	movwf	readADC@channel+1
  5786  039A  318F  27D7  3183   	fcall	_readADC
  5787  039D  0020               	movlb	0	; select bank0
  5788  039E  0820               	movf	?_readADC,w
  5789  039F  00A9               	movwf	??_configureController
  5790  03A0  0829               	movf	??_configureController,w
  5791  03A1  00AE               	movwf	configureController@rxMin
  5792                           
  5793                           ;Controller.c: 207:     char rxMax = readADC(0b010110);
  5794  03A2  3016               	movlw	22
  5795  03A3  00A0               	movwf	readADC@channel
  5796  03A4  3000               	movlw	0
  5797  03A5  00A1               	movwf	readADC@channel+1
  5798  03A6  318F  27D7  3183   	fcall	_readADC
  5799  03A9  0020               	movlb	0	; select bank0
  5800  03AA  0820               	movf	?_readADC,w
  5801  03AB  00A9               	movwf	??_configureController
  5802  03AC  0829               	movf	??_configureController,w
  5803  03AD  00AF               	movwf	configureController@rxMax
  5804                           
  5805                           ;Controller.c: 208:     char ryMin = readADC(0b010111);
  5806  03AE  3017               	movlw	23
  5807  03AF  00A0               	movwf	readADC@channel
  5808  03B0  3000               	movlw	0
  5809  03B1  00A1               	movwf	readADC@channel+1
  5810  03B2  318F  27D7  3183   	fcall	_readADC
  5811  03B5  0020               	movlb	0	; select bank0
  5812  03B6  0820               	movf	?_readADC,w
  5813  03B7  00A9               	movwf	??_configureController
  5814  03B8  0829               	movf	??_configureController,w
  5815  03B9  00B0               	movwf	configureController@ryMin
  5816                           
  5817                           ;Controller.c: 209:     char ryMax = readADC(0b010111);
  5818  03BA  3017               	movlw	23
  5819  03BB  00A0               	movwf	readADC@channel
  5820  03BC  3000               	movlw	0
  5821  03BD  00A1               	movwf	readADC@channel+1
  5822  03BE  318F  27D7  3183   	fcall	_readADC
  5823  03C1  0020               	movlb	0	; select bank0
  5824  03C2  0820               	movf	?_readADC,w
  5825  03C3  00A9               	movwf	??_configureController
  5826  03C4  0829               	movf	??_configureController,w
  5827  03C5  00B1               	movwf	configureController@ryMax
  5828                           
  5829                           ;Controller.c: 237:             break;
  5830  03C6  2C3F               	goto	l2826
  5831  03C7                     l2844:	
  5832                           
  5833                           ;Controller.c: 241:         if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF)
      +                           {
  5834  03C7  307F               	movlw	127
  5835  03C8  0658               	xorwf	_digitalStateFirst,w
  5836  03C9  1D03               	btfss	3,2
  5837  03CA  2BCF               	goto	l2850
  5838  03CB  30CF               	movlw	207
  5839  03CC  0657               	xorwf	_digitalStateSecond,w
  5840  03CD  1903               	btfsc	3,2
  5841  03CE  2C60               	goto	l2870
  5842  03CF                     l2850:	
  5843                           
  5844                           ;Controller.c: 246:         lx = readADC(0b010000);
  5845  03CF  3010               	movlw	16
  5846  03D0  00A0               	movwf	readADC@channel
  5847  03D1  3000               	movlw	0
  5848  03D2  00A1               	movwf	readADC@channel+1
  5849  03D3  318F  27D7  3183   	fcall	_readADC
  5850  03D6  0020               	movlb	0	; select bank0
  5851  03D7  0820               	movf	?_readADC,w
  5852  03D8  00A9               	movwf	??_configureController
  5853  03D9  0829               	movf	??_configureController,w
  5854  03DA  00B2               	movwf	configureController@lx
  5855                           
  5856                           ;Controller.c: 247:         ly = readADC(0b10001);
  5857  03DB  3011               	movlw	17
  5858  03DC  00A0               	movwf	readADC@channel
  5859  03DD  3000               	movlw	0
  5860  03DE  00A1               	movwf	readADC@channel+1
  5861  03DF  318F  27D7  3183   	fcall	_readADC
  5862  03E2  0020               	movlb	0	; select bank0
  5863  03E3  0820               	movf	?_readADC,w
  5864  03E4  00A9               	movwf	??_configureController
  5865  03E5  0829               	movf	??_configureController,w
  5866  03E6  00B3               	movwf	configureController@ly
  5867                           
  5868                           ;Controller.c: 249:         rx = readADC(0b010110);
  5869  03E7  3016               	movlw	22
  5870  03E8  00A0               	movwf	readADC@channel
  5871  03E9  3000               	movlw	0
  5872  03EA  00A1               	movwf	readADC@channel+1
  5873  03EB  318F  27D7  3183   	fcall	_readADC
  5874  03EE  0020               	movlb	0	; select bank0
  5875  03EF  0820               	movf	?_readADC,w
  5876  03F0  00A9               	movwf	??_configureController
  5877  03F1  0829               	movf	??_configureController,w
  5878  03F2  00B4               	movwf	configureController@rx
  5879                           
  5880                           ;Controller.c: 250:         ry = readADC(0b010111);
  5881  03F3  3017               	movlw	23
  5882  03F4  00A0               	movwf	readADC@channel
  5883  03F5  3000               	movlw	0
  5884  03F6  00A1               	movwf	readADC@channel+1
  5885  03F7  318F  27D7  3183   	fcall	_readADC
  5886  03FA  0020               	movlb	0	; select bank0
  5887  03FB  0820               	movf	?_readADC,w
  5888  03FC  00A9               	movwf	??_configureController
  5889  03FD  0829               	movf	??_configureController,w
  5890  03FE  00B5               	movwf	configureController@ry
  5891                           
  5892                           ;Controller.c: 253:         if (ly > lyMax) {
  5893  03FF  0833               	movf	configureController@ly,w
  5894  0400  022D               	subwf	configureController@lyMax,w
  5895  0401  1803               	skipnc
  5896  0402  2C07               	goto	l311
  5897                           
  5898                           ;Controller.c: 254:             lyMax = ly;
  5899  0403  0833               	movf	configureController@ly,w
  5900  0404  00A9               	movwf	??_configureController
  5901  0405  0829               	movf	??_configureController,w
  5902  0406  00AD               	movwf	configureController@lyMax
  5903  0407                     l311:	
  5904                           ;Controller.c: 255:         }
  5905                           
  5906                           
  5907                           ;Controller.c: 257:         if (ly < lyMin) {
  5908  0407  082C               	movf	configureController@lyMin,w
  5909  0408  0233               	subwf	configureController@ly,w
  5910  0409  1803               	skipnc
  5911  040A  2C0F               	goto	l312
  5912                           
  5913                           ;Controller.c: 258:             lyMin = ly;
  5914  040B  0833               	movf	configureController@ly,w
  5915  040C  00A9               	movwf	??_configureController
  5916  040D  0829               	movf	??_configureController,w
  5917  040E  00AC               	movwf	configureController@lyMin
  5918  040F                     l312:	
  5919                           ;Controller.c: 259:         }
  5920                           
  5921                           
  5922                           ;Controller.c: 261:         if (lx > lxMax) {
  5923  040F  0832               	movf	configureController@lx,w
  5924  0410  022B               	subwf	configureController@lxMax,w
  5925  0411  1803               	skipnc
  5926  0412  2C17               	goto	l313
  5927                           
  5928                           ;Controller.c: 262:             lxMax = lx;
  5929  0413  0832               	movf	configureController@lx,w
  5930  0414  00A9               	movwf	??_configureController
  5931  0415  0829               	movf	??_configureController,w
  5932  0416  00AB               	movwf	configureController@lxMax
  5933  0417                     l313:	
  5934                           ;Controller.c: 263:         }
  5935                           
  5936                           
  5937                           ;Controller.c: 265:         if (lx < lxMin) {
  5938  0417  082A               	movf	configureController@lxMin,w
  5939  0418  0232               	subwf	configureController@lx,w
  5940  0419  1803               	skipnc
  5941  041A  2C1F               	goto	l314
  5942                           
  5943                           ;Controller.c: 266:             lxMin = lx;
  5944  041B  0832               	movf	configureController@lx,w
  5945  041C  00A9               	movwf	??_configureController
  5946  041D  0829               	movf	??_configureController,w
  5947  041E  00AA               	movwf	configureController@lxMin
  5948  041F                     l314:	
  5949                           ;Controller.c: 267:         }
  5950                           
  5951                           
  5952                           ;Controller.c: 271:         if (ry > ryMax) {
  5953  041F  0835               	movf	configureController@ry,w
  5954  0420  0231               	subwf	configureController@ryMax,w
  5955  0421  1803               	skipnc
  5956  0422  2C27               	goto	l315
  5957                           
  5958                           ;Controller.c: 272:             ryMax = ry;
  5959  0423  0835               	movf	configureController@ry,w
  5960  0424  00A9               	movwf	??_configureController
  5961  0425  0829               	movf	??_configureController,w
  5962  0426  00B1               	movwf	configureController@ryMax
  5963  0427                     l315:	
  5964                           ;Controller.c: 273:         }
  5965                           
  5966                           
  5967                           ;Controller.c: 275:         if (ry < ryMin) {
  5968  0427  0830               	movf	configureController@ryMin,w
  5969  0428  0235               	subwf	configureController@ry,w
  5970  0429  1803               	skipnc
  5971  042A  2C2F               	goto	l316
  5972                           
  5973                           ;Controller.c: 276:             ryMin = ry;
  5974  042B  0835               	movf	configureController@ry,w
  5975  042C  00A9               	movwf	??_configureController
  5976  042D  0829               	movf	??_configureController,w
  5977  042E  00B0               	movwf	configureController@ryMin
  5978  042F                     l316:	
  5979                           ;Controller.c: 277:         }
  5980                           
  5981                           
  5982                           ;Controller.c: 279:         if (rx > rxMax) {
  5983  042F  0834               	movf	configureController@rx,w
  5984  0430  022F               	subwf	configureController@rxMax,w
  5985  0431  1803               	skipnc
  5986  0432  2C37               	goto	l317
  5987                           
  5988                           ;Controller.c: 280:             rxMax = rx;
  5989  0433  0834               	movf	configureController@rx,w
  5990  0434  00A9               	movwf	??_configureController
  5991  0435  0829               	movf	??_configureController,w
  5992  0436  00AF               	movwf	configureController@rxMax
  5993  0437                     l317:	
  5994                           ;Controller.c: 281:         }
  5995                           
  5996                           
  5997                           ;Controller.c: 283:         if (rx < rxMin) {
  5998  0437  082E               	movf	configureController@rxMin,w
  5999  0438  0234               	subwf	configureController@rx,w
  6000  0439  1803               	skipnc
  6001  043A  2C3F               	goto	l2826
  6002                           
  6003                           ;Controller.c: 284:             rxMin = rx;
  6004  043B  0834               	movf	configureController@rx,w
  6005  043C  00A9               	movwf	??_configureController
  6006  043D  0829               	movf	??_configureController,w
  6007  043E  00AE               	movwf	configureController@rxMin
  6008  043F                     l2826:	
  6009                           
  6010                           ;Controller.c: 221:         readController(0);
  6011  043F  3000               	movlw	0
  6012  0440  3184  24A9  3183   	fcall	_readController
  6013                           
  6014                           ;Controller.c: 224:         if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F)
      +                           {
  6015  0443  306F               	movlw	111
  6016  0444  0020               	movlb	0	; select bank0
  6017  0445  0658               	xorwf	_digitalStateFirst,w
  6018  0446  1D03               	btfss	3,2
  6019  0447  2BC7               	goto	l2844
  6020  0448  303F               	movlw	63
  6021  0449  0657               	xorwf	_digitalStateSecond,w
  6022  044A  1D03               	btfss	3,2
  6023  044B  2BC7               	goto	l2844
  6024                           
  6025                           ;Controller.c: 227:             lxMin = 0;
  6026  044C  01AA               	clrf	configureController@lxMin
  6027                           
  6028                           ;Controller.c: 228:             lxMax = 255;
  6029  044D  30FF               	movlw	255
  6030  044E  00A9               	movwf	??_configureController
  6031  044F  0829               	movf	??_configureController,w
  6032  0450  00AB               	movwf	configureController@lxMax
  6033                           
  6034                           ;Controller.c: 229:             lyMin = 0;
  6035  0451  01AC               	clrf	configureController@lyMin
  6036                           
  6037                           ;Controller.c: 230:             lyMax = 255;
  6038  0452  30FF               	movlw	255
  6039  0453  00A9               	movwf	??_configureController
  6040  0454  0829               	movf	??_configureController,w
  6041  0455  00AD               	movwf	configureController@lyMax
  6042                           
  6043                           ;Controller.c: 232:             rxMin = 0;
  6044  0456  01AE               	clrf	configureController@rxMin
  6045                           
  6046                           ;Controller.c: 233:             rxMax = 255;
  6047  0457  30FF               	movlw	255
  6048  0458  00A9               	movwf	??_configureController
  6049  0459  0829               	movf	??_configureController,w
  6050  045A  00AF               	movwf	configureController@rxMax
  6051                           
  6052                           ;Controller.c: 234:             ryMin = 0;
  6053  045B  01B0               	clrf	configureController@ryMin
  6054                           
  6055                           ;Controller.c: 235:             ryMax = 255;
  6056  045C  30FF               	movlw	255
  6057  045D  00A9               	movwf	??_configureController
  6058  045E  0829               	movf	??_configureController,w
  6059  045F  00B1               	movwf	configureController@ryMax
  6060  0460                     l2870:	
  6061                           
  6062                           ;Controller.c: 290:     eepromWrite(0x60, lxMin);
  6063  0460  082A               	movf	configureController@lxMin,w
  6064  0461  00A9               	movwf	??_configureController
  6065  0462  0829               	movf	??_configureController,w
  6066  0463  00A0               	movwf	eepromWrite@data
  6067  0464  3060               	movlw	96
  6068  0465  318F  2795  3183   	fcall	_eepromWrite
  6069                           
  6070                           ;Controller.c: 291:     eepromWrite(0x61, lxMax);
  6071  0468  0020               	movlb	0	; select bank0
  6072  0469  082B               	movf	configureController@lxMax,w
  6073  046A  00A9               	movwf	??_configureController
  6074  046B  0829               	movf	??_configureController,w
  6075  046C  00A0               	movwf	eepromWrite@data
  6076  046D  3061               	movlw	97
  6077  046E  318F  2795  3183   	fcall	_eepromWrite
  6078                           
  6079                           ;Controller.c: 292:     eepromWrite(0x62, lyMin);
  6080  0471  0020               	movlb	0	; select bank0
  6081  0472  082C               	movf	configureController@lyMin,w
  6082  0473  00A9               	movwf	??_configureController
  6083  0474  0829               	movf	??_configureController,w
  6084  0475  00A0               	movwf	eepromWrite@data
  6085  0476  3062               	movlw	98
  6086  0477  318F  2795  3183   	fcall	_eepromWrite
  6087                           
  6088                           ;Controller.c: 293:     eepromWrite(0x63, lyMax);
  6089  047A  0020               	movlb	0	; select bank0
  6090  047B  082D               	movf	configureController@lyMax,w
  6091  047C  00A9               	movwf	??_configureController
  6092  047D  0829               	movf	??_configureController,w
  6093  047E  00A0               	movwf	eepromWrite@data
  6094  047F  3063               	movlw	99
  6095  0480  318F  2795  3183   	fcall	_eepromWrite
  6096                           
  6097                           ;Controller.c: 295:     eepromWrite(0x64, rxMin);
  6098  0483  0020               	movlb	0	; select bank0
  6099  0484  082E               	movf	configureController@rxMin,w
  6100  0485  00A9               	movwf	??_configureController
  6101  0486  0829               	movf	??_configureController,w
  6102  0487  00A0               	movwf	eepromWrite@data
  6103  0488  3064               	movlw	100
  6104  0489  318F  2795  3183   	fcall	_eepromWrite
  6105                           
  6106                           ;Controller.c: 296:     eepromWrite(0x65, rxMax);
  6107  048C  0020               	movlb	0	; select bank0
  6108  048D  082F               	movf	configureController@rxMax,w
  6109  048E  00A9               	movwf	??_configureController
  6110  048F  0829               	movf	??_configureController,w
  6111  0490  00A0               	movwf	eepromWrite@data
  6112  0491  3065               	movlw	101
  6113  0492  318F  2795  3183   	fcall	_eepromWrite
  6114                           
  6115                           ;Controller.c: 297:     eepromWrite(0x66, ryMin);
  6116  0495  0020               	movlb	0	; select bank0
  6117  0496  0830               	movf	configureController@ryMin,w
  6118  0497  00A9               	movwf	??_configureController
  6119  0498  0829               	movf	??_configureController,w
  6120  0499  00A0               	movwf	eepromWrite@data
  6121  049A  3066               	movlw	102
  6122  049B  318F  2795  3183   	fcall	_eepromWrite
  6123                           
  6124                           ;Controller.c: 298:     eepromWrite(0x67, ryMax);
  6125  049E  0020               	movlb	0	; select bank0
  6126  049F  0831               	movf	configureController@ryMax,w
  6127  04A0  00A9               	movwf	??_configureController
  6128  04A1  0829               	movf	??_configureController,w
  6129  04A2  00A0               	movwf	eepromWrite@data
  6130  04A3  3067               	movlw	103
  6131  04A4  318F  2795         	fcall	_eepromWrite
  6132                           
  6133                           ;Controller.c: 300:     INTCONbits.GIE = 1;
  6134  04A6  178B               	bsf	11,7	;volatile
  6135                           
  6136                           ;Controller.c: 301:     INTCONbits.PEIE = 1;
  6137  04A7  170B               	bsf	11,6	;volatile
  6138  04A8  0008               	return
  6139  04A9                     __end_of_configureController:	
  6140                           
  6141                           	psect	text13
  6142  04A9                     __ptext13:	
  6143 ;; *************** function _readController *****************
  6144 ;; Defined at:
  6145 ;;		line 12 in file "Controller.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  analogMode      1    wreg     unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  analogMode      1    2[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6161 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6163 ;;Total ram usage:        3 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    3
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_main
  6170 ;;		_configureController
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function _readController
  6176  04A9                     _readController:	
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  6180                           ;readController@analogMode stored from wreg
  6181  04A9  0020               	movlb	0	; select bank0
  6182  04AA  00A2               	movwf	readController@analogMode
  6183                           
  6184                           ;Controller.c: 15:     DigitalControllerByte1[DDown] = RA7;
  6185  04AB  3000               	movlw	0
  6186  04AC  1B8C               	btfsc	12,7	;volatile
  6187  04AD  3001               	movlw	1
  6188  04AE  0021               	movlb	1	; select bank1
  6189  04AF  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6190                           
  6191                           ;Controller.c: 16:     DigitalControllerByte1[DUp] = RA6;
  6192  04B0  3000               	movlw	0
  6193  04B1  0020               	movlb	0	; select bank0
  6194  04B2  1B0C               	btfsc	12,6	;volatile
  6195  04B3  3001               	movlw	1
  6196  04B4  0021               	movlb	1	; select bank1
  6197  04B5  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6198                           
  6199                           ;Controller.c: 17:     DigitalControllerByte1[DLeft] = RB0;
  6200  04B6  3000               	movlw	0
  6201  04B7  0020               	movlb	0	; select bank0
  6202  04B8  180D               	btfsc	13,0	;volatile
  6203  04B9  3001               	movlw	1
  6204  04BA  0021               	movlb	1	; select bank1
  6205  04BB  00C8               	movwf	_DigitalControllerByte1^(0+128)
  6206                           
  6207                           ;Controller.c: 18:     DigitalControllerByte1[DRight] = RB1;
  6208  04BC  3000               	movlw	0
  6209  04BD  0020               	movlb	0	; select bank0
  6210  04BE  188D               	btfsc	13,1	;volatile
  6211  04BF  3001               	movlw	1
  6212  04C0  0021               	movlb	1	; select bank1
  6213  04C1  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6214                           
  6215                           ;Controller.c: 19:     DigitalControllerByte1[R3] = RD0;
  6216  04C2  3000               	movlw	0
  6217  04C3  0020               	movlb	0	; select bank0
  6218  04C4  180F               	btfsc	15,0	;volatile
  6219  04C5  3001               	movlw	1
  6220  04C6  0021               	movlb	1	; select bank1
  6221  04C7  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6222                           
  6223                           ;Controller.c: 20:     DigitalControllerByte1[L3] = RC2;
  6224  04C8  3000               	movlw	0
  6225  04C9  0020               	movlb	0	; select bank0
  6226  04CA  190E               	btfsc	14,2	;volatile
  6227  04CB  3001               	movlw	1
  6228  04CC  0021               	movlb	1	; select bank1
  6229  04CD  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6230                           
  6231                           ;Controller.c: 21:     DigitalControllerByte1[Start] = RB6;
  6232  04CE  3000               	movlw	0
  6233  04CF  0020               	movlb	0	; select bank0
  6234  04D0  1B0D               	btfsc	13,6	;volatile
  6235  04D1  3001               	movlw	1
  6236  04D2  0021               	movlb	1	; select bank1
  6237  04D3  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6238                           
  6239                           ;Controller.c: 22:     DigitalControllerByte1[Select] = RB7;
  6240  04D4  3000               	movlw	0
  6241  04D5  0020               	movlb	0	; select bank0
  6242  04D6  1B8D               	btfsc	13,7	;volatile
  6243  04D7  3001               	movlw	1
  6244  04D8  0021               	movlb	1	; select bank1
  6245  04D9  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6246                           
  6247                           ;Controller.c: 24:     DigitalControllerByte2[Square] = RA0;
  6248  04DA  3000               	movlw	0
  6249  04DB  0020               	movlb	0	; select bank0
  6250  04DC  180C               	btfsc	12,0	;volatile
  6251  04DD  3001               	movlw	1
  6252  04DE  0021               	movlb	1	; select bank1
  6253  04DF  00C0               	movwf	_DigitalControllerByte2^(0+128)
  6254                           
  6255                           ;Controller.c: 25:     DigitalControllerByte2[Circle] = RA3;
  6256  04E0  3000               	movlw	0
  6257  04E1  0020               	movlb	0	; select bank0
  6258  04E2  198C               	btfsc	12,3	;volatile
  6259  04E3  3001               	movlw	1
  6260  04E4  0021               	movlb	1	; select bank1
  6261  04E5  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6262                           
  6263                           ;Controller.c: 26:     DigitalControllerByte2[X] = RA2;
  6264  04E6  3000               	movlw	0
  6265  04E7  0020               	movlb	0	; select bank0
  6266  04E8  190C               	btfsc	12,2	;volatile
  6267  04E9  3001               	movlw	1
  6268  04EA  0021               	movlb	1	; select bank1
  6269  04EB  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6270                           
  6271                           ;Controller.c: 27:     DigitalControllerByte2[Triangle] = RA1;
  6272  04EC  3000               	movlw	0
  6273  04ED  0020               	movlb	0	; select bank0
  6274  04EE  188C               	btfsc	12,1	;volatile
  6275  04EF  3001               	movlw	1
  6276  04F0  0021               	movlb	1	; select bank1
  6277  04F1  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6278                           
  6279                           ;Controller.c: 28:     DigitalControllerByte2[R1] = RB4;
  6280  04F2  3000               	movlw	0
  6281  04F3  0020               	movlb	0	; select bank0
  6282  04F4  1A0D               	btfsc	13,4	;volatile
  6283  04F5  3001               	movlw	1
  6284  04F6  0021               	movlb	1	; select bank1
  6285  04F7  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6286                           
  6287                           ;Controller.c: 29:     DigitalControllerByte2[R2] = RB5;
  6288  04F8  3000               	movlw	0
  6289  04F9  0020               	movlb	0	; select bank0
  6290  04FA  1A8D               	btfsc	13,5	;volatile
  6291  04FB  3001               	movlw	1
  6292  04FC  0021               	movlb	1	; select bank1
  6293  04FD  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6294                           
  6295                           ;Controller.c: 30:     DigitalControllerByte2[L1] = RB2;
  6296  04FE  3000               	movlw	0
  6297  04FF  0020               	movlb	0	; select bank0
  6298  0500  190D               	btfsc	13,2	;volatile
  6299  0501  3001               	movlw	1
  6300  0502  0021               	movlb	1	; select bank1
  6301  0503  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6302                           
  6303                           ;Controller.c: 31:     DigitalControllerByte2[L2] = RB3;
  6304  0504  3000               	movlw	0
  6305  0505  0020               	movlb	0	; select bank0
  6306  0506  198D               	btfsc	13,3	;volatile
  6307  0507  3001               	movlw	1
  6308  0508  0021               	movlb	1	; select bank1
  6309  0509  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6310                           
  6311                           ;Controller.c: 41:     if (index > Select) {
  6312  050A  3008               	movlw	8
  6313  050B  0277               	subwf	_index,w
  6314  050C  1803               	btfsc	3,0
  6315                           
  6316                           ;Controller.c: 42:         index = 0;
  6317  050D  01F7               	clrf	_index
  6318                           
  6319                           ;Controller.c: 46:     if (!DigitalControllerByte1[index]) {
  6320  050E  0877               	movf	_index,w
  6321  050F  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6322  0510  0086               	movwf	6
  6323  0511  0187               	clrf	7
  6324  0512  0801               	movf	1,w
  6325  0513  1D03               	btfss	3,2
  6326  0514  2D1E               	goto	l258
  6327                           
  6328                           ;Controller.c: 47:         IndexDigitalByte1[index]++;
  6329  0515  3001               	movlw	1
  6330  0516  0020               	movlb	0	; select bank0
  6331  0517  00A0               	movwf	??_readController
  6332  0518  0877               	movf	_index,w
  6333  0519  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6334  051A  0086               	movwf	6
  6335  051B  0187               	clrf	7
  6336  051C  0820               	movf	??_readController,w
  6337  051D  0781               	addwf	1,f
  6338  051E                     l258:	
  6339                           ;Controller.c: 48:     }
  6340                           
  6341                           
  6342                           ;Controller.c: 49:     if (!DigitalControllerByte2[index]) {
  6343  051E  0877               	movf	_index,w
  6344  051F  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6345  0520  0086               	movwf	6
  6346  0521  0187               	clrf	7
  6347  0522  0801               	movf	1,w
  6348  0523  1D03               	btfss	3,2
  6349  0524  2D2E               	goto	l2634
  6350                           
  6351                           ;Controller.c: 50:         IndexDigitalByte2[index]++;
  6352  0525  3001               	movlw	1
  6353  0526  0020               	movlb	0	; select bank0
  6354  0527  00A0               	movwf	??_readController
  6355  0528  0877               	movf	_index,w
  6356  0529  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6357  052A  0086               	movwf	6
  6358  052B  0187               	clrf	7
  6359  052C  0820               	movf	??_readController,w
  6360  052D  0781               	addwf	1,f
  6361  052E                     l2634:	
  6362                           
  6363                           ;Controller.c: 54:     if (DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]) 
      +                          {
  6364  052E  0877               	movf	_index,w
  6365  052F  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6366  0530  0086               	movwf	6
  6367  0531  0187               	clrf	7
  6368  0532  0877               	movf	_index,w
  6369  0533  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6370  0534  0084               	movwf	4
  6371  0535  0185               	clrf	5
  6372  0536  0800               	movf	0,w
  6373  0537  0601               	xorwf	1,w
  6374  0538  1903               	btfsc	3,2
  6375  0539  2D53               	goto	l2644
  6376                           
  6377                           ;Controller.c: 55:         IndexDigitalByte1[index] = 0;
  6378  053A  0877               	movf	_index,w
  6379  053B  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6380  053C  0086               	movwf	6
  6381  053D  0187               	clrf	7
  6382  053E  0181               	clrf	1
  6383                           
  6384                           ;Controller.c: 56:         digitalStateFirst |= 1 << index;
  6385  053F  3001               	movlw	1
  6386  0540  0020               	movlb	0	; select bank0
  6387  0541  00A0               	movwf	??_readController
  6388  0542  0A77               	incf	_index,w
  6389  0543  2D45               	goto	u1674
  6390  0544                     u1675:	
  6391  0544  35A0               	lslf	??_readController,f
  6392  0545                     u1674:	
  6393  0545  0B89               	decfsz	9,f
  6394  0546  2D44               	goto	u1675
  6395  0547  0820               	movf	??_readController,w
  6396  0548  00A1               	movwf	??_readController+1
  6397  0549  0821               	movf	??_readController+1,w
  6398  054A  04D8               	iorwf	_digitalStateFirst,f
  6399                           
  6400                           ;Controller.c: 58:         if (analogMode) {
  6401  054B  0822               	movf	readController@analogMode,w
  6402  054C  1903               	btfsc	3,2
  6403  054D  2D53               	goto	l2644
  6404                           
  6405                           ;Controller.c: 59:             analogStateFirst[index] = 0x00;
  6406  054E  0877               	movf	_index,w
  6407  054F  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6408  0550  0086               	movwf	6
  6409  0551  0187               	clrf	7
  6410  0552  0181               	clrf	1
  6411  0553                     l2644:	
  6412                           
  6413                           ;Controller.c: 63:     if (DigitalControllerByte2[index] ^ PreviousDigitalByte2[index]) 
      +                          {
  6414  0553  0877               	movf	_index,w
  6415  0554  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6416  0555  0086               	movwf	6
  6417  0556  0187               	clrf	7
  6418  0557  0877               	movf	_index,w
  6419  0558  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6420  0559  0084               	movwf	4
  6421  055A  0185               	clrf	5
  6422  055B  0800               	movf	0,w
  6423  055C  0601               	xorwf	1,w
  6424  055D  1903               	btfsc	3,2
  6425  055E  2D78               	goto	l262
  6426                           
  6427                           ;Controller.c: 64:         IndexDigitalByte2[index] = 0;
  6428  055F  0877               	movf	_index,w
  6429  0560  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6430  0561  0086               	movwf	6
  6431  0562  0187               	clrf	7
  6432  0563  0181               	clrf	1
  6433                           
  6434                           ;Controller.c: 65:         digitalStateSecond |= 1 << index;
  6435  0564  3001               	movlw	1
  6436  0565  0020               	movlb	0	; select bank0
  6437  0566  00A0               	movwf	??_readController
  6438  0567  0A77               	incf	_index,w
  6439  0568  2D6A               	goto	u1704
  6440  0569                     u1705:	
  6441  0569  35A0               	lslf	??_readController,f
  6442  056A                     u1704:	
  6443  056A  0B89               	decfsz	9,f
  6444  056B  2D69               	goto	u1705
  6445  056C  0820               	movf	??_readController,w
  6446  056D  00A1               	movwf	??_readController+1
  6447  056E  0821               	movf	??_readController+1,w
  6448  056F  04D7               	iorwf	_digitalStateSecond,f
  6449                           
  6450                           ;Controller.c: 67:         if (analogMode) {
  6451  0570  0822               	movf	readController@analogMode,w
  6452  0571  1903               	btfsc	3,2
  6453  0572  2D78               	goto	l262
  6454                           
  6455                           ;Controller.c: 68:             analogStateSecond[index] = 0x00;
  6456  0573  0877               	movf	_index,w
  6457  0574  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6458  0575  0086               	movwf	6
  6459  0576  0187               	clrf	7
  6460  0577  0181               	clrf	1
  6461  0578                     l262:	
  6462                           ;Controller.c: 71:     }
  6463                           
  6464  0578  0877               	movf	_index,w
  6465  0579  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6466  057A  0086               	movwf	6
  6467  057B  0187               	clrf	7
  6468  057C  3003               	movlw	3
  6469  057D  0201               	subwf	1,w
  6470  057E  1C03               	skipc
  6471  057F  2D98               	goto	l264
  6472                           
  6473                           ;Controller.c: 75:         digitalStateFirst &= ~(1 << index);
  6474  0580  3001               	movlw	1
  6475  0581  0020               	movlb	0	; select bank0
  6476  0582  00A0               	movwf	??_readController
  6477  0583  0A77               	incf	_index,w
  6478  0584  2D86               	goto	u1734
  6479  0585                     u1735:	
  6480  0585  35A0               	lslf	??_readController,f
  6481  0586                     u1734:	
  6482  0586  0B89               	decfsz	9,f
  6483  0587  2D85               	goto	u1735
  6484  0588  0820               	movf	??_readController,w
  6485  0589  3AFF               	xorlw	255
  6486  058A  00A1               	movwf	??_readController+1
  6487  058B  0821               	movf	??_readController+1,w
  6488  058C  05D8               	andwf	_digitalStateFirst,f
  6489                           
  6490                           ;Controller.c: 77:         if (analogMode) {
  6491  058D  0822               	movf	readController@analogMode,w
  6492  058E  1903               	btfsc	3,2
  6493  058F  2D98               	goto	l264
  6494                           
  6495                           ;Controller.c: 78:             analogStateFirst[index] = 0xFF;
  6496  0590  30FF               	movlw	255
  6497  0591  00A0               	movwf	??_readController
  6498  0592  0877               	movf	_index,w
  6499  0593  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6500  0594  0086               	movwf	6
  6501  0595  0187               	clrf	7
  6502  0596  0820               	movf	??_readController,w
  6503  0597  0081               	movwf	1
  6504  0598                     l264:	
  6505                           ;Controller.c: 81:     }
  6506                           
  6507  0598  0877               	movf	_index,w
  6508  0599  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6509  059A  0086               	movwf	6
  6510  059B  0187               	clrf	7
  6511  059C  3003               	movlw	3
  6512  059D  0201               	subwf	1,w
  6513  059E  1C03               	skipc
  6514  059F  2DB8               	goto	l266
  6515                           
  6516                           ;Controller.c: 83:         digitalStateSecond &= ~(1 << index);
  6517  05A0  3001               	movlw	1
  6518  05A1  0020               	movlb	0	; select bank0
  6519  05A2  00A0               	movwf	??_readController
  6520  05A3  0A77               	incf	_index,w
  6521  05A4  2DA6               	goto	u1764
  6522  05A5                     u1765:	
  6523  05A5  35A0               	lslf	??_readController,f
  6524  05A6                     u1764:	
  6525  05A6  0B89               	decfsz	9,f
  6526  05A7  2DA5               	goto	u1765
  6527  05A8  0820               	movf	??_readController,w
  6528  05A9  3AFF               	xorlw	255
  6529  05AA  00A1               	movwf	??_readController+1
  6530  05AB  0821               	movf	??_readController+1,w
  6531  05AC  05D7               	andwf	_digitalStateSecond,f
  6532                           
  6533                           ;Controller.c: 85:         if (analogMode) {
  6534  05AD  0822               	movf	readController@analogMode,w
  6535  05AE  1903               	btfsc	3,2
  6536  05AF  2DB8               	goto	l266
  6537                           
  6538                           ;Controller.c: 86:             analogStateSecond[index] = 0xFF;
  6539  05B0  30FF               	movlw	255
  6540  05B1  00A0               	movwf	??_readController
  6541  05B2  0877               	movf	_index,w
  6542  05B3  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6543  05B4  0086               	movwf	6
  6544  05B5  0187               	clrf	7
  6545  05B6  0820               	movf	??_readController,w
  6546  05B7  0081               	movwf	1
  6547  05B8                     l266:	
  6548                           ;Controller.c: 89:     }
  6549                           
  6550                           
  6551                           ;Controller.c: 92:     PreviousDigitalByte1[index] = DigitalControllerByte1[index];
  6552  05B8  0877               	movf	_index,w
  6553  05B9  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6554  05BA  0086               	movwf	6
  6555  05BB  0187               	clrf	7
  6556  05BC  0801               	movf	1,w
  6557  05BD  0020               	movlb	0	; select bank0
  6558  05BE  00A0               	movwf	??_readController
  6559  05BF  0877               	movf	_index,w
  6560  05C0  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6561  05C1  0086               	movwf	6
  6562  05C2  0187               	clrf	7
  6563  05C3  0820               	movf	??_readController,w
  6564  05C4  0081               	movwf	1
  6565                           
  6566                           ;Controller.c: 93:     PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6567  05C5  0877               	movf	_index,w
  6568  05C6  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6569  05C7  0086               	movwf	6
  6570  05C8  0187               	clrf	7
  6571  05C9  0801               	movf	1,w
  6572  05CA  00A0               	movwf	??_readController
  6573  05CB  0877               	movf	_index,w
  6574  05CC  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6575  05CD  0086               	movwf	6
  6576  05CE  0187               	clrf	7
  6577  05CF  0820               	movf	??_readController,w
  6578  05D0  0081               	movwf	1
  6579                           
  6580                           ;Controller.c: 95:     index++;
  6581  05D1  3001               	movlw	1
  6582  05D2  00A0               	movwf	??_readController
  6583  05D3  0820               	movf	??_readController,w
  6584  05D4  07F7               	addwf	_index,f
  6585  05D5  0008               	return
  6586  05D6                     __end_of_readController:	
  6587                           
  6588                           	psect	text14
  6589  0FD7                     __ptext14:	
  6590 ;; *************** function _readADC *****************
  6591 ;; Defined at:
  6592 ;;		line 165 in file "Controller.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  channel         2    0[BANK0 ] int 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2    0[BANK0 ] unsigned int 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6608 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6609 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6610 ;;Total ram usage:        9 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    3
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_readControllerAnalog
  6617 ;;		_configureController
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function _readADC
  6623  0FD7                     _readADC:	
  6624                           
  6625                           ;Controller.c: 166:     ADPCH = channel;
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6629  0FD7  0020               	movlb	0	; select bank0
  6630  0FD8  0820               	movf	readADC@channel,w
  6631  0FD9  0021               	movlb	1	; select bank1
  6632  0FDA  009E               	movwf	30	;volatile
  6633                           
  6634                           ;Controller.c: 167:     ADPRE = 0x00;
  6635  0FDB  019C               	clrf	28	;volatile
  6636                           
  6637                           ;Controller.c: 168:     ADACQ = 0x3F;
  6638  0FDC  303F               	movlw	63
  6639  0FDD  009D               	movwf	29	;volatile
  6640                           
  6641                           ;Controller.c: 170:     ADCON0bits.ADGO = 1;
  6642  0FDE  1413               	bsf	19,0	;volatile
  6643  0FDF                     l295:	
  6644                           ;Controller.c: 171:     while (ADCON0bits.ADGO);
  6645                           
  6646  0FDF  1813               	btfsc	19,0	;volatile
  6647  0FE0  2FDF               	goto	l295
  6648                           
  6649                           ;Controller.c: 173:     return ((ADRESH << 6) | (ADRESL >> 2));
  6650  0FE1  080C               	movf	12,w	;volatile
  6651  0FE2  0020               	movlb	0	; select bank0
  6652  0FE3  00A2               	movwf	??_readADC
  6653  0FE4  3002               	movlw	2
  6654  0FE5                     u1795:	
  6655  0FE5  36A2               	lsrf	??_readADC,f
  6656  0FE6  0B89               	decfsz	9,f
  6657  0FE7  2FE5               	goto	u1795
  6658  0FE8  0822               	movf	??_readADC,w
  6659  0FE9  00A3               	movwf	??_readADC+1
  6660  0FEA  01A4               	clrf	??_readADC+2
  6661  0FEB  0021               	movlb	1	; select bank1
  6662  0FEC  080D               	movf	13,w	;volatile
  6663  0FED  0020               	movlb	0	; select bank0
  6664  0FEE  00A5               	movwf	??_readADC+3
  6665  0FEF  01A6               	clrf	??_readADC+4
  6666  0FF0  3006               	movlw	6
  6667  0FF1                     u1805:	
  6668  0FF1  35A5               	lslf	??_readADC+3,f
  6669  0FF2  0DA6               	rlf	??_readADC+4,f
  6670  0FF3  0B89               	decfsz	9,f
  6671  0FF4  2FF1               	goto	u1805
  6672  0FF5  0823               	movf	??_readADC+1,w
  6673  0FF6  0425               	iorwf	??_readADC+3,w
  6674  0FF7  00A7               	movwf	??_readADC+5
  6675  0FF8  0824               	movf	??_readADC+2,w
  6676  0FF9  0426               	iorwf	??_readADC+4,w
  6677  0FFA  00A8               	movwf	??_readADC+6
  6678  0FFB  0827               	movf	??_readADC+5,w
  6679  0FFC  00A0               	movwf	?_readADC
  6680  0FFD  0828               	movf	??_readADC+6,w
  6681  0FFE  00A1               	movwf	?_readADC+1
  6682  0FFF  0008               	return
  6683  1000                     __end_of_readADC:	
  6684                           
  6685                           	psect	text15
  6686  0F95                     __ptext15:	
  6687 ;; *************** function _eepromWrite *****************
  6688 ;; Defined at:
  6689 ;;		line 3 in file "Nvm.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  address         1    wreg     unsigned char 
  6692 ;;  data            1    0[BANK0 ] unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  address         1    1[BANK0 ] unsigned char 
  6695 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0, pclath, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6705 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6709 ;;Total ram usage:        3 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    4
  6712 ;; This function calls:
  6713 ;;		_nvmUnlock
  6714 ;; This function is called by:
  6715 ;;		_configureController
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _eepromWrite
  6721  0F95                     _eepromWrite:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  6725                           ;eepromWrite@address stored from wreg
  6726  0F95  0020               	movlb	0	; select bank0
  6727  0F96  00A1               	movwf	eepromWrite@address
  6728                           
  6729                           ;Nvm.c: 6:     unsigned char interruptStatus = INTCONbits.GIE;
  6730  0F97  3000               	movlw	0
  6731  0F98  1B8B               	btfsc	11,7	;volatile
  6732  0F99  3001               	movlw	1
  6733  0F9A  00A2               	movwf	eepromWrite@interruptStatus
  6734                           
  6735                           ;Nvm.c: 8:     INTCONbits.GIE = 0;
  6736  0F9B  138B               	bcf	11,7	;volatile
  6737                           
  6738                           ;Nvm.c: 10:     NVMCON1bits.NVMREGS = 1;
  6739  0F9C  0030               	movlb	16	; select bank16
  6740  0F9D  171E               	bsf	30,6	;volsfr
  6741                           
  6742                           ;Nvm.c: 11:     NVMCON1bits.WREN = 1;
  6743  0F9E  151E               	bsf	30,2	;volsfr
  6744                           
  6745                           ;Nvm.c: 13:     NVMADRH = 0xF0;
  6746  0F9F  30F0               	movlw	240
  6747  0FA0  009B               	movwf	27	;volatile
  6748                           
  6749                           ;Nvm.c: 14:     NVMADRL = address;
  6750  0FA1  0020               	movlb	0	; select bank0
  6751  0FA2  0821               	movf	eepromWrite@address,w
  6752  0FA3  0030               	movlb	16	; select bank16
  6753  0FA4  009A               	movwf	26	;volatile
  6754                           
  6755                           ;Nvm.c: 16:     NVMDATL = data;
  6756  0FA5  0020               	movlb	0	; select bank0
  6757  0FA6  0820               	movf	eepromWrite@data,w
  6758  0FA7  0030               	movlb	16	; select bank16
  6759  0FA8  009C               	movwf	28	;volatile
  6760                           
  6761                           ;Nvm.c: 18:     nvmUnlock();
  6762  0FA9  318F  271B  318F   	fcall	_nvmUnlock
  6763  0FAC                     l432:	
  6764                           ;Nvm.c: 20:     while (NVMCON1bits.WR);
  6765                           
  6766  0FAC  0030               	movlb	16	; select bank16
  6767  0FAD  189E               	btfsc	30,1	;volsfr
  6768  0FAE  2FAC               	goto	l432
  6769                           
  6770                           ;Nvm.c: 22:     NVMCON1bits.WREN = 0;
  6771  0FAF  111E               	bcf	30,2	;volsfr
  6772                           
  6773                           ;Nvm.c: 24:     if (interruptStatus) INTCONbits.GIE = 1;
  6774  0FB0  0020               	movlb	0	; select bank0
  6775  0FB1  0822               	movf	eepromWrite@interruptStatus,w
  6776  0FB2  1903               	btfsc	3,2
  6777  0FB3  0008               	return
  6778  0FB4  178B               	bsf	11,7	;volatile
  6779  0FB5  0008               	return
  6780  0FB6                     __end_of_eepromWrite:	
  6781                           
  6782                           	psect	text16
  6783  0F1B                     __ptext16:	
  6784 ;; *************** function _nvmUnlock *****************
  6785 ;; Defined at:
  6786 ;;		line 46 in file "Nvm.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;		None
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:        0 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    3
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_eepromWrite
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function _nvmUnlock
  6816  0F1B                     _nvmUnlock:	
  6817                           
  6818                           ;Nvm.c: 48:     NVMCON2 = 0x55;
  6819                           
  6820                           ;incstack = 0
  6821                           ; Regs used in _nvmUnlock: [wreg]
  6822  0F1B  3055               	movlw	85
  6823  0F1C  0030               	movlb	16	; select bank16
  6824  0F1D  009F               	movwf	31	;volsfr
  6825                           
  6826                           ;Nvm.c: 49:     NVMCON2 = 0xAA;
  6827  0F1E  30AA               	movlw	170
  6828  0F1F  009F               	movwf	31	;volsfr
  6829                           
  6830                           ;Nvm.c: 50:     NVMCON1bits.WR = 1;
  6831  0F20  149E               	bsf	30,1	;volsfr
  6832  0F21  0008               	return
  6833  0F22                     __end_of_nvmUnlock:	
  6834                           
  6835                           	psect	text17
  6836  0F2A                     __ptext17:	
  6837 ;; *************** function _adcInit *****************
  6838 ;; Defined at:
  6839 ;;		line 15 in file "PicConfig.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    3
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_main
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _adcInit
  6869  0F2A                     _adcInit:	
  6870                           
  6871                           ;PicConfig.c: 16:     ADCON0 = 0x04;
  6872                           
  6873                           ;incstack = 0
  6874                           ; Regs used in _adcInit: [wreg+status,2]
  6875  0F2A  3004               	movlw	4
  6876  0F2B  0021               	movlb	1	; select bank1
  6877  0F2C  0093               	movwf	19	;volatile
  6878                           
  6879                           ;PicConfig.c: 17:     ADCON1 = 0;
  6880  0F2D  0194               	clrf	20	;volatile
  6881                           
  6882                           ;PicConfig.c: 18:     ADCON2 = 0;
  6883  0F2E  0195               	clrf	21	;volatile
  6884                           
  6885                           ;PicConfig.c: 19:     ADREF = 0;
  6886  0F2F  019A               	clrf	26	;volatile
  6887                           
  6888                           ;PicConfig.c: 20:     ADCLK = 0x3F;
  6889  0F30  303F               	movlw	63
  6890  0F31  0098               	movwf	24	;volatile
  6891                           
  6892                           ;PicConfig.c: 21:     ADCON0bits.ADON = 1;
  6893  0F32  1793               	bsf	19,7	;volatile
  6894  0F33  0008               	return
  6895  0F34                     __end_of_adcInit:	
  6896                           
  6897                           	psect	intentry
  6898  0004                     __pintentry:	
  6899 ;; *************** function _PS2Command *****************
  6900 ;; Defined at:
  6901 ;;		line 57 in file "main.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  cmd             1    4[COMMON] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6919 ;;Total ram usage:        3 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    2
  6922 ;; This function calls:
  6923 ;;		_pollController
  6924 ;;		_spiRead
  6925 ;;		_spiWrite
  6926 ;; This function is called by:
  6927 ;;		Interrupt level 1
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931  0004                     _PS2Command:	
  6932                           
  6933                           ;incstack = 0
  6934  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6935                           
  6936                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6937  0005  3180               	pagesel	$
  6938                           
  6939                           ;main.c: 59:     if (SSP1IF) {
  6940  0006  002E               	movlb	14	; select bank14
  6941  0007  1C0F               	btfss	15,0	;volatile
  6942  0008  2950               	goto	i1l146
  6943                           
  6944                           ;main.c: 61:         char cmd = spiRead();
  6945  0009  318F  2711  3180   	fcall	_spiRead
  6946  000C  00F2               	movwf	??_PS2Command
  6947  000D  0872               	movf	??_PS2Command,w
  6948  000E  00F4               	movwf	PS2Command@cmd
  6949                           
  6950                           ;main.c: 63:         switch (cmdCounter) {
  6951  000F  2917               	goto	i1l2346
  6952  0010                     i1l2202:	
  6953                           
  6954                           ;main.c: 71:                         if(cmd == 0x80)
  6955  0010  3080               	movlw	128
  6956  0011  0674               	xorwf	PS2Command@cmd,w
  6957  0012  1D03               	btfss	3,2
  6958  0013  2817               	goto	i1l100
  6959                           
  6960                           ;main.c: 72:                             RD4 = 1;
  6961  0014  0020               	movlb	0	; select bank0
  6962  0015  160F               	bsf	15,4	;volatile
  6963  0016  2927               	goto	i1l2348
  6964  0017                     i1l100:	
  6965                           ;main.c: 73:                         else
  6966                           
  6967                           
  6968                           ;main.c: 74:                             RD4 = 0;
  6969  0017  0020               	movlb	0	; select bank0
  6970  0018  120F               	bcf	15,4	;volatile
  6971  0019  2927               	goto	i1l2348
  6972  001A                     i1l2206:	
  6973                           
  6974                           ;main.c: 79:                         if (cmd == 0x80)
  6975  001A  3080               	movlw	128
  6976  001B  0674               	xorwf	PS2Command@cmd,w
  6977  001C  1D03               	btfss	3,2
  6978  001D  2822               	goto	i1l2210
  6979                           
  6980                           ;main.c: 80:                             escapeMode = 1;
  6981  001E  0020               	movlb	0	; select bank0
  6982  001F  01ED               	clrf	_escapeMode
  6983  0020  0AED               	incf	_escapeMode,f
  6984  0021  2927               	goto	i1l2348
  6985  0022                     i1l2210:	
  6986                           
  6987                           ;main.c: 82:                             escapeMode = 0;
  6988  0022  0020               	movlb	0	; select bank0
  6989  0023  01ED               	clrf	_escapeMode
  6990  0024  2927               	goto	i1l2348
  6991  0025                     i1l2212:	
  6992                           
  6993                           ;main.c: 87:                         if (cmd == 0x80)
  6994  0025  3080               	movlw	128
  6995  0026  0674               	xorwf	PS2Command@cmd,w
  6996  0027  1D03               	btfss	3,2
  6997  0028  282C               	goto	i1l2216
  6998                           
  6999                           ;main.c: 88:                             analogMode = 1;
  7000  0029  01F8               	clrf	_analogMode
  7001  002A  0AF8               	incf	_analogMode,f
  7002  002B  2927               	goto	i1l2348
  7003  002C                     i1l2216:	
  7004                           
  7005                           ;main.c: 90:                             analogMode = 0;
  7006  002C  01F8               	clrf	_analogMode
  7007  002D  2927               	goto	i1l2348
  7008  002E                     i1l2218:	
  7009                           
  7010                           ;main.c: 95:                         if (cmd == 0x80) {
  7011  002E  3080               	movlw	128
  7012  002F  0674               	xorwf	PS2Command@cmd,w
  7013  0030  1D03               	btfss	3,2
  7014  0031  283C               	goto	i1l2228
  7015                           
  7016                           ;main.c: 96:                             response[2] = 0x00;
  7017  0032  0020               	movlb	0	; select bank0
  7018  0033  01DB               	clrf	_response+2
  7019                           
  7020                           ;main.c: 97:                             response[3] = 0x00;
  7021  0034  01DC               	clrf	_response+3
  7022                           
  7023                           ;main.c: 98:                             response[4] = 0x00;
  7024  0035  01DD               	clrf	_response+4
  7025                           
  7026                           ;main.c: 99:                             response[5] = 0x60;
  7027  0036  3060               	movlw	96
  7028  0037                     L7:	
  7029  0037  00F2               	movwf	??_PS2Command
  7030  0038  0872               	movf	??_PS2Command,w
  7031  0039  00DE               	movwf	_response+5
  7032                           
  7033                           ;main.c: 100:                             response[6] = 0x00;
  7034  003A  01DF               	clrf	_response+6
  7035  003B  28B0               	goto	L6
  7036  003C                     i1l2228:	
  7037                           ;main.c: 102:                         } else {
  7038                           
  7039                           ;main.c: 101:                             response[7] = 0x00;
  7040                           
  7041                           
  7042                           ;main.c: 103:                             response[2] = 0x00;
  7043  003C  0020               	movlb	0	; select bank0
  7044  003D  01DB               	clrf	_response+2
  7045                           
  7046                           ;main.c: 104:                             response[3] = 0x00;
  7047  003E  01DC               	clrf	_response+3
  7048                           
  7049                           ;main.c: 105:                             response[4] = 0x00;
  7050  003F  01DD               	clrf	_response+4
  7051                           
  7052                           ;main.c: 106:                             response[5] = 0x20;
  7053  0040  3020               	movlw	32
  7054  0041  2837               	goto	L7
  7055  0042                     i1l2238:	
  7056  0042  0875               	movf	_previousCmd,w
  7057  0043  00F2               	movwf	??_PS2Command
  7058  0044  01F3               	clrf	??_PS2Command+1
  7059                           
  7060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7061                           ; Switch size 1, requested type "simple"
  7062                           ; Number of cases is 1, Range of values is 0 to 0
  7063                           ; switch strategies available:
  7064                           ; Name         Instructions Cycles
  7065                           ; simple_byte            4     3 (average)
  7066                           ; direct_byte            8     6 (fixed)
  7067                           ; jumptable            260     6 (fixed)
  7068                           ;	Chosen strategy is simple_byte
  7069  0045  0873               	movf	??_PS2Command+1,w
  7070  0046  3A00               	xorlw	0	; case 0
  7071  0047  1903               	skipnz
  7072  0048  284A               	goto	i1l3078
  7073  0049  2927               	goto	i1l2348
  7074  004A                     i1l3078:	
  7075                           
  7076                           ; Switch size 1, requested type "simple"
  7077                           ; Number of cases is 5, Range of values is 34 to 242
  7078                           ; switch strategies available:
  7079                           ; Name         Instructions Cycles
  7080                           ; simple_byte           16     9 (average)
  7081                           ; jumptable            263     9 (fixed)
  7082                           ;	Chosen strategy is simple_byte
  7083  004A  0872               	movf	??_PS2Command,w
  7084  004B  3A22               	xorlw	34	; case 34
  7085  004C  1903               	skipnz
  7086  004D  2825               	goto	i1l2212
  7087  004E  3A10               	xorlw	16	; case 50
  7088  004F  1903               	skipnz
  7089  0050  282E               	goto	i1l2218
  7090  0051  3A70               	xorlw	112	; case 66
  7091  0052  1903               	skipnz
  7092  0053  2810               	goto	i1l2202
  7093  0054  3A80               	xorlw	128	; case 194
  7094  0055  1903               	skipnz
  7095  0056  281A               	goto	i1l2206
  7096  0057  3A30               	xorlw	48	; case 242
  7097  0058  1903               	skipnz
  7098  0059  2927               	goto	i1l2348
  7099  005A  2927               	goto	i1l2348
  7100  005B                     i1l2240:	
  7101  005B  2927               	goto	i1l2348
  7102  005C                     i1l2246:	
  7103  005C  0875               	movf	_previousCmd,w
  7104  005D  00F2               	movwf	??_PS2Command
  7105  005E  01F3               	clrf	??_PS2Command+1
  7106                           
  7107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7108                           ; Switch size 1, requested type "simple"
  7109                           ; Number of cases is 1, Range of values is 0 to 0
  7110                           ; switch strategies available:
  7111                           ; Name         Instructions Cycles
  7112                           ; simple_byte            4     3 (average)
  7113                           ; direct_byte            8     6 (fixed)
  7114                           ; jumptable            260     6 (fixed)
  7115                           ;	Chosen strategy is simple_byte
  7116  005F  0873               	movf	??_PS2Command+1,w
  7117  0060  3A00               	xorlw	0	; case 0
  7118  0061  1903               	skipnz
  7119  0062  2864               	goto	i1l3080
  7120  0063  2927               	goto	i1l2348
  7121  0064                     i1l3080:	
  7122                           
  7123                           ; Switch size 1, requested type "simple"
  7124                           ; Number of cases is 2, Range of values is 66 to 242
  7125                           ; switch strategies available:
  7126                           ; Name         Instructions Cycles
  7127                           ; simple_byte            7     4 (average)
  7128                           ; jumptable            263     9 (fixed)
  7129                           ;	Chosen strategy is simple_byte
  7130  0064  0872               	movf	??_PS2Command,w
  7131  0065  3A42               	xorlw	66	; case 66
  7132  0066  1903               	skipnz
  7133  0067  285B               	goto	i1l2240
  7134  0068  3AB0               	xorlw	176	; case 242
  7135  0069  1903               	skipnz
  7136  006A  2927               	goto	i1l2348
  7137  006B  2927               	goto	i1l2348
  7138  006C                     i1l2248:	
  7139                           
  7140                           ;main.c: 155:                         if (analogMode) {
  7141  006C  0878               	movf	_analogMode,w
  7142  006D  1903               	btfsc	3,2
  7143  006E  287D               	goto	i1l2256
  7144                           
  7145                           ;main.c: 156:                             response[2] = 0xFF;
  7146  006F  30FF               	movlw	255
  7147  0070  00F2               	movwf	??_PS2Command
  7148  0071  0872               	movf	??_PS2Command,w
  7149  0072  0020               	movlb	0	; select bank0
  7150  0073  00DB               	movwf	_response+2
  7151                           
  7152                           ;main.c: 157:                             response[3] = 0xFF;
  7153  0074  30FF               	movlw	255
  7154  0075  00F2               	movwf	??_PS2Command
  7155  0076  0872               	movf	??_PS2Command,w
  7156  0077  00DC               	movwf	_response+3
  7157                           
  7158                           ;main.c: 158:                             response[4] = 0xC0;
  7159  0078  30C0               	movlw	192
  7160  0079  00F2               	movwf	??_PS2Command
  7161  007A  0872               	movf	??_PS2Command,w
  7162  007B  00DD               	movwf	_response+4
  7163  007C  2881               	goto	L11
  7164  007D                     i1l2256:	
  7165                           ;main.c: 162:                         } else {
  7166                           
  7167                           ;main.c: 161:                             response[7] = 0x5A;
  7168                           
  7169                           ;main.c: 160:                             response[6] = 0x00;
  7170                           
  7171                           ;main.c: 159:                             response[5] = 0x00;
  7172                           
  7173                           
  7174                           ;main.c: 163:                             response[2] = 0x00;
  7175  007D  0020               	movlb	0	; select bank0
  7176  007E  01DB               	clrf	_response+2
  7177                           
  7178                           ;main.c: 164:                             response[3] = 0x00;
  7179  007F  01DC               	clrf	_response+3
  7180                           
  7181                           ;main.c: 165:                             response[4] = 0x00;
  7182  0080  01DD               	clrf	_response+4
  7183  0081                     L11:	
  7184                           
  7185                           ;main.c: 166:                             response[5] = 0x00;
  7186  0081  01DE               	clrf	_response+5
  7187                           
  7188                           ;main.c: 167:                             response[6] = 0x00;
  7189  0082  01DF               	clrf	_response+6
  7190                           
  7191                           ;main.c: 168:                             response[7] = 0x5A;
  7192  0083  305A               	movlw	90
  7193  0084  28E8               	goto	L9
  7194  0085                     i1l2260:	
  7195  0085  286C               	goto	i1l2248
  7196  0086                     i1l2272:	
  7197                           ;main.c: 179:                         if (analogMode) {
  7198                           
  7199                           
  7200                           ;main.c: 204:                         pollController(response);
  7201  0086  3059               	movlw	(low (_response| 0))& (0+255)
  7202  0087  3185  25D6  3180   	fcall	_pollController
  7203  008A                     i1l2274:	
  7204                           
  7205                           ;main.c: 205:                         previousCmd = cmd;
  7206  008A  0874               	movf	PS2Command@cmd,w
  7207  008B  00F2               	movwf	??_PS2Command
  7208  008C  0872               	movf	??_PS2Command,w
  7209  008D  00F5               	movwf	_previousCmd
  7210                           
  7211                           ;main.c: 208:                         break;
  7212  008E  2927               	goto	i1l2348
  7213  008F                     i1l2276:	
  7214  008F  2886               	goto	i1l2272
  7215  0090                     i1l2280:	
  7216                           ;main.c: 216:                         pollController(response);
  7217                           
  7218                           
  7219                           ;main.c: 226:                         response[2] = 0x00;
  7220  0090  0020               	movlb	0	; select bank0
  7221  0091  01DB               	clrf	_response+2
  7222                           
  7223                           ;main.c: 227:                         response[3] = 0x00;
  7224  0092  01DC               	clrf	_response+3
  7225                           
  7226                           ;main.c: 228:                         response[4] = 0x00;
  7227  0093  01DD               	clrf	_response+4
  7228                           
  7229                           ;main.c: 229:                         response[5] = 0x00;
  7230  0094  01DE               	clrf	_response+5
  7231  0095  28D4               	goto	L12
  7232  0096                     i1l2284:	
  7233                           ;main.c: 231:                         response[7] = 0x00;
  7234                           
  7235                           ;main.c: 230:                         response[6] = 0x00;
  7236                           
  7237                           
  7238                           ;main.c: 245:                         response[2] = 0xC0;
  7239  0096  30C0               	movlw	192
  7240  0097  00F2               	movwf	??_PS2Command
  7241  0098  0872               	movf	??_PS2Command,w
  7242  0099  0020               	movlb	0	; select bank0
  7243  009A  00DB               	movwf	_response+2
  7244                           
  7245                           ;main.c: 246:                         response[3] = 0x40;
  7246  009B  3040               	movlw	64
  7247  009C  00F2               	movwf	??_PS2Command
  7248  009D  0872               	movf	??_PS2Command,w
  7249  009E  00DC               	movwf	_response+3
  7250                           
  7251                           ;main.c: 248:                         if (analogMode)
  7252  009F  0878               	movf	_analogMode,w
  7253  00A0  1903               	btfsc	3,2
  7254  00A1  28A7               	goto	i1l2290
  7255                           
  7256                           ;main.c: 249:                             response[4] = 0x80;
  7257  00A2  3080               	movlw	128
  7258  00A3  00F2               	movwf	??_PS2Command
  7259  00A4  0872               	movf	??_PS2Command,w
  7260  00A5  00DD               	movwf	_response+4
  7261  00A6  28A8               	goto	i1l2292
  7262  00A7                     i1l2290:	
  7263                           
  7264                           ;main.c: 251:                             response[4] = 0x00;
  7265  00A7  01DD               	clrf	_response+4
  7266  00A8                     i1l2292:	
  7267                           
  7268                           ;main.c: 253:                         response[5] = 0x40;
  7269  00A8  3040               	movlw	64
  7270  00A9  00F2               	movwf	??_PS2Command
  7271  00AA  0872               	movf	??_PS2Command,w
  7272  00AB  00DE               	movwf	_response+5
  7273  00AC                     L13:	
  7274                           
  7275                           ;main.c: 254:                         response[6] = 0x80;
  7276  00AC  3080               	movlw	128
  7277  00AD  00F2               	movwf	??_PS2Command
  7278  00AE  0872               	movf	??_PS2Command,w
  7279  00AF  00DF               	movwf	_response+6
  7280  00B0                     L6:	
  7281                           
  7282                           ;main.c: 255:                         response[7] = 0x00;
  7283  00B0  01E0               	clrf	_response+7
  7284                           
  7285                           ;main.c: 258:                         break;
  7286  00B1  2927               	goto	i1l2348
  7287  00B2                     i1l2296:	
  7288                           
  7289                           ;main.c: 266:                         response[2] = 0x00;
  7290  00B2  0020               	movlb	0	; select bank0
  7291  00B3  01DB               	clrf	_response+2
  7292                           
  7293                           ;main.c: 267:                         response[3] = 0x00;
  7294  00B4  01DC               	clrf	_response+3
  7295                           
  7296                           ;main.c: 268:                         response[4] = 0x80;
  7297  00B5  3080               	movlw	128
  7298  00B6  00F2               	movwf	??_PS2Command
  7299  00B7  0872               	movf	??_PS2Command,w
  7300  00B8  00DD               	movwf	_response+4
  7301                           
  7302                           ;main.c: 269:                         response[5] = 0x80;
  7303  00B9  3080               	movlw	128
  7304  00BA  00F2               	movwf	??_PS2Command
  7305  00BB  0872               	movf	??_PS2Command,w
  7306  00BC  00DE               	movwf	_response+5
  7307                           
  7308                           ;main.c: 270:                         response[6] = 0x80;
  7309  00BD  3080               	movlw	128
  7310  00BE  00F2               	movwf	??_PS2Command
  7311  00BF  0872               	movf	??_PS2Command,w
  7312  00C0  00DF               	movwf	_response+6
  7313                           
  7314                           ;main.c: 271:                         response[7] = 0x50;
  7315  00C1  3050               	movlw	80
  7316  00C2  28E8               	goto	L9
  7317  00C3                     i1l2306:	
  7318                           ;main.c: 273:                         break;
  7319                           
  7320                           
  7321                           ;main.c: 282:                         response[2] = 0x00;
  7322  00C3  0020               	movlb	0	; select bank0
  7323  00C4  01DB               	clrf	_response+2
  7324                           
  7325                           ;main.c: 283:                         response[3] = 0x00;
  7326  00C5  01DC               	clrf	_response+3
  7327                           
  7328                           ;main.c: 284:                         response[4] = 0x40;
  7329  00C6  3040               	movlw	64
  7330  00C7  00F2               	movwf	??_PS2Command
  7331  00C8  0872               	movf	??_PS2Command,w
  7332  00C9  00DD               	movwf	_response+4
  7333                           
  7334                           ;main.c: 285:                         response[5] = 0x00;
  7335  00CA  01DE               	clrf	_response+5
  7336  00CB  28AC               	goto	L13
  7337  00CC                     i1l2314:	
  7338                           ;main.c: 286:                         response[6] = 0x80;
  7339                           
  7340                           
  7341                           ;main.c: 299:                         response[2] = 0x00;
  7342  00CC  0020               	movlb	0	; select bank0
  7343  00CD  01DB               	clrf	_response+2
  7344                           
  7345                           ;main.c: 300:                         response[3] = 0x00;
  7346  00CE  01DC               	clrf	_response+3
  7347                           
  7348                           ;main.c: 301:                         response[4] = 0x00;
  7349  00CF  01DD               	clrf	_response+4
  7350                           
  7351                           ;main.c: 302:                         response[5] = 0x20;
  7352  00D0  3020               	movlw	32
  7353  00D1  00F2               	movwf	??_PS2Command
  7354  00D2  0872               	movf	??_PS2Command,w
  7355  00D3  00DE               	movwf	_response+5
  7356  00D4                     L12:	
  7357                           
  7358                           ;main.c: 303:                         response[6] = 0x00;
  7359  00D4  01DF               	clrf	_response+6
  7360                           
  7361                           ;main.c: 304:                         response[7] = 0x00;
  7362  00D5  01E0               	clrf	_response+7
  7363  00D6  288A               	goto	i1l2274
  7364  00D7                     i1l2324:	
  7365                           
  7366                           ;main.c: 318:                         response[2] = 0x00;
  7367  00D7  0020               	movlb	0	; select bank0
  7368  00D8  01DB               	clrf	_response+2
  7369                           
  7370                           ;main.c: 319:                         response[3] = 0x01;
  7371  00D9  01DC               	clrf	_response+3
  7372  00DA  0ADC               	incf	_response+3,f
  7373                           
  7374                           ;main.c: 320:                         response[4] = 0xFF;
  7375  00DB  30FF               	movlw	255
  7376  00DC  00F2               	movwf	??_PS2Command
  7377  00DD  0872               	movf	??_PS2Command,w
  7378  00DE  00DD               	movwf	_response+4
  7379                           
  7380                           ;main.c: 321:                         response[5] = 0xFF;
  7381  00DF  30FF               	movlw	255
  7382  00E0  00F2               	movwf	??_PS2Command
  7383  00E1  0872               	movf	??_PS2Command,w
  7384  00E2  00DE               	movwf	_response+5
  7385                           
  7386                           ;main.c: 322:                         response[6] = 0xFF;
  7387  00E3  30FF               	movlw	255
  7388  00E4  00F2               	movwf	??_PS2Command
  7389  00E5  0872               	movf	??_PS2Command,w
  7390  00E6  00DF               	movwf	_response+6
  7391                           
  7392                           ;main.c: 323:                         response[7] = 0xFF;
  7393  00E7  30FF               	movlw	255
  7394  00E8                     L9:	
  7395  00E8  00F2               	movwf	??_PS2Command
  7396  00E9  0872               	movf	??_PS2Command,w
  7397  00EA  00E0               	movwf	_response+7
  7398                           
  7399                           ;main.c: 325:                         break;
  7400  00EB  2927               	goto	i1l2348
  7401  00EC                     i1l2342:	
  7402  00EC  0874               	movf	PS2Command@cmd,w
  7403  00ED  00F2               	movwf	??_PS2Command
  7404  00EE  01F3               	clrf	??_PS2Command+1
  7405                           
  7406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7407                           ; Switch size 1, requested type "simple"
  7408                           ; Number of cases is 1, Range of values is 0 to 0
  7409                           ; switch strategies available:
  7410                           ; Name         Instructions Cycles
  7411                           ; simple_byte            4     3 (average)
  7412                           ; direct_byte            8     6 (fixed)
  7413                           ; jumptable            260     6 (fixed)
  7414                           ;	Chosen strategy is simple_byte
  7415  00EF  0873               	movf	??_PS2Command+1,w
  7416  00F0  3A00               	xorlw	0	; case 0
  7417  00F1  1903               	skipnz
  7418  00F2  28F4               	goto	i1l3082
  7419  00F3  2927               	goto	i1l2348
  7420  00F4                     i1l3082:	
  7421                           
  7422                           ; Switch size 1, requested type "simple"
  7423                           ; Number of cases is 11, Range of values is 2 to 242
  7424                           ; switch strategies available:
  7425                           ; Name         Instructions Cycles
  7426                           ; simple_byte           34    18 (average)
  7427                           ; jumptable            263     9 (fixed)
  7428                           ;	Chosen strategy is simple_byte
  7429  00F4  0872               	movf	??_PS2Command,w
  7430  00F5  3A02               	xorlw	2	; case 2
  7431  00F6  1903               	skipnz
  7432  00F7  286C               	goto	i1l2248
  7433  00F8  3A10               	xorlw	16	; case 18
  7434  00F9  1903               	skipnz
  7435  00FA  2885               	goto	i1l2260
  7436  00FB  3A30               	xorlw	48	; case 34
  7437  00FC  1903               	skipnz
  7438  00FD  2890               	goto	i1l2280
  7439  00FE  3A10               	xorlw	16	; case 50
  7440  00FF  1903               	skipnz
  7441  0100  28CC               	goto	i1l2314
  7442  0101  3A70               	xorlw	112	; case 66
  7443  0102  1903               	skipnz
  7444  0103  2886               	goto	i1l2272
  7445  0104  3A20               	xorlw	32	; case 98
  7446  0105  1903               	skipnz
  7447  0106  28B2               	goto	i1l2296
  7448  0107  3AC0               	xorlw	192	; case 162
  7449  0108  1903               	skipnz
  7450  0109  2896               	goto	i1l2284
  7451  010A  3A10               	xorlw	16	; case 178
  7452  010B  1903               	skipnz
  7453  010C  28D7               	goto	i1l2324
  7454  010D  3A70               	xorlw	112	; case 194
  7455  010E  1903               	skipnz
  7456  010F  288F               	goto	i1l2276
  7457  0110  3A20               	xorlw	32	; case 226
  7458  0111  1903               	skipnz
  7459  0112  28C3               	goto	i1l2306
  7460  0113  3A10               	xorlw	16	; case 242
  7461  0114  1903               	skipnz
  7462  0115  287D               	goto	i1l2256
  7463  0116  2927               	goto	i1l2348
  7464  0117                     i1l2346:	
  7465  0117  0876               	movf	_cmdCounter,w
  7466  0118  00F2               	movwf	??_PS2Command
  7467  0119  01F3               	clrf	??_PS2Command+1
  7468                           
  7469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7470                           ; Switch size 1, requested type "simple"
  7471                           ; Number of cases is 1, Range of values is 0 to 0
  7472                           ; switch strategies available:
  7473                           ; Name         Instructions Cycles
  7474                           ; simple_byte            4     3 (average)
  7475                           ; direct_byte            8     6 (fixed)
  7476                           ; jumptable            260     6 (fixed)
  7477                           ;	Chosen strategy is simple_byte
  7478  011A  0873               	movf	??_PS2Command+1,w
  7479  011B  3A00               	xorlw	0	; case 0
  7480  011C  1903               	skipnz
  7481  011D  291F               	goto	i1l3084
  7482  011E  28EC               	goto	i1l2342
  7483  011F                     i1l3084:	
  7484                           
  7485                           ; Switch size 1, requested type "simple"
  7486                           ; Number of cases is 2, Range of values is 3 to 4
  7487                           ; switch strategies available:
  7488                           ; Name         Instructions Cycles
  7489                           ; simple_byte            7     4 (average)
  7490                           ; direct_byte           13     9 (fixed)
  7491                           ; jumptable            263     9 (fixed)
  7492                           ;	Chosen strategy is simple_byte
  7493  011F  0872               	movf	??_PS2Command,w
  7494  0120  3A03               	xorlw	3	; case 3
  7495  0121  1903               	skipnz
  7496  0122  2842               	goto	i1l2238
  7497  0123  3A07               	xorlw	7	; case 4
  7498  0124  1903               	skipnz
  7499  0125  285C               	goto	i1l2246
  7500  0126  28EC               	goto	i1l2342
  7501  0127                     i1l2348:	
  7502                           
  7503                           ;main.c: 350:         if (escapeMode) {
  7504  0127  0020               	movlb	0	; select bank0
  7505  0128  086D               	movf	_escapeMode,w
  7506  0129  1903               	btfsc	3,2
  7507  012A  292D               	goto	i1l2352
  7508                           
  7509                           ;main.c: 351:             response[0] = 0xCF;
  7510  012B  30CF               	movlw	207
  7511  012C  2933               	goto	L10
  7512  012D                     i1l2352:	
  7513                           ;main.c: 352:         } else {
  7514                           
  7515                           
  7516                           ;main.c: 354:             if (analogMode)
  7517  012D  0878               	movf	_analogMode,w
  7518  012E  1903               	btfsc	3,2
  7519  012F  2932               	goto	i1l2356
  7520                           
  7521                           ;main.c: 355:                 response[0] = 0x9E;
  7522  0130  309E               	movlw	158
  7523  0131  2933               	goto	L10
  7524  0132                     i1l2356:	
  7525                           
  7526                           ;main.c: 357:                 response[0] = 0x82;
  7527  0132  3082               	movlw	130
  7528  0133                     L10:	
  7529  0133  00F2               	movwf	??_PS2Command
  7530  0134  0872               	movf	??_PS2Command,w
  7531  0135  00D9               	movwf	_response
  7532                           
  7533                           ;main.c: 363:         spiWrite(response[cmdCounter]);
  7534  0136  0876               	movf	_cmdCounter,w
  7535  0137  3E59               	addlw	(low (_response| 0))& (0+255)
  7536  0138  0086               	movwf	6
  7537  0139  0187               	clrf	7
  7538  013A  0801               	movf	1,w
  7539  013B  318F  2716  3180   	fcall	_spiWrite
  7540                           
  7541                           ;main.c: 366:         if (cmdCounter < responseLength) {
  7542  013E  0020               	movlb	0	; select bank0
  7543  013F  0850               	movf	_responseLength,w
  7544  0140  0276               	subwf	_cmdCounter,w
  7545  0141  1803               	skipnc
  7546  0142  2947               	goto	i1l2364
  7547                           
  7548                           ;main.c: 367:             cmdCounter++;
  7549  0143  3001               	movlw	1
  7550  0144  00F2               	movwf	??_PS2Command
  7551  0145  0872               	movf	??_PS2Command,w
  7552  0146  07F6               	addwf	_cmdCounter,f
  7553  0147                     i1l2364:	
  7554                           
  7555                           ;main.c: 371:         RA4 = 0;
  7556  0147  120C               	bcf	12,4	;volatile
  7557                           
  7558                           ;main.c: 372:         _delay((unsigned long)((1)*(32000000/4000000.0)));
  7559  0148  3200               	nop2	;2 cycle nop
  7560  0149  3200               	nop2	;2 cycle nop
  7561  014A  3200               	nop2	;2 cycle nop
  7562  014B  3200               	nop2	;2 cycle nop
  7563                           
  7564                           ;main.c: 373:         RA4 = 1;
  7565  014C  0020               	movlb	0	; select bank0
  7566  014D  160C               	bsf	12,4	;volatile
  7567                           
  7568                           ;main.c: 375:         SSP1IF = 0;
  7569  014E  002E               	movlb	14	; select bank14
  7570  014F  100F               	bcf	15,0	;volatile
  7571  0150                     i1l146:	
  7572  0150  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7573  0151  0009               	retfie
  7574  0152                     __end_of_PS2Command:	
  7575                           
  7576                           	psect	text19
  7577  0F16                     __ptext19:	
  7578 ;; *************** function _spiWrite *****************
  7579 ;; Defined at:
  7580 ;;		line 32 in file "Spi.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  dat             1    wreg     unsigned char 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  dat             1    0[COMMON] unsigned char 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7598 ;;Total ram usage:        1 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_PS2Command
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _spiWrite
  7609  0F16                     _spiWrite:	
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _spiWrite: [wreg]
  7613                           ;spiWrite@dat stored from wreg
  7614  0F16  00F0               	movwf	spiWrite@dat
  7615                           
  7616                           ;Spi.c: 32: void spiWrite(char dat);Spi.c: 33: {;Spi.c: 34:     SSP1BUF = dat;
  7617  0F17  0870               	movf	spiWrite@dat,w
  7618  0F18  0023               	movlb	3	; select bank3
  7619  0F19  008C               	movwf	12	;volatile
  7620  0F1A  0008               	return
  7621  0F1B                     __end_of_spiWrite:	
  7622                           
  7623                           	psect	text20
  7624  0F11                     __ptext20:	
  7625 ;; *************** function _spiRead *****************
  7626 ;; Defined at:
  7627 ;;		line 37 in file "Spi.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      unsigned char 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0, pclath, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    1
  7648 ;; This function calls:
  7649 ;;		_spiReceiveWait
  7650 ;; This function is called by:
  7651 ;;		_PS2Command
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function _spiRead
  7657  0F11                     _spiRead:	
  7658                           
  7659                           ;Spi.c: 39:     spiReceiveWait();
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7663  0F11  318F  270D         	fcall	_spiReceiveWait
  7664                           
  7665                           ;Spi.c: 40:     return(SSP1BUF);
  7666  0F13  0023               	movlb	3	; select bank3
  7667  0F14  080C               	movf	12,w	;volatile
  7668  0F15  0008               	return
  7669  0F16                     __end_of_spiRead:	
  7670                           
  7671                           	psect	text21
  7672  0F0D                     __ptext21:	
  7673 ;; *************** function _spiReceiveWait *****************
  7674 ;; Defined at:
  7675 ;;		line 27 in file "Spi.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		None
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_spiRead
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _spiReceiveWait
  7704  0F0D                     _spiReceiveWait:	
  7705  0F0D                     i1l406:	
  7706                           ;Spi.c: 29:     while ( !SSP1STATbits.BF );
  7707                           
  7708                           ;incstack = 0
  7709                           ; Regs used in _spiReceiveWait: []
  7710                           
  7711  0F0D  0023               	movlb	3	; select bank3
  7712  0F0E  180F               	btfsc	15,0	;volatile
  7713  0F0F  0008               	return
  7714  0F10  2F0D               	goto	i1l406
  7715  0F11                     __end_of_spiReceiveWait:	
  7716                           
  7717                           	psect	text22
  7718  05D6                     __ptext22:	
  7719 ;; *************** function _pollController *****************
  7720 ;; Defined at:
  7721 ;;		line 24 in file "main.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  response        1    wreg     PTR unsigned char 
  7724 ;;		 -> response(20), 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  response        1    1[COMMON] PTR unsigned char 
  7727 ;;		 -> response(20), 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1    wreg      void 
  7730 ;; Registers used:
  7731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7741 ;;Total ram usage:        2 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_PS2Command
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function _pollController
  7752  05D6                     _pollController:	
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  7756                           ;pollController@response stored from wreg
  7757  05D6  00F1               	movwf	pollController@response
  7758                           
  7759                           ;main.c: 26:     responseLength = 5;
  7760  05D7  3005               	movlw	5
  7761  05D8  00F0               	movwf	??_pollController
  7762  05D9  0870               	movf	??_pollController,w
  7763  05DA  0020               	movlb	0	; select bank0
  7764  05DB  00D0               	movwf	_responseLength
  7765                           
  7766                           ;main.c: 28:     response[2] = digitalStateFirst;
  7767  05DC  0858               	movf	_digitalStateFirst,w
  7768  05DD  00F0               	movwf	??_pollController
  7769  05DE  0871               	movf	pollController@response,w
  7770  05DF  3E02               	addlw	2
  7771  05E0  0086               	movwf	6
  7772  05E1  0187               	clrf	7
  7773  05E2  0870               	movf	??_pollController,w
  7774  05E3  0081               	movwf	1
  7775                           
  7776                           ;main.c: 29:     response[3] = digitalStateSecond;
  7777  05E4  0857               	movf	_digitalStateSecond,w
  7778  05E5  00F0               	movwf	??_pollController
  7779  05E6  0871               	movf	pollController@response,w
  7780  05E7  3E03               	addlw	3
  7781  05E8  0086               	movwf	6
  7782  05E9  0187               	clrf	7
  7783  05EA  0870               	movf	??_pollController,w
  7784  05EB  0081               	movwf	1
  7785                           
  7786                           ;main.c: 31:     response[4] = rxData;
  7787  05EC  0879               	movf	_rxData,w
  7788  05ED  00F0               	movwf	??_pollController
  7789  05EE  0871               	movf	pollController@response,w
  7790  05EF  3E04               	addlw	4
  7791  05F0  0086               	movwf	6
  7792  05F1  0187               	clrf	7
  7793  05F2  0870               	movf	??_pollController,w
  7794  05F3  0081               	movwf	1
  7795                           
  7796                           ;main.c: 32:     response[5] = ryData;
  7797  05F4  0856               	movf	_ryData,w
  7798  05F5  00F0               	movwf	??_pollController
  7799  05F6  0871               	movf	pollController@response,w
  7800  05F7  3E05               	addlw	5
  7801  05F8  0086               	movwf	6
  7802  05F9  0187               	clrf	7
  7803  05FA  0870               	movf	??_pollController,w
  7804  05FB  0081               	movwf	1
  7805                           
  7806                           ;main.c: 33:     response[6] = lxData;
  7807  05FC  0855               	movf	_lxData,w
  7808  05FD  00F0               	movwf	??_pollController
  7809  05FE  0871               	movf	pollController@response,w
  7810  05FF  3E06               	addlw	6
  7811  0600  0086               	movwf	6
  7812  0601  0187               	clrf	7
  7813  0602  0870               	movf	??_pollController,w
  7814  0603  0081               	movwf	1
  7815                           
  7816                           ;main.c: 34:     response[7] = lyData;
  7817  0604  0854               	movf	_lyData,w
  7818  0605  00F0               	movwf	??_pollController
  7819  0606  0871               	movf	pollController@response,w
  7820  0607  3E07               	addlw	7
  7821  0608  0086               	movwf	6
  7822  0609  0187               	clrf	7
  7823  060A  0870               	movf	??_pollController,w
  7824  060B  0081               	movwf	1
  7825                           
  7826                           ;main.c: 36:     if (analogMode) {
  7827  060C  0878               	movf	_analogMode,w
  7828  060D  1903               	btfsc	3,2
  7829  060E  0008               	return
  7830                           
  7831                           ;main.c: 38:         responseLength = 20;
  7832  060F  3014               	movlw	20
  7833  0610  00F0               	movwf	??_pollController
  7834  0611  0870               	movf	??_pollController,w
  7835  0612  00D0               	movwf	_responseLength
  7836                           
  7837                           ;main.c: 40:         response[8] = analogStateFirst[2];
  7838  0613  0021               	movlb	1	; select bank1
  7839  0614  085A               	movf	(_analogStateFirst^(0+128)+2),w
  7840  0615  00F0               	movwf	??_pollController
  7841  0616  0871               	movf	pollController@response,w
  7842  0617  3E08               	addlw	8
  7843  0618  0086               	movwf	6
  7844  0619  0187               	clrf	7
  7845  061A  0870               	movf	??_pollController,w
  7846  061B  0081               	movwf	1
  7847                           
  7848                           ;main.c: 41:         response[9] = analogStateFirst[0];
  7849  061C  0858               	movf	_analogStateFirst^(0+128),w
  7850  061D  00F0               	movwf	??_pollController
  7851  061E  0871               	movf	pollController@response,w
  7852  061F  3E09               	addlw	9
  7853  0620  0086               	movwf	6
  7854  0621  0187               	clrf	7
  7855  0622  0870               	movf	??_pollController,w
  7856  0623  0081               	movwf	1
  7857                           
  7858                           ;main.c: 42:         response[10] = analogStateFirst[3];
  7859  0624  085B               	movf	(_analogStateFirst^(0+128)+3),w
  7860  0625  00F0               	movwf	??_pollController
  7861  0626  0871               	movf	pollController@response,w
  7862  0627  3E0A               	addlw	10
  7863  0628  0086               	movwf	6
  7864  0629  0187               	clrf	7
  7865  062A  0870               	movf	??_pollController,w
  7866  062B  0081               	movwf	1
  7867                           
  7868                           ;main.c: 43:         response[11] = analogStateFirst[1];
  7869  062C  0859               	movf	(_analogStateFirst^(0+128)+1),w
  7870  062D  00F0               	movwf	??_pollController
  7871  062E  0871               	movf	pollController@response,w
  7872  062F  3E0B               	addlw	11
  7873  0630  0086               	movwf	6
  7874  0631  0187               	clrf	7
  7875  0632  0870               	movf	??_pollController,w
  7876  0633  0081               	movwf	1
  7877                           
  7878                           ;main.c: 44:         response[12] = analogStateSecond[3];
  7879  0634  0853               	movf	(_analogStateSecond^(0+128)+3),w
  7880  0635  00F0               	movwf	??_pollController
  7881  0636  0871               	movf	pollController@response,w
  7882  0637  3E0C               	addlw	12
  7883  0638  0086               	movwf	6
  7884  0639  0187               	clrf	7
  7885  063A  0870               	movf	??_pollController,w
  7886  063B  0081               	movwf	1
  7887                           
  7888                           ;main.c: 45:         response[13] = analogStateSecond[2];
  7889  063C  0852               	movf	(_analogStateSecond^(0+128)+2),w
  7890  063D  00F0               	movwf	??_pollController
  7891  063E  0871               	movf	pollController@response,w
  7892  063F  3E0D               	addlw	13
  7893  0640  0086               	movwf	6
  7894  0641  0187               	clrf	7
  7895  0642  0870               	movf	??_pollController,w
  7896  0643  0081               	movwf	1
  7897                           
  7898                           ;main.c: 46:         response[14] = analogStateSecond[1];
  7899  0644  0851               	movf	(_analogStateSecond^(0+128)+1),w
  7900  0645  00F0               	movwf	??_pollController
  7901  0646  0871               	movf	pollController@response,w
  7902  0647  3E0E               	addlw	14
  7903  0648  0086               	movwf	6
  7904  0649  0187               	clrf	7
  7905  064A  0870               	movf	??_pollController,w
  7906  064B  0081               	movwf	1
  7907                           
  7908                           ;main.c: 47:         response[15] = analogStateSecond[0];
  7909  064C  0850               	movf	_analogStateSecond^(0+128),w
  7910  064D  00F0               	movwf	??_pollController
  7911  064E  0871               	movf	pollController@response,w
  7912  064F  3E0F               	addlw	15
  7913  0650  0086               	movwf	6
  7914  0651  0187               	clrf	7
  7915  0652  0870               	movf	??_pollController,w
  7916  0653  0081               	movwf	1
  7917                           
  7918                           ;main.c: 48:         response[16] = analogStateSecond[5];
  7919  0654  0855               	movf	(_analogStateSecond^(0+128)+5),w
  7920  0655  00F0               	movwf	??_pollController
  7921  0656  0871               	movf	pollController@response,w
  7922  0657  3E10               	addlw	16
  7923  0658  0086               	movwf	6
  7924  0659  0187               	clrf	7
  7925  065A  0870               	movf	??_pollController,w
  7926  065B  0081               	movwf	1
  7927                           
  7928                           ;main.c: 49:         response[17] = analogStateSecond[4];
  7929  065C  0854               	movf	(_analogStateSecond^(0+128)+4),w
  7930  065D  00F0               	movwf	??_pollController
  7931  065E  0871               	movf	pollController@response,w
  7932  065F  3E11               	addlw	17
  7933  0660  0086               	movwf	6
  7934  0661  0187               	clrf	7
  7935  0662  0870               	movf	??_pollController,w
  7936  0663  0081               	movwf	1
  7937                           
  7938                           ;main.c: 50:         response[18] = analogStateSecond[7];
  7939  0664  0857               	movf	(_analogStateSecond^(0+128)+7),w
  7940  0665  00F0               	movwf	??_pollController
  7941  0666  0871               	movf	pollController@response,w
  7942  0667  3E12               	addlw	18
  7943  0668  0086               	movwf	6
  7944  0669  0187               	clrf	7
  7945  066A  0870               	movf	??_pollController,w
  7946  066B  0081               	movwf	1
  7947                           
  7948                           ;main.c: 51:         response[19] = analogStateSecond[6];
  7949  066C  0856               	movf	(_analogStateSecond^(0+128)+6),w
  7950  066D  00F0               	movwf	??_pollController
  7951  066E  0871               	movf	pollController@response,w
  7952  066F  3E13               	addlw	19
  7953  0670  0086               	movwf	6
  7954  0671  0187               	clrf	7
  7955  0672  0870               	movf	??_pollController,w
  7956  0673  0081               	movwf	1
  7957  0674  0008               	return
  7958  0675                     __end_of_pollController:	
  7959  007E                     btemp	set	126	;btemp
  7960  007E                     int$flags	set	126
  7961  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        31
    BSS         69
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     48      79
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _configureController->_readADC

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10119
                                             44 BANK0      4     4      0
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    3487
                                              9 BANK0     13    13      0
                        _eepromWrite
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           3     3      0     705
                                              2 COMMON     3     3      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      99      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      99      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 28 02:01:13 2019

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
                  __CFG_LVP$ON 0000                            l311 0407                            l312 040F  
                          l313 0417                            l153 0759                            l314 041F  
                          l315 0427                            l316 042F                            l317 0437  
                          l262 0578                            l432 0FAC                            l264 0598  
                          l266 05B8                            l258 051E                            l295 0FDF  
                          l594 0F65                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                   __CFG_CPD$OFF 0000  
                          u905 0713                            u915 071B                            u875 06FF  
                          u895 0709                            _Map 0FB6                   __CFG_BORV$LO 0000  
                          wreg 0009                 eepromRead@data 0022                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l2610 0F5F                           l2634 052E  
                         l2802 02A7                           l2644 0553                           l1860 06F4  
                         l2812 0309                           l2724 0F52                           l1870 06FC  
                         l1854 06E9                           l2806 02C2                           l1872 0708  
                         l2816 0324                           l2808 02F1                           l2850 03CF  
                         l2826 043F                           l1882 0723                           l2818 0353  
                         l2914 076E                           l2844 03C7                           l2870 0460  
                         l1886 072B                           l1878 071A                           l2782 01E3  
                         l2792 0245                           l2786 01FE                           l2778 01CA  
                         l2890 0741                           l2796 0260                           l2788 022D  
                         l2798 028F                           l2896 074D                           u1605 0F66  
                         u1615 0F6B                           u1704 056A                           u1705 0569  
                         u1805 0FF1                           u1734 0586                           u1735 0585  
                         u1815 07B6                           u1905 01EB                           u1825 07BC  
                         u1674 0545                           u1675 0544                           u1915 0236  
                         u1835 07C9                           u1764 05A6                           u1765 05A5  
                         u1925 024D                           u1845 07CF                           u1935 0298  
                         u1855 07DC                           u1945 02AF                           u1795 0FE5  
                         u1955 02FA                           u1965 0311                           u1975 0360  
                         u1895 01D4                           Map@x 002F                           _WPUA 0F39  
                         _WPUB 0F44                           _WPUC 0F4F                           _WPUD 0F5A  
                         _WPUE 0F65                   __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000  
                         _main 0730                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 0152                    ?_PS2Command 0070                  __CFG_CSWEN$ON 0000  
              lutInit@position 004A                          ??_Map 0039       configureController@lxMax 002B  
     configureController@lxMin 002A       configureController@lyMax 002D       configureController@lyMin 002C  
     configureController@rxMax 002F       configureController@rxMin 002E       configureController@ryMax 0031  
     configureController@ryMin 0030                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0F34  
                        _ADREF 009A                __end_of___awdiv 0730                          _ADPRE 009C  
                __CFG_WDTE$OFF 0000                ___awdiv@divisor 0026       main@slaveSelectStatePrev 004D  
                        i1l100 0017                          i1l146 0150                          i1l406 0F0D  
              ___awdiv@counter 002B                          _TRISA 0011                          _TRISB 0012  
                        _TRISC 0013                          _TRISD 0014                          _TRISE 0015  
  __end_of_configureController 04A9                __end_of_readADC 1000                __end_of_picInit 07B0  
                        _index 0077  __size_of_readControllerAnalog 0069                          _lutLX 26F0  
                        _lutLY 25F0                          _lutRX 24F0                          _lutRY 23F0  
              __end_of_lutInit 0363                __end_of_ppsLock 0F2A                __end_of_spiInit 0F5C  
              __end_of_spiRead 0F16                          status 0003                          wtemp0 007E  
                PS2Command@cmd 0074                 __CFG_MCLRE$OFF 0000                __initialization 0154  
                 __end_of_main 0776                         ??_main 004C            __size_of_PS2Command 014E  
                       _ADCON0 0093                         _ADCON1 0094                         _ADCON2 0095  
                       _ADRESH 008D                         _ADRESL 008C               ___awdiv@dividend 0028  
                       _ANSELA 0F38                         _ANSELB 0F43                         _ANSELC 0F4E  
                       _ANSELD 0F59                         _ANSELE 0F64           _PreviousDigitalByte1 00B8  
         _PreviousDigitalByte2 00B0                         i1l2210 0022                         i1l2202 0010  
                       _RC5PPS 0F25                         i1l2212 0025                         i1l2206 001A  
                       i1l2240 005B                         i1l2216 002C                         i1l2314 00CC  
                       i1l2306 00C3                         i1l2218 002E                         i1l2324 00D7  
                       i1l2260 0085                         i1l2228 003C                         i1l2342 00EC  
                       i1l2246 005C                         i1l2238 0042                         i1l2352 012D  
                       i1l2280 0090                         i1l2272 0086                         i1l2256 007D  
                       i1l2248 006C                         i1l3080 0064                         i1l3082 00F4  
                       i1l2290 00A7                         i1l2274 008A                         i1l2346 0117  
                       i1l2364 0147                         i1l2356 0132                         i1l3084 011F  
                       i1l2292 00A8                         i1l2284 0096                         i1l2276 008F  
                       i1l2348 0127                         i1l3078 004A                         i1l2296 00B2  
               __CFG_WDTCCS$SC 0000                         _SSP1IE 38C8                         _SSP1IF 3878  
               __CFG_PWRTE$OFF 0000           __size_of_eepromWrite 0021                         ___wmul 0F5C  
                    ??_adcInit 0020                      ??___awdiv 002A                 __CFG_STVREN$ON 0000  
      __size_of_pollController 009F                         _lxData 0055                         _lyData 0054  
              eepromWrite@data 0020                         _rxData 0079               ___awdiv@quotient 002D  
                       _ryData 0056                   ?_reversebyte 0070                      ??_readADC 0022  
                    ??_picInit 0024                   __pdataCOMMON 0078                      ??_lutInit 0039  
             __end_of_spiWrite 0F1B                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
      __end_of__initialization 0184                 __pcstackCOMMON 0070                   __pidataBANK0 0F78  
       _DigitalControllerByte1 00C8         _DigitalControllerByte2 00C0              eepromRead@address 0021  
      __size_of_readController 012D                     _cmdCounter 0076                     __pbssBANK0 006D  
                   __pbssBANK1 00A0                     _analogMode 0078                   ??_PS2Command 0072  
                   __pmaintext 0730                        ?___wmul 0020                     __pintentry 0004  
      __size_of_spiReceiveWait 0004            __CFG_RSTOSC$HFINT32 0000             __size_of_nvmUnlock 0007  
           __size_of_ppsUnlock 0007                     _eepromRead 07E7     eepromWrite@interruptStatus 0022  
                      _NVMADRH 081B                        _NVMADRL 081A                        _NVMDATL 081C  
                      _NVMCON2 081F             __end_of_PS2Command 0152                        _PPSLOCK 0E8F  
                      _SSP1BUF 018C                     _escapeMode 006D       readController@analogMode 0022  
 __end_of_readControllerAnalog 06DE           __CFG_SCANE$available 0000                      ?_spiWrite 0070  
                      _adcInit 0F2A                        ___awdiv 06DE                 _pollController 05D6  
              __size_of___wmul 001C                        __ptext1 0675                        __ptext2 07B0  
                      __ptext3 0776                        __ptext4 0F4C                        __ptext5 07F9  
                      __ptext6 0F22                        __ptext7 0188                        __ptext8 07E7  
                      __ptext9 0FB6                        _readADC 0FD7                   __size_of_Map 0021  
                      _picInit 0776           __size_of_reversebyte 0037                        _lutInit 0188  
                      _ppsLock 0F22                        _spiInit 0F4C                        _spiRead 0F11  
                      clrloop0 0F35           end_of_initialization 0184                        init_ram 0F40  
 __size_of_configureController 0146                        initloop 0F41              __end_of_nvmUnlock 0F22  
            __end_of_ppsUnlock 0800         __end_of_pollController 0675                     ??_spiWrite 0070  
              reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000                      Map@outMax 0037  
                    Map@outMin 0035                    ?_eepromRead 0070                 _readController 04A9  
                    _TRISAbits 0011                      _TRISCbits 0013                    spiWrite@dat 0070  
             __CFG_FEXTOSC$OFF 0000             _digitalStateSecond 0057                  ??_eepromWrite 0021  
              ?_pollController 0070                 _spiReceiveWait 0F0D            _defaultAnalogSticks 0053  
               __end_of___wmul 0F78                  __pidataCOMMON 0002         __end_of_readController 05D6  
          start_initialization 0154                    __end_of_Map 0FD7           _readControllerAnalog 0675  
                _debounceLoops 0052            __size_of_eepromRead 0012               __CFG_LPBOREN$OFF 0000  
       __end_of_spiReceiveWait 0F11            __end_of_eepromWrite 0FB6                       ??___wmul 0024  
                  __pdataBANK0 0050                ?_readController 0070                    __pbssBIGRAM 23F0  
                  __pbssCOMMON 0075                      ___latbits 0003                  __pcstackBANK0 0020  
        configureController@lx 0032          configureController@ly 0033          configureController@rx 0034  
        configureController@ry 0035          ?_readControllerAnalog 0070                 _responseLength 0050  
            _analogStateSecond 00D0                      _analogMax 0051                      _analogMin 006E  
              ?_spiReceiveWait 0070                       ?_adcInit 0070                       ?___awdiv 0026  
             __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005            _configureController 0363  
                     ?_readADC 0020                       ?_picInit 0070                       ?_lutInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 0020                       ?_spiRead 0070  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022           ?_configureController 0070  
               ___wmul@product 0024                    _eepromWrite 0F95                      clear_ram0 0F34  
           spiInit@sDataSample 0020                      _nvmUnlock 0F1B                       Map@inMax 0033  
                     Map@inMin 0031                      _ppsUnlock 07F9                       _SSP1CON1 0190  
                     _SSP1STAT 018F                  ??_reversebyte 0020                     _ADCON0bits 0093  
            ___wmul@multiplier 0020                   lutInit@lxMax 0043                   lutInit@lxMin 0042  
                 lutInit@lyMax 0045                   lutInit@lyMin 0044              _digitalStateFirst 0058  
                 lutInit@rxMax 0047                   lutInit@rxMin 0046                   lutInit@ryMax 0049  
                 lutInit@ryMin 0048                   ??_eepromRead 0020                      main@count 004E  
       ??_readControllerAnalog 0029          ??_configureController 0029               ??_pollController 0070  
           __end_of_eepromRead 07F9                     ?_nvmUnlock 0070                     ?_ppsUnlock 0070  
             __size_of_adcInit 000A               __size_of___awdiv 0052                 readADC@channel 0020  
             _analogStateFirst 00D8               __size_of_readADC 0029               __size_of_picInit 003A  
          __end_of_reversebyte 07E7               __size_of_lutInit 01DB                       __ptext10 0F5C  
                     __ptext11 06DE                       __ptext20 0F11                       __ptext12 0363  
                     __ptext21 0F0D                       __ptext13 04A9                       __ptext22 05D6  
                     __ptext14 0FD7                       __ptext15 0F95                       __ptext16 0F1B  
                     __ptext17 0F2A                       __ptext19 0F16               __size_of_ppsLock 0008  
             __size_of_spiInit 0010               __size_of_spiRead 0005                  __size_of_main 0046  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 0059               ??_readController 0020  
                     _spiWrite 0F16                       int$flags 007E                   spiInit@sType 0023  
              main@slaveSelect 004F                   _SSP1STATbits 018F              spiInit@sClockIdle 0021  
                   _INTCONbits 000B                    _NVMCON1bits 081E         pollController@response 0071  
                     intlevel1 0000               ??_spiReceiveWait 0070              __CFG_CLKOUTEN$OFF 0000  
                   _PS2Command 0004                    ??_nvmUnlock 0020                    ??_ppsUnlock 0020  
                  _reversebyte 07B0                    _previousCmd 0075                   ?_eepromWrite 0020  
