

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 13 20:36:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F18876 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001C                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0110                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  018E                     	;# 
   167  018F                     	;# 
   168  0190                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0198                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  020C                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  020F                     	;# 
   183  020F                     	;# 
   184  0210                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0218                     	;# 
   199  0218                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021B                     	;# 
   204  021C                     	;# 
   205  021C                     	;# 
   206  021D                     	;# 
   207  021D                     	;# 
   208  021E                     	;# 
   209  021F                     	;# 
   210  028C                     	;# 
   211  028C                     	;# 
   212  028D                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  028F                     	;# 
   216  0290                     	;# 
   217  0290                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0296                     	;# 
   227  0297                     	;# 
   228  0298                     	;# 
   229  0298                     	;# 
   230  0299                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  030C                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  030F                     	;# 
   242  0310                     	;# 
   243  0310                     	;# 
   244  0311                     	;# 
   245  0312                     	;# 
   246  0313                     	;# 
   247  0314                     	;# 
   248  0314                     	;# 
   249  0315                     	;# 
   250  0316                     	;# 
   251  0317                     	;# 
   252  0318                     	;# 
   253  0318                     	;# 
   254  0319                     	;# 
   255  031A                     	;# 
   256  031B                     	;# 
   257  031C                     	;# 
   258  031C                     	;# 
   259  031D                     	;# 
   260  031E                     	;# 
   261  031F                     	;# 
   262  038C                     	;# 
   263  038C                     	;# 
   264  038D                     	;# 
   265  038E                     	;# 
   266  0390                     	;# 
   267  0390                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  040C                     	;# 
   271  040D                     	;# 
   272  040E                     	;# 
   273  040F                     	;# 
   274  0410                     	;# 
   275  0411                     	;# 
   276  0416                     	;# 
   277  0416                     	;# 
   278  0417                     	;# 
   279  0418                     	;# 
   280  0418                     	;# 
   281  0419                     	;# 
   282  041A                     	;# 
   283  041A                     	;# 
   284  041B                     	;# 
   285  041C                     	;# 
   286  041C                     	;# 
   287  041D                     	;# 
   288  041E                     	;# 
   289  041F                     	;# 
   290  048C                     	;# 
   291  048C                     	;# 
   292  048D                     	;# 
   293  048E                     	;# 
   294  048F                     	;# 
   295  048F                     	;# 
   296  0490                     	;# 
   297  0491                     	;# 
   298  0492                     	;# 
   299  0492                     	;# 
   300  0493                     	;# 
   301  0494                     	;# 
   302  0495                     	;# 
   303  0495                     	;# 
   304  0496                     	;# 
   305  0497                     	;# 
   306  0498                     	;# 
   307  0499                     	;# 
   308  049A                     	;# 
   309  049B                     	;# 
   310  049C                     	;# 
   311  049D                     	;# 
   312  050C                     	;# 
   313  050C                     	;# 
   314  050D                     	;# 
   315  050E                     	;# 
   316  050F                     	;# 
   317  050F                     	;# 
   318  0510                     	;# 
   319  0511                     	;# 
   320  0512                     	;# 
   321  0512                     	;# 
   322  0513                     	;# 
   323  0514                     	;# 
   324  0515                     	;# 
   325  0515                     	;# 
   326  0516                     	;# 
   327  0517                     	;# 
   328  0518                     	;# 
   329  0519                     	;# 
   330  051A                     	;# 
   331  051B                     	;# 
   332  051C                     	;# 
   333  051D                     	;# 
   334  058C                     	;# 
   335  058C                     	;# 
   336  058D                     	;# 
   337  058E                     	;# 
   338  058F                     	;# 
   339  058F                     	;# 
   340  0590                     	;# 
   341  0591                     	;# 
   342  0592                     	;# 
   343  0593                     	;# 
   344  060C                     	;# 
   345  060D                     	;# 
   346  060E                     	;# 
   347  060F                     	;# 
   348  0610                     	;# 
   349  0611                     	;# 
   350  0612                     	;# 
   351  0613                     	;# 
   352  0614                     	;# 
   353  0616                     	;# 
   354  0617                     	;# 
   355  0618                     	;# 
   356  0619                     	;# 
   357  061A                     	;# 
   358  061B                     	;# 
   359  061C                     	;# 
   360  061D                     	;# 
   361  061E                     	;# 
   362  068C                     	;# 
   363  068D                     	;# 
   364  068E                     	;# 
   365  068F                     	;# 
   366  0690                     	;# 
   367  0691                     	;# 
   368  0692                     	;# 
   369  0693                     	;# 
   370  0694                     	;# 
   371  070C                     	;# 
   372  070D                     	;# 
   373  070E                     	;# 
   374  070F                     	;# 
   375  0710                     	;# 
   376  0711                     	;# 
   377  0712                     	;# 
   378  0713                     	;# 
   379  0714                     	;# 
   380  0716                     	;# 
   381  0717                     	;# 
   382  0718                     	;# 
   383  0719                     	;# 
   384  071A                     	;# 
   385  071B                     	;# 
   386  071C                     	;# 
   387  071D                     	;# 
   388  071E                     	;# 
   389  0796                     	;# 
   390  0797                     	;# 
   391  0798                     	;# 
   392  0799                     	;# 
   393  079A                     	;# 
   394  079B                     	;# 
   395  080C                     	;# 
   396  080D                     	;# 
   397  080E                     	;# 
   398  080F                     	;# 
   399  0810                     	;# 
   400  0811                     	;# 
   401  0812                     	;# 
   402  0813                     	;# 
   403  0814                     	;# 
   404  081A                     	;# 
   405  081B                     	;# 
   406  081C                     	;# 
   407  081D                     	;# 
   408  081E                     	;# 
   409  081F                     	;# 
   410  088C                     	;# 
   411  088D                     	;# 
   412  088E                     	;# 
   413  088F                     	;# 
   414  0890                     	;# 
   415  0891                     	;# 
   416  0892                     	;# 
   417  0893                     	;# 
   418  0895                     	;# 
   419  0896                     	;# 
   420  0897                     	;# 
   421  0898                     	;# 
   422  0899                     	;# 
   423  089A                     	;# 
   424  089B                     	;# 
   425  090C                     	;# 
   426  090E                     	;# 
   427  090F                     	;# 
   428  091F                     	;# 
   429  098F                     	;# 
   430  098F                     	;# 
   431  0990                     	;# 
   432  0991                     	;# 
   433  0992                     	;# 
   434  0993                     	;# 
   435  0994                     	;# 
   436  0995                     	;# 
   437  0996                     	;# 
   438  0997                     	;# 
   439  0E0F                     	;# 
   440  0E10                     	;# 
   441  0E11                     	;# 
   442  0E12                     	;# 
   443  0E13                     	;# 
   444  0E14                     	;# 
   445  0E15                     	;# 
   446  0E16                     	;# 
   447  0E17                     	;# 
   448  0E18                     	;# 
   449  0E19                     	;# 
   450  0E1A                     	;# 
   451  0E1B                     	;# 
   452  0E1C                     	;# 
   453  0E1D                     	;# 
   454  0E1E                     	;# 
   455  0E1F                     	;# 
   456  0E20                     	;# 
   457  0E21                     	;# 
   458  0E22                     	;# 
   459  0E23                     	;# 
   460  0E24                     	;# 
   461  0E25                     	;# 
   462  0E26                     	;# 
   463  0E27                     	;# 
   464  0E28                     	;# 
   465  0E29                     	;# 
   466  0E2A                     	;# 
   467  0E2B                     	;# 
   468  0E2C                     	;# 
   469  0E2D                     	;# 
   470  0E2E                     	;# 
   471  0E2F                     	;# 
   472  0E30                     	;# 
   473  0E31                     	;# 
   474  0E32                     	;# 
   475  0E33                     	;# 
   476  0E34                     	;# 
   477  0E35                     	;# 
   478  0E36                     	;# 
   479  0E37                     	;# 
   480  0E8F                     	;# 
   481  0E90                     	;# 
   482  0E91                     	;# 
   483  0E92                     	;# 
   484  0E93                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E96                     	;# 
   488  0E97                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0EA1                     	;# 
   493  0EA2                     	;# 
   494  0EA3                     	;# 
   495  0EA4                     	;# 
   496  0EA5                     	;# 
   497  0EA9                     	;# 
   498  0EAA                     	;# 
   499  0EAB                     	;# 
   500  0EAC                     	;# 
   501  0EB1                     	;# 
   502  0EB2                     	;# 
   503  0EB3                     	;# 
   504  0EB8                     	;# 
   505  0EB9                     	;# 
   506  0EBA                     	;# 
   507  0EBB                     	;# 
   508  0EBC                     	;# 
   509  0EBD                     	;# 
   510  0EBE                     	;# 
   511  0EC3                     	;# 
   512  0EC5                     	;# 
   513  0EC6                     	;# 
   514  0EC7                     	;# 
   515  0EC8                     	;# 
   516  0EC9                     	;# 
   517  0ECA                     	;# 
   518  0ECB                     	;# 
   519  0ECC                     	;# 
   520  0F10                     	;# 
   521  0F11                     	;# 
   522  0F12                     	;# 
   523  0F13                     	;# 
   524  0F14                     	;# 
   525  0F15                     	;# 
   526  0F16                     	;# 
   527  0F17                     	;# 
   528  0F18                     	;# 
   529  0F19                     	;# 
   530  0F1A                     	;# 
   531  0F1B                     	;# 
   532  0F1C                     	;# 
   533  0F1D                     	;# 
   534  0F1E                     	;# 
   535  0F1F                     	;# 
   536  0F20                     	;# 
   537  0F21                     	;# 
   538  0F22                     	;# 
   539  0F23                     	;# 
   540  0F24                     	;# 
   541  0F25                     	;# 
   542  0F26                     	;# 
   543  0F27                     	;# 
   544  0F28                     	;# 
   545  0F29                     	;# 
   546  0F2A                     	;# 
   547  0F2B                     	;# 
   548  0F2C                     	;# 
   549  0F2D                     	;# 
   550  0F2E                     	;# 
   551  0F2F                     	;# 
   552  0F30                     	;# 
   553  0F31                     	;# 
   554  0F32                     	;# 
   555  0F38                     	;# 
   556  0F39                     	;# 
   557  0F3A                     	;# 
   558  0F3B                     	;# 
   559  0F3C                     	;# 
   560  0F3D                     	;# 
   561  0F3E                     	;# 
   562  0F3F                     	;# 
   563  0F40                     	;# 
   564  0F41                     	;# 
   565  0F43                     	;# 
   566  0F44                     	;# 
   567  0F45                     	;# 
   568  0F46                     	;# 
   569  0F47                     	;# 
   570  0F48                     	;# 
   571  0F49                     	;# 
   572  0F4A                     	;# 
   573  0F4B                     	;# 
   574  0F4C                     	;# 
   575  0F4E                     	;# 
   576  0F4F                     	;# 
   577  0F50                     	;# 
   578  0F51                     	;# 
   579  0F52                     	;# 
   580  0F53                     	;# 
   581  0F54                     	;# 
   582  0F55                     	;# 
   583  0F56                     	;# 
   584  0F57                     	;# 
   585  0F59                     	;# 
   586  0F5A                     	;# 
   587  0F5B                     	;# 
   588  0F5C                     	;# 
   589  0F5D                     	;# 
   590  0F61                     	;# 
   591  0F62                     	;# 
   592  0F64                     	;# 
   593  0F65                     	;# 
   594  0F66                     	;# 
   595  0F67                     	;# 
   596  0F68                     	;# 
   597  0F69                     	;# 
   598  0F6A                     	;# 
   599  0F6B                     	;# 
   600  0F6C                     	;# 
   601  0F6D                     	;# 
   602  0FE4                     	;# 
   603  0FE5                     	;# 
   604  0FE6                     	;# 
   605  0FE7                     	;# 
   606  0FE8                     	;# 
   607  0FE9                     	;# 
   608  0FEA                     	;# 
   609  0FEB                     	;# 
   610  0FED                     	;# 
   611  0FEE                     	;# 
   612  0FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  000F                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  0019                     	;# 
   639  001A                     	;# 
   640  001C                     	;# 
   641  001C                     	;# 
   642  001D                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  008C                     	;# 
   647  008C                     	;# 
   648  008D                     	;# 
   649  008E                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0095                     	;# 
   658  0096                     	;# 
   659  0097                     	;# 
   660  0098                     	;# 
   661  0099                     	;# 
   662  009A                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  010E                     	;# 
   671  010F                     	;# 
   672  0110                     	;# 
   673  0110                     	;# 
   674  0111                     	;# 
   675  0112                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0116                     	;# 
   683  0117                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020C                     	;# 
   725  020D                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0218                     	;# 
   745  0219                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0290                     	;# 
   763  0291                     	;# 
   764  0292                     	;# 
   765  0292                     	;# 
   766  0293                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0296                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  0298                     	;# 
   775  0299                     	;# 
   776  0299                     	;# 
   777  029A                     	;# 
   778  029B                     	;# 
   779  029C                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  030C                     	;# 
   783  030C                     	;# 
   784  030D                     	;# 
   785  030E                     	;# 
   786  030F                     	;# 
   787  0310                     	;# 
   788  0310                     	;# 
   789  0311                     	;# 
   790  0312                     	;# 
   791  0313                     	;# 
   792  0314                     	;# 
   793  0314                     	;# 
   794  0315                     	;# 
   795  0316                     	;# 
   796  0317                     	;# 
   797  0318                     	;# 
   798  0318                     	;# 
   799  0319                     	;# 
   800  031A                     	;# 
   801  031B                     	;# 
   802  031C                     	;# 
   803  031C                     	;# 
   804  031D                     	;# 
   805  031E                     	;# 
   806  031F                     	;# 
   807  038C                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0390                     	;# 
   813  0391                     	;# 
   814  0392                     	;# 
   815  040C                     	;# 
   816  040D                     	;# 
   817  040E                     	;# 
   818  040F                     	;# 
   819  0410                     	;# 
   820  0411                     	;# 
   821  0416                     	;# 
   822  0416                     	;# 
   823  0417                     	;# 
   824  0418                     	;# 
   825  0418                     	;# 
   826  0419                     	;# 
   827  041A                     	;# 
   828  041A                     	;# 
   829  041B                     	;# 
   830  041C                     	;# 
   831  041C                     	;# 
   832  041D                     	;# 
   833  041E                     	;# 
   834  041F                     	;# 
   835  048C                     	;# 
   836  048C                     	;# 
   837  048D                     	;# 
   838  048E                     	;# 
   839  048F                     	;# 
   840  048F                     	;# 
   841  0490                     	;# 
   842  0491                     	;# 
   843  0492                     	;# 
   844  0492                     	;# 
   845  0493                     	;# 
   846  0494                     	;# 
   847  0495                     	;# 
   848  0495                     	;# 
   849  0496                     	;# 
   850  0497                     	;# 
   851  0498                     	;# 
   852  0499                     	;# 
   853  049A                     	;# 
   854  049B                     	;# 
   855  049C                     	;# 
   856  049D                     	;# 
   857  050C                     	;# 
   858  050C                     	;# 
   859  050D                     	;# 
   860  050E                     	;# 
   861  050F                     	;# 
   862  050F                     	;# 
   863  0510                     	;# 
   864  0511                     	;# 
   865  0512                     	;# 
   866  0512                     	;# 
   867  0513                     	;# 
   868  0514                     	;# 
   869  0515                     	;# 
   870  0515                     	;# 
   871  0516                     	;# 
   872  0517                     	;# 
   873  0518                     	;# 
   874  0519                     	;# 
   875  051A                     	;# 
   876  051B                     	;# 
   877  051C                     	;# 
   878  051D                     	;# 
   879  058C                     	;# 
   880  058C                     	;# 
   881  058D                     	;# 
   882  058E                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0593                     	;# 
   889  060C                     	;# 
   890  060D                     	;# 
   891  060E                     	;# 
   892  060F                     	;# 
   893  0610                     	;# 
   894  0611                     	;# 
   895  0612                     	;# 
   896  0613                     	;# 
   897  0614                     	;# 
   898  0616                     	;# 
   899  0617                     	;# 
   900  0618                     	;# 
   901  0619                     	;# 
   902  061A                     	;# 
   903  061B                     	;# 
   904  061C                     	;# 
   905  061D                     	;# 
   906  061E                     	;# 
   907  068C                     	;# 
   908  068D                     	;# 
   909  068E                     	;# 
   910  068F                     	;# 
   911  0690                     	;# 
   912  0691                     	;# 
   913  0692                     	;# 
   914  0693                     	;# 
   915  0694                     	;# 
   916  070C                     	;# 
   917  070D                     	;# 
   918  070E                     	;# 
   919  070F                     	;# 
   920  0710                     	;# 
   921  0711                     	;# 
   922  0712                     	;# 
   923  0713                     	;# 
   924  0714                     	;# 
   925  0716                     	;# 
   926  0717                     	;# 
   927  0718                     	;# 
   928  0719                     	;# 
   929  071A                     	;# 
   930  071B                     	;# 
   931  071C                     	;# 
   932  071D                     	;# 
   933  071E                     	;# 
   934  0796                     	;# 
   935  0797                     	;# 
   936  0798                     	;# 
   937  0799                     	;# 
   938  079A                     	;# 
   939  079B                     	;# 
   940  080C                     	;# 
   941  080D                     	;# 
   942  080E                     	;# 
   943  080F                     	;# 
   944  0810                     	;# 
   945  0811                     	;# 
   946  0812                     	;# 
   947  0813                     	;# 
   948  0814                     	;# 
   949  081A                     	;# 
   950  081B                     	;# 
   951  081C                     	;# 
   952  081D                     	;# 
   953  081E                     	;# 
   954  081F                     	;# 
   955  088C                     	;# 
   956  088D                     	;# 
   957  088E                     	;# 
   958  088F                     	;# 
   959  0890                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0893                     	;# 
   963  0895                     	;# 
   964  0896                     	;# 
   965  0897                     	;# 
   966  0898                     	;# 
   967  0899                     	;# 
   968  089A                     	;# 
   969  089B                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  0E0F                     	;# 
   985  0E10                     	;# 
   986  0E11                     	;# 
   987  0E12                     	;# 
   988  0E13                     	;# 
   989  0E14                     	;# 
   990  0E15                     	;# 
   991  0E16                     	;# 
   992  0E17                     	;# 
   993  0E18                     	;# 
   994  0E19                     	;# 
   995  0E1A                     	;# 
   996  0E1B                     	;# 
   997  0E1C                     	;# 
   998  0E1D                     	;# 
   999  0E1E                     	;# 
  1000  0E1F                     	;# 
  1001  0E20                     	;# 
  1002  0E21                     	;# 
  1003  0E22                     	;# 
  1004  0E23                     	;# 
  1005  0E24                     	;# 
  1006  0E25                     	;# 
  1007  0E26                     	;# 
  1008  0E27                     	;# 
  1009  0E28                     	;# 
  1010  0E29                     	;# 
  1011  0E2A                     	;# 
  1012  0E2B                     	;# 
  1013  0E2C                     	;# 
  1014  0E2D                     	;# 
  1015  0E2E                     	;# 
  1016  0E2F                     	;# 
  1017  0E30                     	;# 
  1018  0E31                     	;# 
  1019  0E32                     	;# 
  1020  0E33                     	;# 
  1021  0E34                     	;# 
  1022  0E35                     	;# 
  1023  0E36                     	;# 
  1024  0E37                     	;# 
  1025  0E8F                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E93                     	;# 
  1030  0E94                     	;# 
  1031  0E95                     	;# 
  1032  0E96                     	;# 
  1033  0E97                     	;# 
  1034  0E9C                     	;# 
  1035  0E9D                     	;# 
  1036  0E9E                     	;# 
  1037  0EA1                     	;# 
  1038  0EA2                     	;# 
  1039  0EA3                     	;# 
  1040  0EA4                     	;# 
  1041  0EA5                     	;# 
  1042  0EA9                     	;# 
  1043  0EAA                     	;# 
  1044  0EAB                     	;# 
  1045  0EAC                     	;# 
  1046  0EB1                     	;# 
  1047  0EB2                     	;# 
  1048  0EB3                     	;# 
  1049  0EB8                     	;# 
  1050  0EB9                     	;# 
  1051  0EBA                     	;# 
  1052  0EBB                     	;# 
  1053  0EBC                     	;# 
  1054  0EBD                     	;# 
  1055  0EBE                     	;# 
  1056  0EC3                     	;# 
  1057  0EC5                     	;# 
  1058  0EC6                     	;# 
  1059  0EC7                     	;# 
  1060  0EC8                     	;# 
  1061  0EC9                     	;# 
  1062  0ECA                     	;# 
  1063  0ECB                     	;# 
  1064  0ECC                     	;# 
  1065  0F10                     	;# 
  1066  0F11                     	;# 
  1067  0F12                     	;# 
  1068  0F13                     	;# 
  1069  0F14                     	;# 
  1070  0F15                     	;# 
  1071  0F16                     	;# 
  1072  0F17                     	;# 
  1073  0F18                     	;# 
  1074  0F19                     	;# 
  1075  0F1A                     	;# 
  1076  0F1B                     	;# 
  1077  0F1C                     	;# 
  1078  0F1D                     	;# 
  1079  0F1E                     	;# 
  1080  0F1F                     	;# 
  1081  0F20                     	;# 
  1082  0F21                     	;# 
  1083  0F22                     	;# 
  1084  0F23                     	;# 
  1085  0F24                     	;# 
  1086  0F25                     	;# 
  1087  0F26                     	;# 
  1088  0F27                     	;# 
  1089  0F28                     	;# 
  1090  0F29                     	;# 
  1091  0F2A                     	;# 
  1092  0F2B                     	;# 
  1093  0F2C                     	;# 
  1094  0F2D                     	;# 
  1095  0F2E                     	;# 
  1096  0F2F                     	;# 
  1097  0F30                     	;# 
  1098  0F31                     	;# 
  1099  0F32                     	;# 
  1100  0F38                     	;# 
  1101  0F39                     	;# 
  1102  0F3A                     	;# 
  1103  0F3B                     	;# 
  1104  0F3C                     	;# 
  1105  0F3D                     	;# 
  1106  0F3E                     	;# 
  1107  0F3F                     	;# 
  1108  0F40                     	;# 
  1109  0F41                     	;# 
  1110  0F43                     	;# 
  1111  0F44                     	;# 
  1112  0F45                     	;# 
  1113  0F46                     	;# 
  1114  0F47                     	;# 
  1115  0F48                     	;# 
  1116  0F49                     	;# 
  1117  0F4A                     	;# 
  1118  0F4B                     	;# 
  1119  0F4C                     	;# 
  1120  0F4E                     	;# 
  1121  0F4F                     	;# 
  1122  0F50                     	;# 
  1123  0F51                     	;# 
  1124  0F52                     	;# 
  1125  0F53                     	;# 
  1126  0F54                     	;# 
  1127  0F55                     	;# 
  1128  0F56                     	;# 
  1129  0F57                     	;# 
  1130  0F59                     	;# 
  1131  0F5A                     	;# 
  1132  0F5B                     	;# 
  1133  0F5C                     	;# 
  1134  0F5D                     	;# 
  1135  0F61                     	;# 
  1136  0F62                     	;# 
  1137  0F64                     	;# 
  1138  0F65                     	;# 
  1139  0F66                     	;# 
  1140  0F67                     	;# 
  1141  0F68                     	;# 
  1142  0F69                     	;# 
  1143  0F6A                     	;# 
  1144  0F6B                     	;# 
  1145  0F6C                     	;# 
  1146  0F6D                     	;# 
  1147  0FE4                     	;# 
  1148  0FE5                     	;# 
  1149  0FE6                     	;# 
  1150  0FE7                     	;# 
  1151  0FE8                     	;# 
  1152  0FE9                     	;# 
  1153  0FEA                     	;# 
  1154  0FEB                     	;# 
  1155  0FED                     	;# 
  1156  0FEE                     	;# 
  1157  0FEF                     	;# 
  1158  0000                     	;# 
  1159  0001                     	;# 
  1160  0002                     	;# 
  1161  0003                     	;# 
  1162  0004                     	;# 
  1163  0005                     	;# 
  1164  0006                     	;# 
  1165  0007                     	;# 
  1166  0008                     	;# 
  1167  0009                     	;# 
  1168  000A                     	;# 
  1169  000B                     	;# 
  1170  000C                     	;# 
  1171  000D                     	;# 
  1172  000E                     	;# 
  1173  000F                     	;# 
  1174  0010                     	;# 
  1175  0011                     	;# 
  1176  0012                     	;# 
  1177  0013                     	;# 
  1178  0014                     	;# 
  1179  0015                     	;# 
  1180  0016                     	;# 
  1181  0017                     	;# 
  1182  0018                     	;# 
  1183  0019                     	;# 
  1184  001A                     	;# 
  1185  001C                     	;# 
  1186  001C                     	;# 
  1187  001D                     	;# 
  1188  001D                     	;# 
  1189  001E                     	;# 
  1190  001F                     	;# 
  1191  008C                     	;# 
  1192  008C                     	;# 
  1193  008D                     	;# 
  1194  008E                     	;# 
  1195  008E                     	;# 
  1196  008F                     	;# 
  1197  0090                     	;# 
  1198  0090                     	;# 
  1199  0091                     	;# 
  1200  0093                     	;# 
  1201  0094                     	;# 
  1202  0095                     	;# 
  1203  0096                     	;# 
  1204  0097                     	;# 
  1205  0098                     	;# 
  1206  0099                     	;# 
  1207  009A                     	;# 
  1208  009B                     	;# 
  1209  009C                     	;# 
  1210  009D                     	;# 
  1211  009E                     	;# 
  1212  010C                     	;# 
  1213  010D                     	;# 
  1214  010E                     	;# 
  1215  010E                     	;# 
  1216  010F                     	;# 
  1217  0110                     	;# 
  1218  0110                     	;# 
  1219  0111                     	;# 
  1220  0112                     	;# 
  1221  0112                     	;# 
  1222  0113                     	;# 
  1223  0114                     	;# 
  1224  0114                     	;# 
  1225  0115                     	;# 
  1226  0116                     	;# 
  1227  0116                     	;# 
  1228  0117                     	;# 
  1229  0119                     	;# 
  1230  0119                     	;# 
  1231  0119                     	;# 
  1232  011A                     	;# 
  1233  011A                     	;# 
  1234  011A                     	;# 
  1235  011B                     	;# 
  1236  011B                     	;# 
  1237  011B                     	;# 
  1238  011B                     	;# 
  1239  011B                     	;# 
  1240  011C                     	;# 
  1241  011C                     	;# 
  1242  011C                     	;# 
  1243  011D                     	;# 
  1244  011D                     	;# 
  1245  011D                     	;# 
  1246  011E                     	;# 
  1247  011E                     	;# 
  1248  011E                     	;# 
  1249  011F                     	;# 
  1250  011F                     	;# 
  1251  011F                     	;# 
  1252  011F                     	;# 
  1253  011F                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  018E                     	;# 
  1257  018F                     	;# 
  1258  0190                     	;# 
  1259  0191                     	;# 
  1260  0192                     	;# 
  1261  0196                     	;# 
  1262  0197                     	;# 
  1263  0198                     	;# 
  1264  0199                     	;# 
  1265  019A                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  020C                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  020E                     	;# 
  1272  020F                     	;# 
  1273  020F                     	;# 
  1274  0210                     	;# 
  1275  0210                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0214                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0218                     	;# 
  1289  0218                     	;# 
  1290  0219                     	;# 
  1291  021A                     	;# 
  1292  021B                     	;# 
  1293  021B                     	;# 
  1294  021C                     	;# 
  1295  021C                     	;# 
  1296  021D                     	;# 
  1297  021D                     	;# 
  1298  021E                     	;# 
  1299  021F                     	;# 
  1300  028C                     	;# 
  1301  028C                     	;# 
  1302  028D                     	;# 
  1303  028D                     	;# 
  1304  028E                     	;# 
  1305  028F                     	;# 
  1306  0290                     	;# 
  1307  0290                     	;# 
  1308  0291                     	;# 
  1309  0292                     	;# 
  1310  0292                     	;# 
  1311  0293                     	;# 
  1312  0293                     	;# 
  1313  0294                     	;# 
  1314  0295                     	;# 
  1315  0296                     	;# 
  1316  0296                     	;# 
  1317  0297                     	;# 
  1318  0298                     	;# 
  1319  0298                     	;# 
  1320  0299                     	;# 
  1321  0299                     	;# 
  1322  029A                     	;# 
  1323  029B                     	;# 
  1324  029C                     	;# 
  1325  029C                     	;# 
  1326  029D                     	;# 
  1327  030C                     	;# 
  1328  030C                     	;# 
  1329  030D                     	;# 
  1330  030E                     	;# 
  1331  030F                     	;# 
  1332  0310                     	;# 
  1333  0310                     	;# 
  1334  0311                     	;# 
  1335  0312                     	;# 
  1336  0313                     	;# 
  1337  0314                     	;# 
  1338  0314                     	;# 
  1339  0315                     	;# 
  1340  0316                     	;# 
  1341  0317                     	;# 
  1342  0318                     	;# 
  1343  0318                     	;# 
  1344  0319                     	;# 
  1345  031A                     	;# 
  1346  031B                     	;# 
  1347  031C                     	;# 
  1348  031C                     	;# 
  1349  031D                     	;# 
  1350  031E                     	;# 
  1351  031F                     	;# 
  1352  038C                     	;# 
  1353  038C                     	;# 
  1354  038D                     	;# 
  1355  038E                     	;# 
  1356  0390                     	;# 
  1357  0390                     	;# 
  1358  0391                     	;# 
  1359  0392                     	;# 
  1360  040C                     	;# 
  1361  040D                     	;# 
  1362  040E                     	;# 
  1363  040F                     	;# 
  1364  0410                     	;# 
  1365  0411                     	;# 
  1366  0416                     	;# 
  1367  0416                     	;# 
  1368  0417                     	;# 
  1369  0418                     	;# 
  1370  0418                     	;# 
  1371  0419                     	;# 
  1372  041A                     	;# 
  1373  041A                     	;# 
  1374  041B                     	;# 
  1375  041C                     	;# 
  1376  041C                     	;# 
  1377  041D                     	;# 
  1378  041E                     	;# 
  1379  041F                     	;# 
  1380  048C                     	;# 
  1381  048C                     	;# 
  1382  048D                     	;# 
  1383  048E                     	;# 
  1384  048F                     	;# 
  1385  048F                     	;# 
  1386  0490                     	;# 
  1387  0491                     	;# 
  1388  0492                     	;# 
  1389  0492                     	;# 
  1390  0493                     	;# 
  1391  0494                     	;# 
  1392  0495                     	;# 
  1393  0495                     	;# 
  1394  0496                     	;# 
  1395  0497                     	;# 
  1396  0498                     	;# 
  1397  0499                     	;# 
  1398  049A                     	;# 
  1399  049B                     	;# 
  1400  049C                     	;# 
  1401  049D                     	;# 
  1402  050C                     	;# 
  1403  050C                     	;# 
  1404  050D                     	;# 
  1405  050E                     	;# 
  1406  050F                     	;# 
  1407  050F                     	;# 
  1408  0510                     	;# 
  1409  0511                     	;# 
  1410  0512                     	;# 
  1411  0512                     	;# 
  1412  0513                     	;# 
  1413  0514                     	;# 
  1414  0515                     	;# 
  1415  0515                     	;# 
  1416  0516                     	;# 
  1417  0517                     	;# 
  1418  0518                     	;# 
  1419  0519                     	;# 
  1420  051A                     	;# 
  1421  051B                     	;# 
  1422  051C                     	;# 
  1423  051D                     	;# 
  1424  058C                     	;# 
  1425  058C                     	;# 
  1426  058D                     	;# 
  1427  058E                     	;# 
  1428  058F                     	;# 
  1429  058F                     	;# 
  1430  0590                     	;# 
  1431  0591                     	;# 
  1432  0592                     	;# 
  1433  0593                     	;# 
  1434  060C                     	;# 
  1435  060D                     	;# 
  1436  060E                     	;# 
  1437  060F                     	;# 
  1438  0610                     	;# 
  1439  0611                     	;# 
  1440  0612                     	;# 
  1441  0613                     	;# 
  1442  0614                     	;# 
  1443  0616                     	;# 
  1444  0617                     	;# 
  1445  0618                     	;# 
  1446  0619                     	;# 
  1447  061A                     	;# 
  1448  061B                     	;# 
  1449  061C                     	;# 
  1450  061D                     	;# 
  1451  061E                     	;# 
  1452  068C                     	;# 
  1453  068D                     	;# 
  1454  068E                     	;# 
  1455  068F                     	;# 
  1456  0690                     	;# 
  1457  0691                     	;# 
  1458  0692                     	;# 
  1459  0693                     	;# 
  1460  0694                     	;# 
  1461  070C                     	;# 
  1462  070D                     	;# 
  1463  070E                     	;# 
  1464  070F                     	;# 
  1465  0710                     	;# 
  1466  0711                     	;# 
  1467  0712                     	;# 
  1468  0713                     	;# 
  1469  0714                     	;# 
  1470  0716                     	;# 
  1471  0717                     	;# 
  1472  0718                     	;# 
  1473  0719                     	;# 
  1474  071A                     	;# 
  1475  071B                     	;# 
  1476  071C                     	;# 
  1477  071D                     	;# 
  1478  071E                     	;# 
  1479  0796                     	;# 
  1480  0797                     	;# 
  1481  0798                     	;# 
  1482  0799                     	;# 
  1483  079A                     	;# 
  1484  079B                     	;# 
  1485  080C                     	;# 
  1486  080D                     	;# 
  1487  080E                     	;# 
  1488  080F                     	;# 
  1489  0810                     	;# 
  1490  0811                     	;# 
  1491  0812                     	;# 
  1492  0813                     	;# 
  1493  0814                     	;# 
  1494  081A                     	;# 
  1495  081B                     	;# 
  1496  081C                     	;# 
  1497  081D                     	;# 
  1498  081E                     	;# 
  1499  081F                     	;# 
  1500  088C                     	;# 
  1501  088D                     	;# 
  1502  088E                     	;# 
  1503  088F                     	;# 
  1504  0890                     	;# 
  1505  0891                     	;# 
  1506  0892                     	;# 
  1507  0893                     	;# 
  1508  0895                     	;# 
  1509  0896                     	;# 
  1510  0897                     	;# 
  1511  0898                     	;# 
  1512  0899                     	;# 
  1513  089A                     	;# 
  1514  089B                     	;# 
  1515  090C                     	;# 
  1516  090E                     	;# 
  1517  090F                     	;# 
  1518  091F                     	;# 
  1519  098F                     	;# 
  1520  098F                     	;# 
  1521  0990                     	;# 
  1522  0991                     	;# 
  1523  0992                     	;# 
  1524  0993                     	;# 
  1525  0994                     	;# 
  1526  0995                     	;# 
  1527  0996                     	;# 
  1528  0997                     	;# 
  1529  0E0F                     	;# 
  1530  0E10                     	;# 
  1531  0E11                     	;# 
  1532  0E12                     	;# 
  1533  0E13                     	;# 
  1534  0E14                     	;# 
  1535  0E15                     	;# 
  1536  0E16                     	;# 
  1537  0E17                     	;# 
  1538  0E18                     	;# 
  1539  0E19                     	;# 
  1540  0E1A                     	;# 
  1541  0E1B                     	;# 
  1542  0E1C                     	;# 
  1543  0E1D                     	;# 
  1544  0E1E                     	;# 
  1545  0E1F                     	;# 
  1546  0E20                     	;# 
  1547  0E21                     	;# 
  1548  0E22                     	;# 
  1549  0E23                     	;# 
  1550  0E24                     	;# 
  1551  0E25                     	;# 
  1552  0E26                     	;# 
  1553  0E27                     	;# 
  1554  0E28                     	;# 
  1555  0E29                     	;# 
  1556  0E2A                     	;# 
  1557  0E2B                     	;# 
  1558  0E2C                     	;# 
  1559  0E2D                     	;# 
  1560  0E2E                     	;# 
  1561  0E2F                     	;# 
  1562  0E30                     	;# 
  1563  0E31                     	;# 
  1564  0E32                     	;# 
  1565  0E33                     	;# 
  1566  0E34                     	;# 
  1567  0E35                     	;# 
  1568  0E36                     	;# 
  1569  0E37                     	;# 
  1570  0E8F                     	;# 
  1571  0E90                     	;# 
  1572  0E91                     	;# 
  1573  0E92                     	;# 
  1574  0E93                     	;# 
  1575  0E94                     	;# 
  1576  0E95                     	;# 
  1577  0E96                     	;# 
  1578  0E97                     	;# 
  1579  0E9C                     	;# 
  1580  0E9D                     	;# 
  1581  0E9E                     	;# 
  1582  0EA1                     	;# 
  1583  0EA2                     	;# 
  1584  0EA3                     	;# 
  1585  0EA4                     	;# 
  1586  0EA5                     	;# 
  1587  0EA9                     	;# 
  1588  0EAA                     	;# 
  1589  0EAB                     	;# 
  1590  0EAC                     	;# 
  1591  0EB1                     	;# 
  1592  0EB2                     	;# 
  1593  0EB3                     	;# 
  1594  0EB8                     	;# 
  1595  0EB9                     	;# 
  1596  0EBA                     	;# 
  1597  0EBB                     	;# 
  1598  0EBC                     	;# 
  1599  0EBD                     	;# 
  1600  0EBE                     	;# 
  1601  0EC3                     	;# 
  1602  0EC5                     	;# 
  1603  0EC6                     	;# 
  1604  0EC7                     	;# 
  1605  0EC8                     	;# 
  1606  0EC9                     	;# 
  1607  0ECA                     	;# 
  1608  0ECB                     	;# 
  1609  0ECC                     	;# 
  1610  0F10                     	;# 
  1611  0F11                     	;# 
  1612  0F12                     	;# 
  1613  0F13                     	;# 
  1614  0F14                     	;# 
  1615  0F15                     	;# 
  1616  0F16                     	;# 
  1617  0F17                     	;# 
  1618  0F18                     	;# 
  1619  0F19                     	;# 
  1620  0F1A                     	;# 
  1621  0F1B                     	;# 
  1622  0F1C                     	;# 
  1623  0F1D                     	;# 
  1624  0F1E                     	;# 
  1625  0F1F                     	;# 
  1626  0F20                     	;# 
  1627  0F21                     	;# 
  1628  0F22                     	;# 
  1629  0F23                     	;# 
  1630  0F24                     	;# 
  1631  0F25                     	;# 
  1632  0F26                     	;# 
  1633  0F27                     	;# 
  1634  0F28                     	;# 
  1635  0F29                     	;# 
  1636  0F2A                     	;# 
  1637  0F2B                     	;# 
  1638  0F2C                     	;# 
  1639  0F2D                     	;# 
  1640  0F2E                     	;# 
  1641  0F2F                     	;# 
  1642  0F30                     	;# 
  1643  0F31                     	;# 
  1644  0F32                     	;# 
  1645  0F38                     	;# 
  1646  0F39                     	;# 
  1647  0F3A                     	;# 
  1648  0F3B                     	;# 
  1649  0F3C                     	;# 
  1650  0F3D                     	;# 
  1651  0F3E                     	;# 
  1652  0F3F                     	;# 
  1653  0F40                     	;# 
  1654  0F41                     	;# 
  1655  0F43                     	;# 
  1656  0F44                     	;# 
  1657  0F45                     	;# 
  1658  0F46                     	;# 
  1659  0F47                     	;# 
  1660  0F48                     	;# 
  1661  0F49                     	;# 
  1662  0F4A                     	;# 
  1663  0F4B                     	;# 
  1664  0F4C                     	;# 
  1665  0F4E                     	;# 
  1666  0F4F                     	;# 
  1667  0F50                     	;# 
  1668  0F51                     	;# 
  1669  0F52                     	;# 
  1670  0F53                     	;# 
  1671  0F54                     	;# 
  1672  0F55                     	;# 
  1673  0F56                     	;# 
  1674  0F57                     	;# 
  1675  0F59                     	;# 
  1676  0F5A                     	;# 
  1677  0F5B                     	;# 
  1678  0F5C                     	;# 
  1679  0F5D                     	;# 
  1680  0F61                     	;# 
  1681  0F62                     	;# 
  1682  0F64                     	;# 
  1683  0F65                     	;# 
  1684  0F66                     	;# 
  1685  0F67                     	;# 
  1686  0F68                     	;# 
  1687  0F69                     	;# 
  1688  0F6A                     	;# 
  1689  0F6B                     	;# 
  1690  0F6C                     	;# 
  1691  0F6D                     	;# 
  1692  0FE4                     	;# 
  1693  0FE5                     	;# 
  1694  0FE6                     	;# 
  1695  0FE7                     	;# 
  1696  0FE8                     	;# 
  1697  0FE9                     	;# 
  1698  0FEA                     	;# 
  1699  0FEB                     	;# 
  1700  0FED                     	;# 
  1701  0FEE                     	;# 
  1702  0FEF                     	;# 
  1703  0000                     	;# 
  1704  0001                     	;# 
  1705  0002                     	;# 
  1706  0003                     	;# 
  1707  0004                     	;# 
  1708  0005                     	;# 
  1709  0006                     	;# 
  1710  0007                     	;# 
  1711  0008                     	;# 
  1712  0009                     	;# 
  1713  000A                     	;# 
  1714  000B                     	;# 
  1715  000C                     	;# 
  1716  000D                     	;# 
  1717  000E                     	;# 
  1718  000F                     	;# 
  1719  0010                     	;# 
  1720  0011                     	;# 
  1721  0012                     	;# 
  1722  0013                     	;# 
  1723  0014                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0017                     	;# 
  1727  0018                     	;# 
  1728  0019                     	;# 
  1729  001A                     	;# 
  1730  001C                     	;# 
  1731  001C                     	;# 
  1732  001D                     	;# 
  1733  001D                     	;# 
  1734  001E                     	;# 
  1735  001F                     	;# 
  1736  008C                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  008E                     	;# 
  1741  008F                     	;# 
  1742  0090                     	;# 
  1743  0090                     	;# 
  1744  0091                     	;# 
  1745  0093                     	;# 
  1746  0094                     	;# 
  1747  0095                     	;# 
  1748  0096                     	;# 
  1749  0097                     	;# 
  1750  0098                     	;# 
  1751  0099                     	;# 
  1752  009A                     	;# 
  1753  009B                     	;# 
  1754  009C                     	;# 
  1755  009D                     	;# 
  1756  009E                     	;# 
  1757  010C                     	;# 
  1758  010D                     	;# 
  1759  010E                     	;# 
  1760  010E                     	;# 
  1761  010F                     	;# 
  1762  0110                     	;# 
  1763  0110                     	;# 
  1764  0111                     	;# 
  1765  0112                     	;# 
  1766  0112                     	;# 
  1767  0113                     	;# 
  1768  0114                     	;# 
  1769  0114                     	;# 
  1770  0115                     	;# 
  1771  0116                     	;# 
  1772  0116                     	;# 
  1773  0117                     	;# 
  1774  0119                     	;# 
  1775  0119                     	;# 
  1776  0119                     	;# 
  1777  011A                     	;# 
  1778  011A                     	;# 
  1779  011A                     	;# 
  1780  011B                     	;# 
  1781  011B                     	;# 
  1782  011B                     	;# 
  1783  011B                     	;# 
  1784  011B                     	;# 
  1785  011C                     	;# 
  1786  011C                     	;# 
  1787  011C                     	;# 
  1788  011D                     	;# 
  1789  011D                     	;# 
  1790  011D                     	;# 
  1791  011E                     	;# 
  1792  011E                     	;# 
  1793  011E                     	;# 
  1794  011F                     	;# 
  1795  011F                     	;# 
  1796  011F                     	;# 
  1797  011F                     	;# 
  1798  011F                     	;# 
  1799  018C                     	;# 
  1800  018D                     	;# 
  1801  018E                     	;# 
  1802  018F                     	;# 
  1803  0190                     	;# 
  1804  0191                     	;# 
  1805  0192                     	;# 
  1806  0196                     	;# 
  1807  0197                     	;# 
  1808  0198                     	;# 
  1809  0199                     	;# 
  1810  019A                     	;# 
  1811  019B                     	;# 
  1812  019C                     	;# 
  1813  020C                     	;# 
  1814  020C                     	;# 
  1815  020D                     	;# 
  1816  020E                     	;# 
  1817  020F                     	;# 
  1818  020F                     	;# 
  1819  0210                     	;# 
  1820  0210                     	;# 
  1821  0211                     	;# 
  1822  0211                     	;# 
  1823  0212                     	;# 
  1824  0212                     	;# 
  1825  0213                     	;# 
  1826  0214                     	;# 
  1827  0215                     	;# 
  1828  0215                     	;# 
  1829  0216                     	;# 
  1830  0216                     	;# 
  1831  0217                     	;# 
  1832  0217                     	;# 
  1833  0218                     	;# 
  1834  0218                     	;# 
  1835  0219                     	;# 
  1836  021A                     	;# 
  1837  021B                     	;# 
  1838  021B                     	;# 
  1839  021C                     	;# 
  1840  021C                     	;# 
  1841  021D                     	;# 
  1842  021D                     	;# 
  1843  021E                     	;# 
  1844  021F                     	;# 
  1845  028C                     	;# 
  1846  028C                     	;# 
  1847  028D                     	;# 
  1848  028D                     	;# 
  1849  028E                     	;# 
  1850  028F                     	;# 
  1851  0290                     	;# 
  1852  0290                     	;# 
  1853  0291                     	;# 
  1854  0292                     	;# 
  1855  0292                     	;# 
  1856  0293                     	;# 
  1857  0293                     	;# 
  1858  0294                     	;# 
  1859  0295                     	;# 
  1860  0296                     	;# 
  1861  0296                     	;# 
  1862  0297                     	;# 
  1863  0298                     	;# 
  1864  0298                     	;# 
  1865  0299                     	;# 
  1866  0299                     	;# 
  1867  029A                     	;# 
  1868  029B                     	;# 
  1869  029C                     	;# 
  1870  029C                     	;# 
  1871  029D                     	;# 
  1872  030C                     	;# 
  1873  030C                     	;# 
  1874  030D                     	;# 
  1875  030E                     	;# 
  1876  030F                     	;# 
  1877  0310                     	;# 
  1878  0310                     	;# 
  1879  0311                     	;# 
  1880  0312                     	;# 
  1881  0313                     	;# 
  1882  0314                     	;# 
  1883  0314                     	;# 
  1884  0315                     	;# 
  1885  0316                     	;# 
  1886  0317                     	;# 
  1887  0318                     	;# 
  1888  0318                     	;# 
  1889  0319                     	;# 
  1890  031A                     	;# 
  1891  031B                     	;# 
  1892  031C                     	;# 
  1893  031C                     	;# 
  1894  031D                     	;# 
  1895  031E                     	;# 
  1896  031F                     	;# 
  1897  038C                     	;# 
  1898  038C                     	;# 
  1899  038D                     	;# 
  1900  038E                     	;# 
  1901  0390                     	;# 
  1902  0390                     	;# 
  1903  0391                     	;# 
  1904  0392                     	;# 
  1905  040C                     	;# 
  1906  040D                     	;# 
  1907  040E                     	;# 
  1908  040F                     	;# 
  1909  0410                     	;# 
  1910  0411                     	;# 
  1911  0416                     	;# 
  1912  0416                     	;# 
  1913  0417                     	;# 
  1914  0418                     	;# 
  1915  0418                     	;# 
  1916  0419                     	;# 
  1917  041A                     	;# 
  1918  041A                     	;# 
  1919  041B                     	;# 
  1920  041C                     	;# 
  1921  041C                     	;# 
  1922  041D                     	;# 
  1923  041E                     	;# 
  1924  041F                     	;# 
  1925  048C                     	;# 
  1926  048C                     	;# 
  1927  048D                     	;# 
  1928  048E                     	;# 
  1929  048F                     	;# 
  1930  048F                     	;# 
  1931  0490                     	;# 
  1932  0491                     	;# 
  1933  0492                     	;# 
  1934  0492                     	;# 
  1935  0493                     	;# 
  1936  0494                     	;# 
  1937  0495                     	;# 
  1938  0495                     	;# 
  1939  0496                     	;# 
  1940  0497                     	;# 
  1941  0498                     	;# 
  1942  0499                     	;# 
  1943  049A                     	;# 
  1944  049B                     	;# 
  1945  049C                     	;# 
  1946  049D                     	;# 
  1947  050C                     	;# 
  1948  050C                     	;# 
  1949  050D                     	;# 
  1950  050E                     	;# 
  1951  050F                     	;# 
  1952  050F                     	;# 
  1953  0510                     	;# 
  1954  0511                     	;# 
  1955  0512                     	;# 
  1956  0512                     	;# 
  1957  0513                     	;# 
  1958  0514                     	;# 
  1959  0515                     	;# 
  1960  0515                     	;# 
  1961  0516                     	;# 
  1962  0517                     	;# 
  1963  0518                     	;# 
  1964  0519                     	;# 
  1965  051A                     	;# 
  1966  051B                     	;# 
  1967  051C                     	;# 
  1968  051D                     	;# 
  1969  058C                     	;# 
  1970  058C                     	;# 
  1971  058D                     	;# 
  1972  058E                     	;# 
  1973  058F                     	;# 
  1974  058F                     	;# 
  1975  0590                     	;# 
  1976  0591                     	;# 
  1977  0592                     	;# 
  1978  0593                     	;# 
  1979  060C                     	;# 
  1980  060D                     	;# 
  1981  060E                     	;# 
  1982  060F                     	;# 
  1983  0610                     	;# 
  1984  0611                     	;# 
  1985  0612                     	;# 
  1986  0613                     	;# 
  1987  0614                     	;# 
  1988  0616                     	;# 
  1989  0617                     	;# 
  1990  0618                     	;# 
  1991  0619                     	;# 
  1992  061A                     	;# 
  1993  061B                     	;# 
  1994  061C                     	;# 
  1995  061D                     	;# 
  1996  061E                     	;# 
  1997  068C                     	;# 
  1998  068D                     	;# 
  1999  068E                     	;# 
  2000  068F                     	;# 
  2001  0690                     	;# 
  2002  0691                     	;# 
  2003  0692                     	;# 
  2004  0693                     	;# 
  2005  0694                     	;# 
  2006  070C                     	;# 
  2007  070D                     	;# 
  2008  070E                     	;# 
  2009  070F                     	;# 
  2010  0710                     	;# 
  2011  0711                     	;# 
  2012  0712                     	;# 
  2013  0713                     	;# 
  2014  0714                     	;# 
  2015  0716                     	;# 
  2016  0717                     	;# 
  2017  0718                     	;# 
  2018  0719                     	;# 
  2019  071A                     	;# 
  2020  071B                     	;# 
  2021  071C                     	;# 
  2022  071D                     	;# 
  2023  071E                     	;# 
  2024  0796                     	;# 
  2025  0797                     	;# 
  2026  0798                     	;# 
  2027  0799                     	;# 
  2028  079A                     	;# 
  2029  079B                     	;# 
  2030  080C                     	;# 
  2031  080D                     	;# 
  2032  080E                     	;# 
  2033  080F                     	;# 
  2034  0810                     	;# 
  2035  0811                     	;# 
  2036  0812                     	;# 
  2037  0813                     	;# 
  2038  0814                     	;# 
  2039  081A                     	;# 
  2040  081B                     	;# 
  2041  081C                     	;# 
  2042  081D                     	;# 
  2043  081E                     	;# 
  2044  081F                     	;# 
  2045  088C                     	;# 
  2046  088D                     	;# 
  2047  088E                     	;# 
  2048  088F                     	;# 
  2049  0890                     	;# 
  2050  0891                     	;# 
  2051  0892                     	;# 
  2052  0893                     	;# 
  2053  0895                     	;# 
  2054  0896                     	;# 
  2055  0897                     	;# 
  2056  0898                     	;# 
  2057  0899                     	;# 
  2058  089A                     	;# 
  2059  089B                     	;# 
  2060  090C                     	;# 
  2061  090E                     	;# 
  2062  090F                     	;# 
  2063  091F                     	;# 
  2064  098F                     	;# 
  2065  098F                     	;# 
  2066  0990                     	;# 
  2067  0991                     	;# 
  2068  0992                     	;# 
  2069  0993                     	;# 
  2070  0994                     	;# 
  2071  0995                     	;# 
  2072  0996                     	;# 
  2073  0997                     	;# 
  2074  0E0F                     	;# 
  2075  0E10                     	;# 
  2076  0E11                     	;# 
  2077  0E12                     	;# 
  2078  0E13                     	;# 
  2079  0E14                     	;# 
  2080  0E15                     	;# 
  2081  0E16                     	;# 
  2082  0E17                     	;# 
  2083  0E18                     	;# 
  2084  0E19                     	;# 
  2085  0E1A                     	;# 
  2086  0E1B                     	;# 
  2087  0E1C                     	;# 
  2088  0E1D                     	;# 
  2089  0E1E                     	;# 
  2090  0E1F                     	;# 
  2091  0E20                     	;# 
  2092  0E21                     	;# 
  2093  0E22                     	;# 
  2094  0E23                     	;# 
  2095  0E24                     	;# 
  2096  0E25                     	;# 
  2097  0E26                     	;# 
  2098  0E27                     	;# 
  2099  0E28                     	;# 
  2100  0E29                     	;# 
  2101  0E2A                     	;# 
  2102  0E2B                     	;# 
  2103  0E2C                     	;# 
  2104  0E2D                     	;# 
  2105  0E2E                     	;# 
  2106  0E2F                     	;# 
  2107  0E30                     	;# 
  2108  0E31                     	;# 
  2109  0E32                     	;# 
  2110  0E33                     	;# 
  2111  0E34                     	;# 
  2112  0E35                     	;# 
  2113  0E36                     	;# 
  2114  0E37                     	;# 
  2115  0E8F                     	;# 
  2116  0E90                     	;# 
  2117  0E91                     	;# 
  2118  0E92                     	;# 
  2119  0E93                     	;# 
  2120  0E94                     	;# 
  2121  0E95                     	;# 
  2122  0E96                     	;# 
  2123  0E97                     	;# 
  2124  0E9C                     	;# 
  2125  0E9D                     	;# 
  2126  0E9E                     	;# 
  2127  0EA1                     	;# 
  2128  0EA2                     	;# 
  2129  0EA3                     	;# 
  2130  0EA4                     	;# 
  2131  0EA5                     	;# 
  2132  0EA9                     	;# 
  2133  0EAA                     	;# 
  2134  0EAB                     	;# 
  2135  0EAC                     	;# 
  2136  0EB1                     	;# 
  2137  0EB2                     	;# 
  2138  0EB3                     	;# 
  2139  0EB8                     	;# 
  2140  0EB9                     	;# 
  2141  0EBA                     	;# 
  2142  0EBB                     	;# 
  2143  0EBC                     	;# 
  2144  0EBD                     	;# 
  2145  0EBE                     	;# 
  2146  0EC3                     	;# 
  2147  0EC5                     	;# 
  2148  0EC6                     	;# 
  2149  0EC7                     	;# 
  2150  0EC8                     	;# 
  2151  0EC9                     	;# 
  2152  0ECA                     	;# 
  2153  0ECB                     	;# 
  2154  0ECC                     	;# 
  2155  0F10                     	;# 
  2156  0F11                     	;# 
  2157  0F12                     	;# 
  2158  0F13                     	;# 
  2159  0F14                     	;# 
  2160  0F15                     	;# 
  2161  0F16                     	;# 
  2162  0F17                     	;# 
  2163  0F18                     	;# 
  2164  0F19                     	;# 
  2165  0F1A                     	;# 
  2166  0F1B                     	;# 
  2167  0F1C                     	;# 
  2168  0F1D                     	;# 
  2169  0F1E                     	;# 
  2170  0F1F                     	;# 
  2171  0F20                     	;# 
  2172  0F21                     	;# 
  2173  0F22                     	;# 
  2174  0F23                     	;# 
  2175  0F24                     	;# 
  2176  0F25                     	;# 
  2177  0F26                     	;# 
  2178  0F27                     	;# 
  2179  0F28                     	;# 
  2180  0F29                     	;# 
  2181  0F2A                     	;# 
  2182  0F2B                     	;# 
  2183  0F2C                     	;# 
  2184  0F2D                     	;# 
  2185  0F2E                     	;# 
  2186  0F2F                     	;# 
  2187  0F30                     	;# 
  2188  0F31                     	;# 
  2189  0F32                     	;# 
  2190  0F38                     	;# 
  2191  0F39                     	;# 
  2192  0F3A                     	;# 
  2193  0F3B                     	;# 
  2194  0F3C                     	;# 
  2195  0F3D                     	;# 
  2196  0F3E                     	;# 
  2197  0F3F                     	;# 
  2198  0F40                     	;# 
  2199  0F41                     	;# 
  2200  0F43                     	;# 
  2201  0F44                     	;# 
  2202  0F45                     	;# 
  2203  0F46                     	;# 
  2204  0F47                     	;# 
  2205  0F48                     	;# 
  2206  0F49                     	;# 
  2207  0F4A                     	;# 
  2208  0F4B                     	;# 
  2209  0F4C                     	;# 
  2210  0F4E                     	;# 
  2211  0F4F                     	;# 
  2212  0F50                     	;# 
  2213  0F51                     	;# 
  2214  0F52                     	;# 
  2215  0F53                     	;# 
  2216  0F54                     	;# 
  2217  0F55                     	;# 
  2218  0F56                     	;# 
  2219  0F57                     	;# 
  2220  0F59                     	;# 
  2221  0F5A                     	;# 
  2222  0F5B                     	;# 
  2223  0F5C                     	;# 
  2224  0F5D                     	;# 
  2225  0F61                     	;# 
  2226  0F62                     	;# 
  2227  0F64                     	;# 
  2228  0F65                     	;# 
  2229  0F66                     	;# 
  2230  0F67                     	;# 
  2231  0F68                     	;# 
  2232  0F69                     	;# 
  2233  0F6A                     	;# 
  2234  0F6B                     	;# 
  2235  0F6C                     	;# 
  2236  0F6D                     	;# 
  2237  0FE4                     	;# 
  2238  0FE5                     	;# 
  2239  0FE6                     	;# 
  2240  0FE7                     	;# 
  2241  0FE8                     	;# 
  2242  0FE9                     	;# 
  2243  0FEA                     	;# 
  2244  0FEB                     	;# 
  2245  0FED                     	;# 
  2246  0FEE                     	;# 
  2247  0FEF                     	;# 
  2248  0000                     	;# 
  2249  0001                     	;# 
  2250  0002                     	;# 
  2251  0003                     	;# 
  2252  0004                     	;# 
  2253  0005                     	;# 
  2254  0006                     	;# 
  2255  0007                     	;# 
  2256  0008                     	;# 
  2257  0009                     	;# 
  2258  000A                     	;# 
  2259  000B                     	;# 
  2260  000C                     	;# 
  2261  000D                     	;# 
  2262  000E                     	;# 
  2263  000F                     	;# 
  2264  0010                     	;# 
  2265  0011                     	;# 
  2266  0012                     	;# 
  2267  0013                     	;# 
  2268  0014                     	;# 
  2269  0015                     	;# 
  2270  0016                     	;# 
  2271  0017                     	;# 
  2272  0018                     	;# 
  2273  0019                     	;# 
  2274  001A                     	;# 
  2275  001C                     	;# 
  2276  001C                     	;# 
  2277  001D                     	;# 
  2278  001D                     	;# 
  2279  001E                     	;# 
  2280  001F                     	;# 
  2281  008C                     	;# 
  2282  008C                     	;# 
  2283  008D                     	;# 
  2284  008E                     	;# 
  2285  008E                     	;# 
  2286  008F                     	;# 
  2287  0090                     	;# 
  2288  0090                     	;# 
  2289  0091                     	;# 
  2290  0093                     	;# 
  2291  0094                     	;# 
  2292  0095                     	;# 
  2293  0096                     	;# 
  2294  0097                     	;# 
  2295  0098                     	;# 
  2296  0099                     	;# 
  2297  009A                     	;# 
  2298  009B                     	;# 
  2299  009C                     	;# 
  2300  009D                     	;# 
  2301  009E                     	;# 
  2302  010C                     	;# 
  2303  010D                     	;# 
  2304  010E                     	;# 
  2305  010E                     	;# 
  2306  010F                     	;# 
  2307  0110                     	;# 
  2308  0110                     	;# 
  2309  0111                     	;# 
  2310  0112                     	;# 
  2311  0112                     	;# 
  2312  0113                     	;# 
  2313  0114                     	;# 
  2314  0114                     	;# 
  2315  0115                     	;# 
  2316  0116                     	;# 
  2317  0116                     	;# 
  2318  0117                     	;# 
  2319  0119                     	;# 
  2320  0119                     	;# 
  2321  0119                     	;# 
  2322  011A                     	;# 
  2323  011A                     	;# 
  2324  011A                     	;# 
  2325  011B                     	;# 
  2326  011B                     	;# 
  2327  011B                     	;# 
  2328  011B                     	;# 
  2329  011B                     	;# 
  2330  011C                     	;# 
  2331  011C                     	;# 
  2332  011C                     	;# 
  2333  011D                     	;# 
  2334  011D                     	;# 
  2335  011D                     	;# 
  2336  011E                     	;# 
  2337  011E                     	;# 
  2338  011E                     	;# 
  2339  011F                     	;# 
  2340  011F                     	;# 
  2341  011F                     	;# 
  2342  011F                     	;# 
  2343  011F                     	;# 
  2344  018C                     	;# 
  2345  018D                     	;# 
  2346  018E                     	;# 
  2347  018F                     	;# 
  2348  0190                     	;# 
  2349  0191                     	;# 
  2350  0192                     	;# 
  2351  0196                     	;# 
  2352  0197                     	;# 
  2353  0198                     	;# 
  2354  0199                     	;# 
  2355  019A                     	;# 
  2356  019B                     	;# 
  2357  019C                     	;# 
  2358  020C                     	;# 
  2359  020C                     	;# 
  2360  020D                     	;# 
  2361  020E                     	;# 
  2362  020F                     	;# 
  2363  020F                     	;# 
  2364  0210                     	;# 
  2365  0210                     	;# 
  2366  0211                     	;# 
  2367  0211                     	;# 
  2368  0212                     	;# 
  2369  0212                     	;# 
  2370  0213                     	;# 
  2371  0214                     	;# 
  2372  0215                     	;# 
  2373  0215                     	;# 
  2374  0216                     	;# 
  2375  0216                     	;# 
  2376  0217                     	;# 
  2377  0217                     	;# 
  2378  0218                     	;# 
  2379  0218                     	;# 
  2380  0219                     	;# 
  2381  021A                     	;# 
  2382  021B                     	;# 
  2383  021B                     	;# 
  2384  021C                     	;# 
  2385  021C                     	;# 
  2386  021D                     	;# 
  2387  021D                     	;# 
  2388  021E                     	;# 
  2389  021F                     	;# 
  2390  028C                     	;# 
  2391  028C                     	;# 
  2392  028D                     	;# 
  2393  028D                     	;# 
  2394  028E                     	;# 
  2395  028F                     	;# 
  2396  0290                     	;# 
  2397  0290                     	;# 
  2398  0291                     	;# 
  2399  0292                     	;# 
  2400  0292                     	;# 
  2401  0293                     	;# 
  2402  0293                     	;# 
  2403  0294                     	;# 
  2404  0295                     	;# 
  2405  0296                     	;# 
  2406  0296                     	;# 
  2407  0297                     	;# 
  2408  0298                     	;# 
  2409  0298                     	;# 
  2410  0299                     	;# 
  2411  0299                     	;# 
  2412  029A                     	;# 
  2413  029B                     	;# 
  2414  029C                     	;# 
  2415  029C                     	;# 
  2416  029D                     	;# 
  2417  030C                     	;# 
  2418  030C                     	;# 
  2419  030D                     	;# 
  2420  030E                     	;# 
  2421  030F                     	;# 
  2422  0310                     	;# 
  2423  0310                     	;# 
  2424  0311                     	;# 
  2425  0312                     	;# 
  2426  0313                     	;# 
  2427  0314                     	;# 
  2428  0314                     	;# 
  2429  0315                     	;# 
  2430  0316                     	;# 
  2431  0317                     	;# 
  2432  0318                     	;# 
  2433  0318                     	;# 
  2434  0319                     	;# 
  2435  031A                     	;# 
  2436  031B                     	;# 
  2437  031C                     	;# 
  2438  031C                     	;# 
  2439  031D                     	;# 
  2440  031E                     	;# 
  2441  031F                     	;# 
  2442  038C                     	;# 
  2443  038C                     	;# 
  2444  038D                     	;# 
  2445  038E                     	;# 
  2446  0390                     	;# 
  2447  0390                     	;# 
  2448  0391                     	;# 
  2449  0392                     	;# 
  2450  040C                     	;# 
  2451  040D                     	;# 
  2452  040E                     	;# 
  2453  040F                     	;# 
  2454  0410                     	;# 
  2455  0411                     	;# 
  2456  0416                     	;# 
  2457  0416                     	;# 
  2458  0417                     	;# 
  2459  0418                     	;# 
  2460  0418                     	;# 
  2461  0419                     	;# 
  2462  041A                     	;# 
  2463  041A                     	;# 
  2464  041B                     	;# 
  2465  041C                     	;# 
  2466  041C                     	;# 
  2467  041D                     	;# 
  2468  041E                     	;# 
  2469  041F                     	;# 
  2470  048C                     	;# 
  2471  048C                     	;# 
  2472  048D                     	;# 
  2473  048E                     	;# 
  2474  048F                     	;# 
  2475  048F                     	;# 
  2476  0490                     	;# 
  2477  0491                     	;# 
  2478  0492                     	;# 
  2479  0492                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0495                     	;# 
  2483  0495                     	;# 
  2484  0496                     	;# 
  2485  0497                     	;# 
  2486  0498                     	;# 
  2487  0499                     	;# 
  2488  049A                     	;# 
  2489  049B                     	;# 
  2490  049C                     	;# 
  2491  049D                     	;# 
  2492  050C                     	;# 
  2493  050C                     	;# 
  2494  050D                     	;# 
  2495  050E                     	;# 
  2496  050F                     	;# 
  2497  050F                     	;# 
  2498  0510                     	;# 
  2499  0511                     	;# 
  2500  0512                     	;# 
  2501  0512                     	;# 
  2502  0513                     	;# 
  2503  0514                     	;# 
  2504  0515                     	;# 
  2505  0515                     	;# 
  2506  0516                     	;# 
  2507  0517                     	;# 
  2508  0518                     	;# 
  2509  0519                     	;# 
  2510  051A                     	;# 
  2511  051B                     	;# 
  2512  051C                     	;# 
  2513  051D                     	;# 
  2514  058C                     	;# 
  2515  058C                     	;# 
  2516  058D                     	;# 
  2517  058E                     	;# 
  2518  058F                     	;# 
  2519  058F                     	;# 
  2520  0590                     	;# 
  2521  0591                     	;# 
  2522  0592                     	;# 
  2523  0593                     	;# 
  2524  060C                     	;# 
  2525  060D                     	;# 
  2526  060E                     	;# 
  2527  060F                     	;# 
  2528  0610                     	;# 
  2529  0611                     	;# 
  2530  0612                     	;# 
  2531  0613                     	;# 
  2532  0614                     	;# 
  2533  0616                     	;# 
  2534  0617                     	;# 
  2535  0618                     	;# 
  2536  0619                     	;# 
  2537  061A                     	;# 
  2538  061B                     	;# 
  2539  061C                     	;# 
  2540  061D                     	;# 
  2541  061E                     	;# 
  2542  068C                     	;# 
  2543  068D                     	;# 
  2544  068E                     	;# 
  2545  068F                     	;# 
  2546  0690                     	;# 
  2547  0691                     	;# 
  2548  0692                     	;# 
  2549  0693                     	;# 
  2550  0694                     	;# 
  2551  070C                     	;# 
  2552  070D                     	;# 
  2553  070E                     	;# 
  2554  070F                     	;# 
  2555  0710                     	;# 
  2556  0711                     	;# 
  2557  0712                     	;# 
  2558  0713                     	;# 
  2559  0714                     	;# 
  2560  0716                     	;# 
  2561  0717                     	;# 
  2562  0718                     	;# 
  2563  0719                     	;# 
  2564  071A                     	;# 
  2565  071B                     	;# 
  2566  071C                     	;# 
  2567  071D                     	;# 
  2568  071E                     	;# 
  2569  0796                     	;# 
  2570  0797                     	;# 
  2571  0798                     	;# 
  2572  0799                     	;# 
  2573  079A                     	;# 
  2574  079B                     	;# 
  2575  080C                     	;# 
  2576  080D                     	;# 
  2577  080E                     	;# 
  2578  080F                     	;# 
  2579  0810                     	;# 
  2580  0811                     	;# 
  2581  0812                     	;# 
  2582  0813                     	;# 
  2583  0814                     	;# 
  2584  081A                     	;# 
  2585  081B                     	;# 
  2586  081C                     	;# 
  2587  081D                     	;# 
  2588  081E                     	;# 
  2589  081F                     	;# 
  2590  088C                     	;# 
  2591  088D                     	;# 
  2592  088E                     	;# 
  2593  088F                     	;# 
  2594  0890                     	;# 
  2595  0891                     	;# 
  2596  0892                     	;# 
  2597  0893                     	;# 
  2598  0895                     	;# 
  2599  0896                     	;# 
  2600  0897                     	;# 
  2601  0898                     	;# 
  2602  0899                     	;# 
  2603  089A                     	;# 
  2604  089B                     	;# 
  2605  090C                     	;# 
  2606  090E                     	;# 
  2607  090F                     	;# 
  2608  091F                     	;# 
  2609  098F                     	;# 
  2610  098F                     	;# 
  2611  0990                     	;# 
  2612  0991                     	;# 
  2613  0992                     	;# 
  2614  0993                     	;# 
  2615  0994                     	;# 
  2616  0995                     	;# 
  2617  0996                     	;# 
  2618  0997                     	;# 
  2619  0E0F                     	;# 
  2620  0E10                     	;# 
  2621  0E11                     	;# 
  2622  0E12                     	;# 
  2623  0E13                     	;# 
  2624  0E14                     	;# 
  2625  0E15                     	;# 
  2626  0E16                     	;# 
  2627  0E17                     	;# 
  2628  0E18                     	;# 
  2629  0E19                     	;# 
  2630  0E1A                     	;# 
  2631  0E1B                     	;# 
  2632  0E1C                     	;# 
  2633  0E1D                     	;# 
  2634  0E1E                     	;# 
  2635  0E1F                     	;# 
  2636  0E20                     	;# 
  2637  0E21                     	;# 
  2638  0E22                     	;# 
  2639  0E23                     	;# 
  2640  0E24                     	;# 
  2641  0E25                     	;# 
  2642  0E26                     	;# 
  2643  0E27                     	;# 
  2644  0E28                     	;# 
  2645  0E29                     	;# 
  2646  0E2A                     	;# 
  2647  0E2B                     	;# 
  2648  0E2C                     	;# 
  2649  0E2D                     	;# 
  2650  0E2E                     	;# 
  2651  0E2F                     	;# 
  2652  0E30                     	;# 
  2653  0E31                     	;# 
  2654  0E32                     	;# 
  2655  0E33                     	;# 
  2656  0E34                     	;# 
  2657  0E35                     	;# 
  2658  0E36                     	;# 
  2659  0E37                     	;# 
  2660  0E8F                     	;# 
  2661  0E90                     	;# 
  2662  0E91                     	;# 
  2663  0E92                     	;# 
  2664  0E93                     	;# 
  2665  0E94                     	;# 
  2666  0E95                     	;# 
  2667  0E96                     	;# 
  2668  0E97                     	;# 
  2669  0E9C                     	;# 
  2670  0E9D                     	;# 
  2671  0E9E                     	;# 
  2672  0EA1                     	;# 
  2673  0EA2                     	;# 
  2674  0EA3                     	;# 
  2675  0EA4                     	;# 
  2676  0EA5                     	;# 
  2677  0EA9                     	;# 
  2678  0EAA                     	;# 
  2679  0EAB                     	;# 
  2680  0EAC                     	;# 
  2681  0EB1                     	;# 
  2682  0EB2                     	;# 
  2683  0EB3                     	;# 
  2684  0EB8                     	;# 
  2685  0EB9                     	;# 
  2686  0EBA                     	;# 
  2687  0EBB                     	;# 
  2688  0EBC                     	;# 
  2689  0EBD                     	;# 
  2690  0EBE                     	;# 
  2691  0EC3                     	;# 
  2692  0EC5                     	;# 
  2693  0EC6                     	;# 
  2694  0EC7                     	;# 
  2695  0EC8                     	;# 
  2696  0EC9                     	;# 
  2697  0ECA                     	;# 
  2698  0ECB                     	;# 
  2699  0ECC                     	;# 
  2700  0F10                     	;# 
  2701  0F11                     	;# 
  2702  0F12                     	;# 
  2703  0F13                     	;# 
  2704  0F14                     	;# 
  2705  0F15                     	;# 
  2706  0F16                     	;# 
  2707  0F17                     	;# 
  2708  0F18                     	;# 
  2709  0F19                     	;# 
  2710  0F1A                     	;# 
  2711  0F1B                     	;# 
  2712  0F1C                     	;# 
  2713  0F1D                     	;# 
  2714  0F1E                     	;# 
  2715  0F1F                     	;# 
  2716  0F20                     	;# 
  2717  0F21                     	;# 
  2718  0F22                     	;# 
  2719  0F23                     	;# 
  2720  0F24                     	;# 
  2721  0F25                     	;# 
  2722  0F26                     	;# 
  2723  0F27                     	;# 
  2724  0F28                     	;# 
  2725  0F29                     	;# 
  2726  0F2A                     	;# 
  2727  0F2B                     	;# 
  2728  0F2C                     	;# 
  2729  0F2D                     	;# 
  2730  0F2E                     	;# 
  2731  0F2F                     	;# 
  2732  0F30                     	;# 
  2733  0F31                     	;# 
  2734  0F32                     	;# 
  2735  0F38                     	;# 
  2736  0F39                     	;# 
  2737  0F3A                     	;# 
  2738  0F3B                     	;# 
  2739  0F3C                     	;# 
  2740  0F3D                     	;# 
  2741  0F3E                     	;# 
  2742  0F3F                     	;# 
  2743  0F40                     	;# 
  2744  0F41                     	;# 
  2745  0F43                     	;# 
  2746  0F44                     	;# 
  2747  0F45                     	;# 
  2748  0F46                     	;# 
  2749  0F47                     	;# 
  2750  0F48                     	;# 
  2751  0F49                     	;# 
  2752  0F4A                     	;# 
  2753  0F4B                     	;# 
  2754  0F4C                     	;# 
  2755  0F4E                     	;# 
  2756  0F4F                     	;# 
  2757  0F50                     	;# 
  2758  0F51                     	;# 
  2759  0F52                     	;# 
  2760  0F53                     	;# 
  2761  0F54                     	;# 
  2762  0F55                     	;# 
  2763  0F56                     	;# 
  2764  0F57                     	;# 
  2765  0F59                     	;# 
  2766  0F5A                     	;# 
  2767  0F5B                     	;# 
  2768  0F5C                     	;# 
  2769  0F5D                     	;# 
  2770  0F61                     	;# 
  2771  0F62                     	;# 
  2772  0F64                     	;# 
  2773  0F65                     	;# 
  2774  0F66                     	;# 
  2775  0F67                     	;# 
  2776  0F68                     	;# 
  2777  0F69                     	;# 
  2778  0F6A                     	;# 
  2779  0F6B                     	;# 
  2780  0F6C                     	;# 
  2781  0F6D                     	;# 
  2782  0FE4                     	;# 
  2783  0FE5                     	;# 
  2784  0FE6                     	;# 
  2785  0FE7                     	;# 
  2786  0FE8                     	;# 
  2787  0FE9                     	;# 
  2788  0FEA                     	;# 
  2789  0FEB                     	;# 
  2790  0FED                     	;# 
  2791  0FEE                     	;# 
  2792  0FEF                     	;# 
  2793                           
  2794                           	psect	idataCOMMON
  2795  049D                     __pidataCOMMON:	
  2796                           
  2797                           ;initializer for _analogMode
  2798  049D  3401               	retlw	1
  2799                           
  2800                           ;initializer for _digitalStateFirst
  2801  049E  34FF               	retlw	255
  2802                           
  2803                           	psect	idataBANK0
  2804  043E                     __pidataBANK0:	
  2805                           
  2806                           ;initializer for _responseLength
  2807  043E  3409               	retlw	9
  2808                           
  2809                           ;initializer for _analogMax
  2810  043F  34FF               	retlw	255
  2811                           
  2812                           ;initializer for _debounceLoops
  2813  0440  3403               	retlw	3
  2814                           
  2815                           ;initializer for _lyData
  2816  0441  34FE               	retlw	254
  2817                           
  2818                           ;initializer for _lxData
  2819  0442  34FE               	retlw	254
  2820                           
  2821                           ;initializer for _ryData
  2822  0443  34FE               	retlw	254
  2823                           
  2824                           ;initializer for _rxData
  2825  0444  34FE               	retlw	254
  2826                           
  2827                           ;initializer for _digitalStateSecond
  2828  0445  34FF               	retlw	255
  2829                           
  2830                           ;initializer for _response
  2831  0446  349E               	retlw	158
  2832  0447  345A               	retlw	90
  2833  0448  3400               	retlw	0
  2834  0449  3400               	retlw	0
  2835  044A  3400               	retlw	0
  2836  044B  3400               	retlw	0
  2837  044C  3400               	retlw	0
  2838  044D  3400               	retlw	0
  2839  044E  3400               	retlw	0
  2840  044F  3400               	retlw	0
  2841  0450  3400               	retlw	0
  2842  0451  3400               	retlw	0
  2843  0452  3400               	retlw	0
  2844  0453  3400               	retlw	0
  2845  0454  3400               	retlw	0
  2846  0455  3400               	retlw	0
  2847  0456  3400               	retlw	0
  2848  0457  3400               	retlw	0
  2849  0458  3400               	retlw	0
  2850  0459  3400               	retlw	0
  2851  000B                     _INTCONbits	set	11
  2852  0011                     _TRISAbits	set	17
  2853  0015                     _TRISE	set	21
  2854  0014                     _TRISD	set	20
  2855  0013                     _TRISC	set	19
  2856  0012                     _TRISB	set	18
  2857  0011                     _TRISA	set	17
  2858  0014                     _TRISDbits	set	20
  2859  0013                     _TRISCbits	set	19
  2860  006D                     _RB5	set	109
  2861  006C                     _RB4	set	108
  2862  0061                     _RA1	set	97
  2863  0062                     _RA2	set	98
  2864  0063                     _RA3	set	99
  2865  0060                     _RA0	set	96
  2866  006E                     _RB6	set	110
  2867  0072                     _RC2	set	114
  2868  0078                     _RD0	set	120
  2869  0069                     _RB1	set	105
  2870  0068                     _RB0	set	104
  2871  0066                     _RA6	set	102
  2872  0067                     _RA7	set	103
  2873  0065                     _RA5	set	101
  2874  006A                     _RB2	set	106
  2875  006B                     _RB3	set	107
  2876  006F                     _RB7	set	111
  2877  0064                     _RA4	set	100
  2878  007C                     _RD4	set	124
  2879  0098                     _ADCLK	set	152
  2880  009A                     _ADREF	set	154
  2881  0095                     _ADCON2	set	149
  2882  0094                     _ADCON1	set	148
  2883  0093                     _ADCON0	set	147
  2884  008C                     _ADRESL	set	140
  2885  008D                     _ADRESH	set	141
  2886  0093                     _ADCON0bits	set	147
  2887  009D                     _ADACQ	set	157
  2888  009C                     _ADPRE	set	156
  2889  009E                     _ADPCH	set	158
  2890  018F                     _SSP1STATbits	set	399
  2891  0190                     _SSP1CON1	set	400
  2892  018F                     _SSP1STAT	set	399
  2893  018C                     _SSP1BUF	set	396
  2894  028D                     _PR2	set	653
  2895  028E                     _T2CONbits	set	654
  2896  0390                     _PWM7DCL	set	912
  2897  0391                     _PWM7DCH	set	913
  2898  038C                     _PWM6DCL	set	908
  2899  038D                     _PWM6DCH	set	909
  2900  0392                     _PWM7CONbits	set	914
  2901  038E                     _PWM6CONbits	set	910
  2902  38C8                     _SSP1IE	set	14536
  2903  3878                     _SSP1IF	set	14456
  2904  0E8F                     _PPSLOCK	set	3727
  2905  0F25                     _RC5PPS	set	3877
  2906  0F65                     _WPUE	set	3941
  2907  0F5A                     _WPUD	set	3930
  2908  0F4F                     _WPUC	set	3919
  2909  0F44                     _WPUB	set	3908
  2910  0F39                     _WPUA	set	3897
  2911  0F64                     _ANSELE	set	3940
  2912  0F59                     _ANSELD	set	3929
  2913  0F4E                     _ANSELC	set	3918
  2914  0F43                     _ANSELB	set	3907
  2915  0F38                     _ANSELA	set	3896
  2916  0F29                     _RD1PPS	set	3881
  2917  0F23                     _RC3PPS	set	3875
  2918                           
  2919                           ; #config settings
  2920  0000                     
  2921                           	psect	cinit
  2922  0154                     start_initialization:	
  2923  0154                     __initialization:	
  2924                           
  2925                           ; Initialize objects allocated to COMMON
  2926  0154  3184  249D  3181   	fcall	__pidataCOMMON	;fetch initializer
  2927  0157  00F8               	movwf	__pdataCOMMON& (0+127)
  2928  0158  3184  249E  3181   	fcall	__pidataCOMMON+1	;fetch initializer
  2929  015B  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  2930                           
  2931                           ; Initialize objects allocated to BANK0
  2932  015C  303E               	movlw	low __pidataBANK0
  2933  015D  0084               	movwf	4
  2934  015E  3084               	movlw	(high __pidataBANK0)| (0+128)
  2935  015F  0085               	movwf	5
  2936  0160  3042               	movlw	low __pdataBANK0
  2937  0161  0086               	movwf	6
  2938  0162  3000               	movlw	high __pdataBANK0
  2939  0163  0087               	movwf	7
  2940  0164  301C               	movlw	28
  2941  0165  3184  2483  3181   	fcall	init_ram
  2942                           
  2943                           ; Clear objects allocated to COMMON
  2944  0168  01F5               	clrf	__pbssCOMMON& (0+127)
  2945  0169  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  2946  016A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  2947                           
  2948                           ; Clear objects allocated to BANK0
  2949  016B  3020               	movlw	low __pbssBANK0
  2950  016C  0084               	movwf	4
  2951  016D  3000               	movlw	high __pbssBANK0
  2952  016E  0085               	movwf	5
  2953  016F  3022               	movlw	34
  2954  0170  3184  2489  3181   	fcall	clear_ram0
  2955                           
  2956                           ; Clear objects allocated to BANK1
  2957  0173  30A0               	movlw	low __pbssBANK1
  2958  0174  0084               	movwf	4
  2959  0175  3000               	movlw	high __pbssBANK1
  2960  0176  0085               	movwf	5
  2961  0177  3020               	movlw	32
  2962  0178  3184  2489         	fcall	clear_ram0
  2963  017A                     end_of_initialization:	
  2964                           ;End of C runtime variable initialization code
  2965                           
  2966  017A                     __end_of__initialization:	
  2967  017A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2968  017B  0020               	movlb	0
  2969  017C  3183  2B64         	ljmp	_main	;jump to C main() function
  2970                           
  2971                           	psect	bssCOMMON
  2972  0075                     __pbssCOMMON:	
  2973  0075                     _previousCmd:	
  2974  0075                     	ds	1
  2975  0076                     _cmdCounter:	
  2976  0076                     	ds	1
  2977  0077                     _index:	
  2978  0077                     	ds	1
  2979                           
  2980                           	psect	dataCOMMON
  2981  0078                     __pdataCOMMON:	
  2982  0078                     _analogMode:	
  2983  0078                     	ds	1
  2984  0079                     _digitalStateFirst:	
  2985  0079                     	ds	1
  2986                           
  2987                           	psect	bssBANK0
  2988  0020                     __pbssBANK0:	
  2989  0020                     _DigitalControllerByte2:	
  2990  0020                     	ds	8
  2991  0028                     _DigitalControllerByte1:	
  2992  0028                     	ds	8
  2993  0030                     _analogStateSecond:	
  2994  0030                     	ds	8
  2995  0038                     _analogStateFirst:	
  2996  0038                     	ds	8
  2997  0040                     _escapeMode:	
  2998  0040                     	ds	1
  2999  0041                     _analogMin:	
  3000  0041                     	ds	1
  3001                           
  3002                           	psect	dataBANK0
  3003  0042                     __pdataBANK0:	
  3004  0042                     _responseLength:	
  3005  0042                     	ds	1
  3006  0043                     _analogMax:	
  3007  0043                     	ds	1
  3008  0044                     _debounceLoops:	
  3009  0044                     	ds	1
  3010  0045                     _lyData:	
  3011  0045                     	ds	1
  3012  0046                     _lxData:	
  3013  0046                     	ds	1
  3014  0047                     _ryData:	
  3015  0047                     	ds	1
  3016  0048                     _rxData:	
  3017  0048                     	ds	1
  3018  0049                     _digitalStateSecond:	
  3019  0049                     	ds	1
  3020  004A                     _response:	
  3021  004A                     	ds	20
  3022                           
  3023                           	psect	bssBANK1
  3024  00A0                     __pbssBANK1:	
  3025  00A0                     _IndexDigitalByte2:	
  3026  00A0                     	ds	8
  3027  00A8                     _IndexDigitalByte1:	
  3028  00A8                     	ds	8
  3029  00B0                     _PreviousDigitalByte2:	
  3030  00B0                     	ds	8
  3031  00B8                     _PreviousDigitalByte1:	
  3032  00B8                     	ds	8
  3033                           
  3034                           	psect	inittext
  3035  0483                     init_ram:	
  3036  0483  00FE               	movwf	126
  3037  0484                     initloop:	
  3038  0484  0012               	moviw fsr0++
  3039  0485  001E               	movwi fsr1++
  3040  0486  0BFE               	decfsz	126,f
  3041  0487  2C84               	goto	initloop
  3042  0488  3400               	retlw	0
  3043                           
  3044                           	psect	clrtext
  3045  0489                     clear_ram0:	
  3046                           ;	Called with FSR0 containing the base address, and
  3047                           ;	WREG with the size to clear
  3048                           
  3049  0489  0064               	clrwdt	;clear the watchdog before getting into this loop
  3050  048A                     clrloop0:	
  3051  048A  0180               	clrf	0	;clear RAM location pointed to by FSR
  3052  048B  3101               	addfsr 0,1
  3053  048C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3054  048D  2C8A               	goto	clrloop0	;have we reached the end yet?
  3055  048E  3400               	retlw	0	;all done for this memory range, return
  3056                           
  3057                           	psect	cstackCOMMON
  3058  0070                     __pcstackCOMMON:	
  3059  0070                     ?_spiRead:	
  3060  0070                     ??_spiRead:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0070                     ?_spiWrite:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0070                     ??_spiWrite:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0070                     ?_picInit:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0070                     ?_adcInit:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0070                     ?_readController:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0070                     ?_readControllerAnalog:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0070                     ?_pollController:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0070                     ??_pollController:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0070                     ?_PS2Command:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0070                     ?_configureController:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0070                     ?_main:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0070                     ?_reversebyte:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0070                     ?_ppsUnlock:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0070                     ?_ppsLock:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0070                     ?_spiReceiveWait:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0070                     ??_spiReceiveWait:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0070                     spiWrite@dat:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114                           
  3115                           ; 1 bytes @ 0x0
  3116  0070                     	ds	1
  3117  0071                     pollController@response:	
  3118                           
  3119                           ; 1 bytes @ 0x1
  3120  0071                     	ds	1
  3121  0072                     ??_PS2Command:	
  3122                           
  3123                           ; 1 bytes @ 0x2
  3124  0072                     	ds	2
  3125  0074                     PS2Command@cmd:	
  3126                           
  3127                           ; 1 bytes @ 0x4
  3128  0074                     	ds	1
  3129                           
  3130                           	psect	cstackBANK0
  3131  005E                     __pcstackBANK0:	
  3132  005E                     ??_adcInit:	
  3133  005E                     ??_readController:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  005E                     ?_spiInit:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  005E                     ??_configureController:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142  005E                     ??_reversebyte:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  005E                     ??_ppsUnlock:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  005E                     ??_ppsLock:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  005E                     ?_readADC:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  005E                     spiInit@sDataSample:	
  3155                           ; 2 bytes @ 0x0
  3156                           
  3157  005E                     readADC@channel:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160                           
  3161                           ; 2 bytes @ 0x0
  3162  005E                     	ds	1
  3163  005F                     spiInit@sClockIdle:	
  3164                           
  3165                           ; 1 bytes @ 0x1
  3166  005F                     	ds	1
  3167  0060                     ??_readADC:	
  3168  0060                     readController@analogMode:	
  3169                           ; 1 bytes @ 0x2
  3170                           
  3171  0060                     spiInit@sTransmitEdge:	
  3172                           ; 1 bytes @ 0x2
  3173                           
  3174                           
  3175                           ; 1 bytes @ 0x2
  3176  0060                     	ds	1
  3177  0061                     ??_spiInit:	
  3178  0061                     reversebyte@byte:	
  3179                           ; 1 bytes @ 0x3
  3180                           
  3181  0061                     spiInit@sType:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184                           
  3185                           ; 1 bytes @ 0x3
  3186  0061                     	ds	1
  3187  0062                     ??_picInit:	
  3188                           
  3189                           ; 1 bytes @ 0x4
  3190  0062                     	ds	5
  3191  0067                     ??_readControllerAnalog:	
  3192                           
  3193                           ; 1 bytes @ 0x9
  3194  0067                     	ds	1
  3195  0068                     ??_main:	
  3196                           
  3197                           ; 1 bytes @ 0xA
  3198  0068                     	ds	1
  3199  0069                     main@slaveSelectStatePrev:	
  3200                           
  3201                           ; 1 bytes @ 0xB
  3202  0069                     	ds	1
  3203  006A                     main@count:	
  3204                           
  3205                           ; 1 bytes @ 0xC
  3206  006A                     	ds	1
  3207  006B                     main@slaveSelect:	
  3208                           
  3209                           ; 1 bytes @ 0xD
  3210  006B                     	ds	1
  3211                           
  3212                           	psect	maintext
  3213  0364                     __pmaintext:	
  3214 ;;
  3215 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3216 ;;
  3217 ;; *************** function _main *****************
  3218 ;; Defined at:
  3219 ;;		line 388 in file "main.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  slaveSelect     1   13[BANK0 ] unsigned char 
  3224 ;;  count           1   12[BANK0 ] unsigned char 
  3225 ;;  slaveSelectS    1   11[BANK0 ] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : B1F/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3236 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3239 ;;Total ram usage:        4 bytes
  3240 ;; Hardware stack levels required when called:    5
  3241 ;; This function calls:
  3242 ;;		_adcInit
  3243 ;;		_configureController
  3244 ;;		_picInit
  3245 ;;		_readController
  3246 ;;		_readControllerAnalog
  3247 ;; This function is called by:
  3248 ;;		Startup code after reset
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _main
  3254  0364                     _main:	
  3255                           
  3256                           ;main.c: 390:     picInit();
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3260  0364  3183  23A4  3183   	fcall	_picInit
  3261                           
  3262                           ;main.c: 391:     adcInit();
  3263  0367  3184  246A  3183   	fcall	_adcInit
  3264                           
  3265                           ;main.c: 394:     response[1] = 0x5A;
  3266  036A  305A               	movlw	90
  3267  036B  0020               	movlb	0	; select bank0
  3268  036C  00E8               	movwf	??_main
  3269  036D  0868               	movf	??_main,w
  3270  036E  00CB               	movwf	_response+1
  3271                           
  3272                           ;main.c: 396:     char slaveSelect;;main.c: 397:     char slaveSelectStatePrev = 0;
  3273  036F  01E9               	clrf	main@slaveSelectStatePrev
  3274                           
  3275                           ;main.c: 398:     char count = 0;
  3276  0370  01EA               	clrf	main@count
  3277                           
  3278                           ;main.c: 399:     RA4 = 1;
  3279  0371  160C               	bsf	12,4	;volatile
  3280  0372                     l2352:	
  3281                           
  3282                           ;main.c: 403:         if(RB7 && RB3 && RB2){
  3283  0372  0020               	movlb	0	; select bank0
  3284  0373  1B8D               	btfsc	13,7	;volatile
  3285  0374  1D8D               	btfss	13,3	;volatile
  3286  0375  2B7B               	goto	l2360
  3287  0376  1D0D               	btfss	13,2	;volatile
  3288  0377  2B7B               	goto	l2360
  3289                           
  3290                           ;main.c: 404:             configureController();
  3291  0378  3184  249F  3183   	fcall	_configureController
  3292  037B                     l2360:	
  3293                           
  3294                           ;main.c: 406:         slaveSelect = RA5;
  3295  037B  3000               	movlw	0
  3296  037C  0020               	movlb	0	; select bank0
  3297  037D  1A8C               	btfsc	12,5	;volatile
  3298  037E  3001               	movlw	1
  3299  037F  00EB               	movwf	main@slaveSelect
  3300                           
  3301                           ;main.c: 408:         if (slaveSelect) {
  3302  0380  086B               	movf	main@slaveSelect,w
  3303  0381  1903               	btfsc	3,2
  3304  0382  2B87               	goto	l148
  3305                           
  3306                           ;main.c: 409:             count++;
  3307  0383  3001               	movlw	1
  3308  0384  00E8               	movwf	??_main
  3309  0385  0868               	movf	??_main,w
  3310  0386  07EA               	addwf	main@count,f
  3311  0387                     l148:	
  3312                           ;main.c: 410:         }
  3313                           
  3314                           
  3315                           ;main.c: 412:         if (slaveSelect ^ slaveSelectStatePrev) {
  3316  0387  086B               	movf	main@slaveSelect,w
  3317  0388  0669               	xorwf	main@slaveSelectStatePrev,w
  3318  0389  1D03               	btfss	3,2
  3319                           
  3320                           ;main.c: 413:             count = 0;
  3321  038A  01EA               	clrf	main@count
  3322                           
  3323                           ;main.c: 416:         slaveSelectStatePrev = slaveSelect;
  3324  038B  086B               	movf	main@slaveSelect,w
  3325  038C  00E8               	movwf	??_main
  3326  038D  0868               	movf	??_main,w
  3327  038E  00E9               	movwf	main@slaveSelectStatePrev
  3328                           
  3329                           ;main.c: 418:         if (count >= 3) {
  3330  038F  3003               	movlw	3
  3331  0390  026A               	subwf	main@count,w
  3332  0391  1C03               	skipc
  3333  0392  2B9C               	goto	l2378
  3334                           
  3335                           ;main.c: 420:             cmdCounter = 0;
  3336  0393  01F6               	clrf	_cmdCounter
  3337                           
  3338                           ;main.c: 421:             responseLength = 9;
  3339  0394  3009               	movlw	9
  3340  0395  00E8               	movwf	??_main
  3341  0396  0868               	movf	??_main,w
  3342  0397  00C2               	movwf	_responseLength
  3343                           
  3344                           ;main.c: 422:             SSP1BUF = 0xFF;
  3345  0398  30FF               	movlw	255
  3346  0399  0023               	movlb	3	; select bank3
  3347  039A  008C               	movwf	12	;volatile
  3348                           
  3349                           ;main.c: 423:             previousCmd = 0x00;
  3350  039B  01F5               	clrf	_previousCmd
  3351  039C                     l2378:	
  3352                           
  3353                           ;main.c: 427:         readController(analogMode);
  3354  039C  0878               	movf	_analogMode,w
  3355  039D  3181  217E  3183   	fcall	_readController
  3356                           
  3357                           ;main.c: 428:         readControllerAnalog();
  3358  03A0  3183  2323  3183   	fcall	_readControllerAnalog
  3359  03A3  2B72               	goto	l2352
  3360  03A4                     __end_of_main:	
  3361                           
  3362                           	psect	text1
  3363  0323                     __ptext1:	
  3364 ;; *************** function _readControllerAnalog *****************
  3365 ;; Defined at:
  3366 ;;		line 147 in file "Controller.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:        1 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    4
  3387 ;; This function calls:
  3388 ;;		_readADC
  3389 ;;		_reversebyte
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _readControllerAnalog
  3397  0323                     _readControllerAnalog:	
  3398                           
  3399                           ;Controller.c: 150:     lyData = reversebyte(readADC(0b10001));
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _readControllerAnalog: [wreg+status,2+status,0+pclath+cstack]
  3403  0323  3011               	movlw	17
  3404  0324  0020               	movlb	0	; select bank0
  3405  0325  00DE               	movwf	readADC@channel
  3406  0326  3000               	movlw	0
  3407  0327  00DF               	movwf	readADC@channel+1
  3408  0328  3184  2415  3183   	fcall	_readADC
  3409  032B  0020               	movlb	0	; select bank0
  3410  032C  085E               	movf	?_readADC,w
  3411  032D  3183  23DE  3183   	fcall	_reversebyte
  3412  0330  0020               	movlb	0	; select bank0
  3413  0331  00E7               	movwf	??_readControllerAnalog
  3414  0332  0867               	movf	??_readControllerAnalog,w
  3415  0333  00C5               	movwf	_lyData
  3416                           
  3417                           ;Controller.c: 151:     lxData = reversebyte(readADC(0b010000));
  3418  0334  3010               	movlw	16
  3419  0335  00DE               	movwf	readADC@channel
  3420  0336  3000               	movlw	0
  3421  0337  00DF               	movwf	readADC@channel+1
  3422  0338  3184  2415  3183   	fcall	_readADC
  3423  033B  0020               	movlb	0	; select bank0
  3424  033C  085E               	movf	?_readADC,w
  3425  033D  3183  23DE  3183   	fcall	_reversebyte
  3426  0340  0020               	movlb	0	; select bank0
  3427  0341  00E7               	movwf	??_readControllerAnalog
  3428  0342  0867               	movf	??_readControllerAnalog,w
  3429  0343  00C6               	movwf	_lxData
  3430                           
  3431                           ;Controller.c: 152:     ryData = reversebyte(readADC(0b010111));
  3432  0344  3017               	movlw	23
  3433  0345  00DE               	movwf	readADC@channel
  3434  0346  3000               	movlw	0
  3435  0347  00DF               	movwf	readADC@channel+1
  3436  0348  3184  2415  3183   	fcall	_readADC
  3437  034B  0020               	movlb	0	; select bank0
  3438  034C  085E               	movf	?_readADC,w
  3439  034D  3183  23DE  3183   	fcall	_reversebyte
  3440  0350  0020               	movlb	0	; select bank0
  3441  0351  00E7               	movwf	??_readControllerAnalog
  3442  0352  0867               	movf	??_readControllerAnalog,w
  3443  0353  00C7               	movwf	_ryData
  3444                           
  3445                           ;Controller.c: 153:     rxData = reversebyte(readADC(0b010110));
  3446  0354  3016               	movlw	22
  3447  0355  00DE               	movwf	readADC@channel
  3448  0356  3000               	movlw	0
  3449  0357  00DF               	movwf	readADC@channel+1
  3450  0358  3184  2415  3183   	fcall	_readADC
  3451  035B  0020               	movlb	0	; select bank0
  3452  035C  085E               	movf	?_readADC,w
  3453  035D  3183  23DE         	fcall	_reversebyte
  3454  035F  0020               	movlb	0	; select bank0
  3455  0360  00E7               	movwf	??_readControllerAnalog
  3456  0361  0867               	movf	??_readControllerAnalog,w
  3457  0362  00C8               	movwf	_rxData
  3458  0363  0008               	return
  3459  0364                     __end_of_readControllerAnalog:	
  3460                           
  3461                           	psect	text2
  3462  03DE                     __ptext2:	
  3463 ;; *************** function _reversebyte *****************
  3464 ;; Defined at:
  3465 ;;		line 139 in file "Controller.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  byte            1    wreg     unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  byte            1    3[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3482 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:        4 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    3
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_readControllerAnalog
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _reversebyte
  3495  03DE                     _reversebyte:	
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  3499                           ;reversebyte@byte stored from wreg
  3500  03DE  0020               	movlb	0	; select bank0
  3501  03DF  00E1               	movwf	reversebyte@byte
  3502                           
  3503                           ;Controller.c: 140:     byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  3504  03E0  0861               	movf	reversebyte@byte,w
  3505  03E1  390F               	andlw	15
  3506  03E2  00DE               	movwf	??_reversebyte
  3507  03E3  3004               	movlw	4
  3508  03E4                     u905:	
  3509  03E4  35DE               	lslf	??_reversebyte,f
  3510  03E5  0B89               	decfsz	9,f
  3511  03E6  2BE4               	goto	u905
  3512  03E7  0861               	movf	reversebyte@byte,w
  3513  03E8  00DF               	movwf	??_reversebyte+1
  3514  03E9  3004               	movlw	4
  3515  03EA                     u915:	
  3516  03EA  36DF               	lsrf	??_reversebyte+1,f
  3517  03EB  0B89               	decfsz	9,f
  3518  03EC  2BEA               	goto	u915
  3519  03ED  085F               	movf	??_reversebyte+1,w
  3520  03EE  390F               	andlw	15
  3521  03EF  045E               	iorwf	??_reversebyte,w
  3522  03F0  00E0               	movwf	??_reversebyte+2
  3523  03F1  0860               	movf	??_reversebyte+2,w
  3524  03F2  00E1               	movwf	reversebyte@byte
  3525                           
  3526                           ;Controller.c: 141:     byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  3527  03F3  0861               	movf	reversebyte@byte,w
  3528  03F4  3933               	andlw	51
  3529  03F5  00DE               	movwf	??_reversebyte
  3530  03F6  3002               	movlw	2
  3531  03F7                     u925:	
  3532  03F7  35DE               	lslf	??_reversebyte,f
  3533  03F8  0B89               	decfsz	9,f
  3534  03F9  2BF7               	goto	u925
  3535  03FA  0861               	movf	reversebyte@byte,w
  3536  03FB  00DF               	movwf	??_reversebyte+1
  3537  03FC  3002               	movlw	2
  3538  03FD                     u935:	
  3539  03FD  36DF               	lsrf	??_reversebyte+1,f
  3540  03FE  0B89               	decfsz	9,f
  3541  03FF  2BFD               	goto	u935
  3542  0400  085F               	movf	??_reversebyte+1,w
  3543  0401  3933               	andlw	51
  3544  0402  045E               	iorwf	??_reversebyte,w
  3545  0403  00E0               	movwf	??_reversebyte+2
  3546  0404  0860               	movf	??_reversebyte+2,w
  3547  0405  00E1               	movwf	reversebyte@byte
  3548                           
  3549                           ;Controller.c: 142:     byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  3550  0406  0861               	movf	reversebyte@byte,w
  3551  0407  3955               	andlw	85
  3552  0408  00DE               	movwf	??_reversebyte
  3553  0409  3001               	movlw	1
  3554  040A                     u945:	
  3555  040A  35DE               	lslf	??_reversebyte,f
  3556  040B  0B89               	decfsz	9,f
  3557  040C  2C0A               	goto	u945
  3558  040D  3661               	lsrf	reversebyte@byte,w
  3559  040E  3955               	andlw	85
  3560  040F  045E               	iorwf	??_reversebyte,w
  3561  0410  00DF               	movwf	??_reversebyte+1
  3562  0411  085F               	movf	??_reversebyte+1,w
  3563  0412  00E1               	movwf	reversebyte@byte
  3564                           
  3565                           ;Controller.c: 144:     return byte;
  3566  0413  0861               	movf	reversebyte@byte,w
  3567  0414  0008               	return
  3568  0415                     __end_of_reversebyte:	
  3569                           
  3570                           	psect	text3
  3571  0415                     __ptext3:	
  3572 ;; *************** function _readADC *****************
  3573 ;; Defined at:
  3574 ;;		line 128 in file "Controller.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  channel         2    0[BANK0 ] int 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2    0[BANK0 ] unsigned int 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3590 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3591 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3592 ;;Total ram usage:        9 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    3
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_readControllerAnalog
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _readADC
  3604  0415                     _readADC:	
  3605                           
  3606                           ;Controller.c: 129:     ADPCH = channel;
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3610  0415  0020               	movlb	0	; select bank0
  3611  0416  085E               	movf	readADC@channel,w
  3612  0417  0021               	movlb	1	; select bank1
  3613  0418  009E               	movwf	30	;volatile
  3614                           
  3615                           ;Controller.c: 130:     ADPRE = 0x00;
  3616  0419  019C               	clrf	28	;volatile
  3617                           
  3618                           ;Controller.c: 131:     ADACQ = 0x3F;
  3619  041A  303F               	movlw	63
  3620  041B  009D               	movwf	29	;volatile
  3621                           
  3622                           ;Controller.c: 133:     ADCON0bits.ADGO = 1;
  3623  041C  1413               	bsf	19,0	;volatile
  3624  041D                     l253:	
  3625                           ;Controller.c: 134:     while (ADCON0bits.ADGO);
  3626                           
  3627  041D  1813               	btfsc	19,0	;volatile
  3628  041E  2C1D               	goto	l253
  3629                           
  3630                           ;Controller.c: 136:     return ((ADRESH << 6) | (ADRESL >> 2));
  3631  041F  080C               	movf	12,w	;volatile
  3632  0420  0020               	movlb	0	; select bank0
  3633  0421  00E0               	movwf	??_readADC
  3634  0422  3002               	movlw	2
  3635  0423                     u885:	
  3636  0423  36E0               	lsrf	??_readADC,f
  3637  0424  0B89               	decfsz	9,f
  3638  0425  2C23               	goto	u885
  3639  0426  0860               	movf	??_readADC,w
  3640  0427  00E1               	movwf	??_readADC+1
  3641  0428  01E2               	clrf	??_readADC+2
  3642  0429  0021               	movlb	1	; select bank1
  3643  042A  080D               	movf	13,w	;volatile
  3644  042B  0020               	movlb	0	; select bank0
  3645  042C  00E3               	movwf	??_readADC+3
  3646  042D  01E4               	clrf	??_readADC+4
  3647  042E  3006               	movlw	6
  3648  042F                     u895:	
  3649  042F  35E3               	lslf	??_readADC+3,f
  3650  0430  0DE4               	rlf	??_readADC+4,f
  3651  0431  0B89               	decfsz	9,f
  3652  0432  2C2F               	goto	u895
  3653  0433  0861               	movf	??_readADC+1,w
  3654  0434  0463               	iorwf	??_readADC+3,w
  3655  0435  00E5               	movwf	??_readADC+5
  3656  0436  0862               	movf	??_readADC+2,w
  3657  0437  0464               	iorwf	??_readADC+4,w
  3658  0438  00E6               	movwf	??_readADC+6
  3659  0439  0865               	movf	??_readADC+5,w
  3660  043A  00DE               	movwf	?_readADC
  3661  043B  0866               	movf	??_readADC+6,w
  3662  043C  00DF               	movwf	?_readADC+1
  3663  043D  0008               	return
  3664  043E                     __end_of_readADC:	
  3665                           
  3666                           	psect	text4
  3667  017E                     __ptext4:	
  3668 ;; *************** function _readController *****************
  3669 ;; Defined at:
  3670 ;;		line 13 in file "Controller.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  analogMode      1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  analogMode      1    2[BANK0 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3687 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:        3 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    3
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _readController
  3700  017E                     _readController:	
  3701                           
  3702                           ;incstack = 0
  3703                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  3704                           ;readController@analogMode stored from wreg
  3705  017E  0020               	movlb	0	; select bank0
  3706  017F  00E0               	movwf	readController@analogMode
  3707                           
  3708                           ;Controller.c: 16:     DigitalControllerByte1[DDown] = RA7;
  3709  0180  3000               	movlw	0
  3710  0181  1B8C               	btfsc	12,7	;volatile
  3711  0182  3001               	movlw	1
  3712  0183  00A9               	movwf	_DigitalControllerByte1+1
  3713                           
  3714                           ;Controller.c: 17:     DigitalControllerByte1[DUp] = RA6;
  3715  0184  3000               	movlw	0
  3716  0185  1B0C               	btfsc	12,6	;volatile
  3717  0186  3001               	movlw	1
  3718  0187  00AB               	movwf	_DigitalControllerByte1+3
  3719                           
  3720                           ;Controller.c: 18:     DigitalControllerByte1[DLeft] = RB0;
  3721  0188  3000               	movlw	0
  3722  0189  180D               	btfsc	13,0	;volatile
  3723  018A  3001               	movlw	1
  3724  018B  00A8               	movwf	_DigitalControllerByte1
  3725                           
  3726                           ;Controller.c: 19:     DigitalControllerByte1[DRight] = RB1;
  3727  018C  3000               	movlw	0
  3728  018D  188D               	btfsc	13,1	;volatile
  3729  018E  3001               	movlw	1
  3730  018F  00AA               	movwf	_DigitalControllerByte1+2
  3731                           
  3732                           ;Controller.c: 20:     DigitalControllerByte1[R3] = RD0;
  3733  0190  3000               	movlw	0
  3734  0191  180F               	btfsc	15,0	;volatile
  3735  0192  3001               	movlw	1
  3736  0193  00AD               	movwf	_DigitalControllerByte1+5
  3737                           
  3738                           ;Controller.c: 21:     DigitalControllerByte1[L3] = RC2;
  3739  0194  3000               	movlw	0
  3740  0195  190E               	btfsc	14,2	;volatile
  3741  0196  3001               	movlw	1
  3742  0197  00AE               	movwf	_DigitalControllerByte1+6
  3743                           
  3744                           ;Controller.c: 22:     DigitalControllerByte1[Start] = RB6;
  3745  0198  3000               	movlw	0
  3746  0199  1B0D               	btfsc	13,6	;volatile
  3747  019A  3001               	movlw	1
  3748  019B  00AC               	movwf	_DigitalControllerByte1+4
  3749                           
  3750                           ;Controller.c: 23:     DigitalControllerByte1[Select] = RB7;
  3751  019C  3000               	movlw	0
  3752  019D  1B8D               	btfsc	13,7	;volatile
  3753  019E  3001               	movlw	1
  3754  019F  00AF               	movwf	_DigitalControllerByte1+7
  3755                           
  3756                           ;Controller.c: 25:     DigitalControllerByte2[Square] = RA0;
  3757  01A0  3000               	movlw	0
  3758  01A1  180C               	btfsc	12,0	;volatile
  3759  01A2  3001               	movlw	1
  3760  01A3  00A0               	movwf	_DigitalControllerByte2
  3761                           
  3762                           ;Controller.c: 26:     DigitalControllerByte2[Circle] = RA3;
  3763  01A4  3000               	movlw	0
  3764  01A5  198C               	btfsc	12,3	;volatile
  3765  01A6  3001               	movlw	1
  3766  01A7  00A2               	movwf	_DigitalControllerByte2+2
  3767                           
  3768                           ;Controller.c: 27:     DigitalControllerByte2[X] = RA2;
  3769  01A8  3000               	movlw	0
  3770  01A9  190C               	btfsc	12,2	;volatile
  3771  01AA  3001               	movlw	1
  3772  01AB  00A1               	movwf	_DigitalControllerByte2+1
  3773                           
  3774                           ;Controller.c: 28:     DigitalControllerByte2[Triangle] = RA1;
  3775  01AC  3000               	movlw	0
  3776  01AD  188C               	btfsc	12,1	;volatile
  3777  01AE  3001               	movlw	1
  3778  01AF  00A3               	movwf	_DigitalControllerByte2+3
  3779                           
  3780                           ;Controller.c: 29:     DigitalControllerByte2[R1] = RB4;
  3781  01B0  3000               	movlw	0
  3782  01B1  1A0D               	btfsc	13,4	;volatile
  3783  01B2  3001               	movlw	1
  3784  01B3  00A4               	movwf	_DigitalControllerByte2+4
  3785                           
  3786                           ;Controller.c: 30:     DigitalControllerByte2[R2] = RB5;
  3787  01B4  3000               	movlw	0
  3788  01B5  1A8D               	btfsc	13,5	;volatile
  3789  01B6  3001               	movlw	1
  3790  01B7  00A6               	movwf	_DigitalControllerByte2+6
  3791                           
  3792                           ;Controller.c: 31:     DigitalControllerByte2[L1] = RB2;
  3793  01B8  3000               	movlw	0
  3794  01B9  190D               	btfsc	13,2	;volatile
  3795  01BA  3001               	movlw	1
  3796  01BB  00A5               	movwf	_DigitalControllerByte2+5
  3797                           
  3798                           ;Controller.c: 32:     DigitalControllerByte2[L2] = RB3;
  3799  01BC  3000               	movlw	0
  3800  01BD  198D               	btfsc	13,3	;volatile
  3801  01BE  3001               	movlw	1
  3802  01BF  00A7               	movwf	_DigitalControllerByte2+7
  3803                           
  3804                           ;Controller.c: 42:     if(index > Select){
  3805  01C0  3008               	movlw	8
  3806  01C1  0277               	subwf	_index,w
  3807  01C2  1803               	btfsc	3,0
  3808                           
  3809                           ;Controller.c: 43:         index = 0;
  3810  01C3  01F7               	clrf	_index
  3811                           
  3812                           ;Controller.c: 47:     if(!DigitalControllerByte1[index]){
  3813  01C4  0877               	movf	_index,w
  3814  01C5  3E28               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  3815  01C6  0086               	movwf	6
  3816  01C7  0187               	clrf	7
  3817  01C8  0801               	movf	1,w
  3818  01C9  1D03               	btfss	3,2
  3819  01CA  29D3               	goto	l237
  3820                           
  3821                           ;Controller.c: 48:         IndexDigitalByte1[index]++;
  3822  01CB  3001               	movlw	1
  3823  01CC  00DE               	movwf	??_readController
  3824  01CD  0877               	movf	_index,w
  3825  01CE  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  3826  01CF  0086               	movwf	6
  3827  01D0  0187               	clrf	7
  3828  01D1  085E               	movf	??_readController,w
  3829  01D2  0781               	addwf	1,f
  3830  01D3                     l237:	
  3831                           ;Controller.c: 49:     }
  3832                           
  3833                           
  3834                           ;Controller.c: 50:     if(!DigitalControllerByte2[index]){
  3835  01D3  0877               	movf	_index,w
  3836  01D4  3E20               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  3837  01D5  0086               	movwf	6
  3838  01D6  0187               	clrf	7
  3839  01D7  0801               	movf	1,w
  3840  01D8  1D03               	btfss	3,2
  3841  01D9  29E2               	goto	l2310
  3842                           
  3843                           ;Controller.c: 51:        IndexDigitalByte2[index]++;
  3844  01DA  3001               	movlw	1
  3845  01DB  00DE               	movwf	??_readController
  3846  01DC  0877               	movf	_index,w
  3847  01DD  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  3848  01DE  0086               	movwf	6
  3849  01DF  0187               	clrf	7
  3850  01E0  085E               	movf	??_readController,w
  3851  01E1  0781               	addwf	1,f
  3852  01E2                     l2310:	
  3853                           
  3854                           ;Controller.c: 55:     if(DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]){
  3855  01E2  0877               	movf	_index,w
  3856  01E3  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  3857  01E4  0086               	movwf	6
  3858  01E5  0187               	clrf	7
  3859  01E6  0877               	movf	_index,w
  3860  01E7  3E28               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  3861  01E8  0084               	movwf	4
  3862  01E9  0185               	clrf	5
  3863  01EA  0800               	movf	0,w
  3864  01EB  0601               	xorwf	1,w
  3865  01EC  1903               	btfsc	3,2
  3866  01ED  2A06               	goto	l2320
  3867                           
  3868                           ;Controller.c: 56:         IndexDigitalByte1[index] = 0;
  3869  01EE  0877               	movf	_index,w
  3870  01EF  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  3871  01F0  0086               	movwf	6
  3872  01F1  0187               	clrf	7
  3873  01F2  0181               	clrf	1
  3874                           
  3875                           ;Controller.c: 57:         digitalStateFirst |= 1<<index;
  3876  01F3  3001               	movlw	1
  3877  01F4  00DE               	movwf	??_readController
  3878  01F5  0A77               	incf	_index,w
  3879  01F6  29F8               	goto	u1004
  3880  01F7                     u1005:	
  3881  01F7  35DE               	lslf	??_readController,f
  3882  01F8                     u1004:	
  3883  01F8  0B89               	decfsz	9,f
  3884  01F9  29F7               	goto	u1005
  3885  01FA  085E               	movf	??_readController,w
  3886  01FB  00DF               	movwf	??_readController+1
  3887  01FC  085F               	movf	??_readController+1,w
  3888  01FD  04F9               	iorwf	_digitalStateFirst,f
  3889                           
  3890                           ;Controller.c: 59:         if(analogMode) {
  3891  01FE  0860               	movf	readController@analogMode,w
  3892  01FF  1903               	btfsc	3,2
  3893  0200  2A06               	goto	l2320
  3894                           
  3895                           ;Controller.c: 60:             analogStateFirst[index] = 0x00;
  3896  0201  0877               	movf	_index,w
  3897  0202  3E38               	addlw	(low (_analogStateFirst| 0))& (0+255)
  3898  0203  0086               	movwf	6
  3899  0204  0187               	clrf	7
  3900  0205  0181               	clrf	1
  3901  0206                     l2320:	
  3902                           
  3903                           ;Controller.c: 64:     if(DigitalControllerByte2[index] ^ PreviousDigitalByte2[index]){
  3904  0206  0877               	movf	_index,w
  3905  0207  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  3906  0208  0086               	movwf	6
  3907  0209  0187               	clrf	7
  3908  020A  0877               	movf	_index,w
  3909  020B  3E20               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  3910  020C  0084               	movwf	4
  3911  020D  0185               	clrf	5
  3912  020E  0800               	movf	0,w
  3913  020F  0601               	xorwf	1,w
  3914  0210  1903               	btfsc	3,2
  3915  0211  2A2A               	goto	l241
  3916                           
  3917                           ;Controller.c: 65:         IndexDigitalByte2[index] = 0;
  3918  0212  0877               	movf	_index,w
  3919  0213  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  3920  0214  0086               	movwf	6
  3921  0215  0187               	clrf	7
  3922  0216  0181               	clrf	1
  3923                           
  3924                           ;Controller.c: 66:         digitalStateSecond |= 1<<index;
  3925  0217  3001               	movlw	1
  3926  0218  00DE               	movwf	??_readController
  3927  0219  0A77               	incf	_index,w
  3928  021A  2A1C               	goto	u1034
  3929  021B                     u1035:	
  3930  021B  35DE               	lslf	??_readController,f
  3931  021C                     u1034:	
  3932  021C  0B89               	decfsz	9,f
  3933  021D  2A1B               	goto	u1035
  3934  021E  085E               	movf	??_readController,w
  3935  021F  00DF               	movwf	??_readController+1
  3936  0220  085F               	movf	??_readController+1,w
  3937  0221  04C9               	iorwf	_digitalStateSecond,f
  3938                           
  3939                           ;Controller.c: 68:         if(analogMode) {
  3940  0222  0860               	movf	readController@analogMode,w
  3941  0223  1903               	btfsc	3,2
  3942  0224  2A2A               	goto	l241
  3943                           
  3944                           ;Controller.c: 69:             analogStateSecond[index] = 0x00;
  3945  0225  0877               	movf	_index,w
  3946  0226  3E30               	addlw	(low (_analogStateSecond| 0))& (0+255)
  3947  0227  0086               	movwf	6
  3948  0228  0187               	clrf	7
  3949  0229  0181               	clrf	1
  3950  022A                     l241:	
  3951                           ;Controller.c: 72:     }
  3952                           
  3953  022A  0877               	movf	_index,w
  3954  022B  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  3955  022C  0086               	movwf	6
  3956  022D  0187               	clrf	7
  3957  022E  3003               	movlw	3
  3958  022F  0201               	subwf	1,w
  3959  0230  1C03               	skipc
  3960  0231  2A49               	goto	l243
  3961                           
  3962                           ;Controller.c: 76:         digitalStateFirst &= ~(1<<index);
  3963  0232  3001               	movlw	1
  3964  0233  00DE               	movwf	??_readController
  3965  0234  0A77               	incf	_index,w
  3966  0235  2A37               	goto	u1064
  3967  0236                     u1065:	
  3968  0236  35DE               	lslf	??_readController,f
  3969  0237                     u1064:	
  3970  0237  0B89               	decfsz	9,f
  3971  0238  2A36               	goto	u1065
  3972  0239  085E               	movf	??_readController,w
  3973  023A  3AFF               	xorlw	255
  3974  023B  00DF               	movwf	??_readController+1
  3975  023C  085F               	movf	??_readController+1,w
  3976  023D  05F9               	andwf	_digitalStateFirst,f
  3977                           
  3978                           ;Controller.c: 78:         if(analogMode) {
  3979  023E  0860               	movf	readController@analogMode,w
  3980  023F  1903               	btfsc	3,2
  3981  0240  2A49               	goto	l243
  3982                           
  3983                           ;Controller.c: 79:             analogStateFirst[index] = 0xFF;
  3984  0241  30FF               	movlw	255
  3985  0242  00DE               	movwf	??_readController
  3986  0243  0877               	movf	_index,w
  3987  0244  3E38               	addlw	(low (_analogStateFirst| 0))& (0+255)
  3988  0245  0086               	movwf	6
  3989  0246  0187               	clrf	7
  3990  0247  085E               	movf	??_readController,w
  3991  0248  0081               	movwf	1
  3992  0249                     l243:	
  3993                           ;Controller.c: 82:     }
  3994                           
  3995  0249  0877               	movf	_index,w
  3996  024A  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  3997  024B  0086               	movwf	6
  3998  024C  0187               	clrf	7
  3999  024D  3003               	movlw	3
  4000  024E  0201               	subwf	1,w
  4001  024F  1C03               	skipc
  4002  0250  2A68               	goto	l245
  4003                           
  4004                           ;Controller.c: 84:         digitalStateSecond &= ~(1<<index);
  4005  0251  3001               	movlw	1
  4006  0252  00DE               	movwf	??_readController
  4007  0253  0A77               	incf	_index,w
  4008  0254  2A56               	goto	u1094
  4009  0255                     u1095:	
  4010  0255  35DE               	lslf	??_readController,f
  4011  0256                     u1094:	
  4012  0256  0B89               	decfsz	9,f
  4013  0257  2A55               	goto	u1095
  4014  0258  085E               	movf	??_readController,w
  4015  0259  3AFF               	xorlw	255
  4016  025A  00DF               	movwf	??_readController+1
  4017  025B  085F               	movf	??_readController+1,w
  4018  025C  05C9               	andwf	_digitalStateSecond,f
  4019                           
  4020                           ;Controller.c: 86:         if(analogMode) {
  4021  025D  0860               	movf	readController@analogMode,w
  4022  025E  1903               	btfsc	3,2
  4023  025F  2A68               	goto	l245
  4024                           
  4025                           ;Controller.c: 87:             analogStateSecond[index] = 0xFF;
  4026  0260  30FF               	movlw	255
  4027  0261  00DE               	movwf	??_readController
  4028  0262  0877               	movf	_index,w
  4029  0263  3E30               	addlw	(low (_analogStateSecond| 0))& (0+255)
  4030  0264  0086               	movwf	6
  4031  0265  0187               	clrf	7
  4032  0266  085E               	movf	??_readController,w
  4033  0267  0081               	movwf	1
  4034  0268                     l245:	
  4035                           ;Controller.c: 90:     }
  4036                           
  4037                           
  4038                           ;Controller.c: 93:     PreviousDigitalByte1[index] = DigitalControllerByte1[index];
  4039  0268  0877               	movf	_index,w
  4040  0269  3E28               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  4041  026A  0086               	movwf	6
  4042  026B  0187               	clrf	7
  4043  026C  0801               	movf	1,w
  4044  026D  00DE               	movwf	??_readController
  4045  026E  0877               	movf	_index,w
  4046  026F  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  4047  0270  0086               	movwf	6
  4048  0271  0187               	clrf	7
  4049  0272  085E               	movf	??_readController,w
  4050  0273  0081               	movwf	1
  4051                           
  4052                           ;Controller.c: 94:     PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  4053  0274  0877               	movf	_index,w
  4054  0275  3E20               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  4055  0276  0086               	movwf	6
  4056  0277  0187               	clrf	7
  4057  0278  0801               	movf	1,w
  4058  0279  00DE               	movwf	??_readController
  4059  027A  0877               	movf	_index,w
  4060  027B  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  4061  027C  0086               	movwf	6
  4062  027D  0187               	clrf	7
  4063  027E  085E               	movf	??_readController,w
  4064  027F  0081               	movwf	1
  4065                           
  4066                           ;Controller.c: 96:     index++;
  4067  0280  3001               	movlw	1
  4068  0281  00DE               	movwf	??_readController
  4069  0282  085E               	movf	??_readController,w
  4070  0283  07F7               	addwf	_index,f
  4071  0284  0008               	return
  4072  0285                     __end_of_readController:	
  4073                           
  4074                           	psect	text5
  4075  03A4                     __ptext5:	
  4076 ;; *************** function _picInit *****************
  4077 ;; Defined at:
  4078 ;;		line 63 in file "PicConfig.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        2 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    4
  4099 ;; This function calls:
  4100 ;;		_ppsLock
  4101 ;;		_ppsUnlock
  4102 ;;		_spiInit
  4103 ;; This function is called by:
  4104 ;;		_main
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _picInit
  4110  03A4                     _picInit:	
  4111                           
  4112                           ;PicConfig.c: 66:     TRISA = 0xFF;
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  4116  03A4  30FF               	movlw	255
  4117  03A5  0020               	movlb	0	; select bank0
  4118  03A6  0091               	movwf	17	;volatile
  4119                           
  4120                           ;PicConfig.c: 67:     TRISB = 0xFF;
  4121  03A7  30FF               	movlw	255
  4122  03A8  0092               	movwf	18	;volatile
  4123                           
  4124                           ;PicConfig.c: 68:     TRISC = 0xFF;
  4125  03A9  30FF               	movlw	255
  4126  03AA  0093               	movwf	19	;volatile
  4127                           
  4128                           ;PicConfig.c: 69:     TRISD = 0xEF;
  4129  03AB  30EF               	movlw	239
  4130  03AC  0094               	movwf	20	;volatile
  4131                           
  4132                           ;PicConfig.c: 70:     TRISE = 0xFF;
  4133  03AD  30FF               	movlw	255
  4134  03AE  0095               	movwf	21	;volatile
  4135                           
  4136                           ;PicConfig.c: 73:     ANSELA = 0;
  4137  03AF  003E               	movlb	30	; select bank30
  4138  03B0  01B8               	clrf	56	;volatile
  4139                           
  4140                           ;PicConfig.c: 74:     ANSELB = 0;
  4141  03B1  01C3               	clrf	67	;volatile
  4142                           
  4143                           ;PicConfig.c: 75:     ANSELC = 0xC3;
  4144  03B2  30C3               	movlw	195
  4145  03B3  00CE               	movwf	78	;volatile
  4146                           
  4147                           ;PicConfig.c: 76:     ANSELD = 0;
  4148  03B4  01D9               	clrf	89	;volatile
  4149                           
  4150                           ;PicConfig.c: 77:     ANSELE = 0;
  4151  03B5  01E4               	clrf	100	;volatile
  4152                           
  4153                           ;PicConfig.c: 80:     WPUA = 0xCF;
  4154  03B6  30CF               	movlw	207
  4155  03B7  00B9               	movwf	57	;volatile
  4156                           
  4157                           ;PicConfig.c: 81:     WPUB = 0xFF;
  4158  03B8  30FF               	movlw	255
  4159  03B9  00C4               	movwf	68	;volatile
  4160                           
  4161                           ;PicConfig.c: 82:     WPUC = 0x04;
  4162  03BA  3004               	movlw	4
  4163  03BB  00CF               	movwf	79	;volatile
  4164                           
  4165                           ;PicConfig.c: 83:     WPUD = 0x01;
  4166  03BC  3001               	movlw	1
  4167  03BD  00DA               	movwf	90	;volatile
  4168                           
  4169                           ;PicConfig.c: 84:     WPUE = 0;
  4170  03BE  01E5               	clrf	101	;volatile
  4171                           
  4172                           ;PicConfig.c: 87:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HI
      +                          GH, SPI_ACTIVE_2_IDLE);
  4173  03BF  0020               	movlb	0	; select bank0
  4174  03C0  01DE               	clrf	spiInit@sDataSample
  4175  03C1  3010               	movlw	16
  4176  03C2  00E2               	movwf	??_picInit
  4177  03C3  0862               	movf	??_picInit,w
  4178  03C4  00DF               	movwf	spiInit@sClockIdle
  4179  03C5  3040               	movlw	64
  4180  03C6  00E3               	movwf	??_picInit+1
  4181  03C7  0863               	movf	??_picInit+1,w
  4182  03C8  00E0               	movwf	spiInit@sTransmitEdge
  4183  03C9  3024               	movlw	36
  4184  03CA  3184  245A  3183   	fcall	_spiInit
  4185                           
  4186                           ;PicConfig.c: 89:     TRISCbits.TRISC5 = 0;
  4187  03CD  0020               	movlb	0	; select bank0
  4188  03CE  1293               	bcf	19,5	;volatile
  4189                           
  4190                           ;PicConfig.c: 90:     TRISAbits.TRISA4 = 0;
  4191  03CF  1211               	bcf	17,4	;volatile
  4192                           
  4193                           ;PicConfig.c: 91:     ppsUnlock();
  4194  03D0  3184  247C  3183   	fcall	_ppsUnlock
  4195                           
  4196                           ;PicConfig.c: 93:     RC5PPS = 0x15;
  4197  03D3  3015               	movlw	21
  4198  03D4  003E               	movlb	30	; select bank30
  4199  03D5  00A5               	movwf	37	;volatile
  4200                           
  4201                           ;PicConfig.c: 95:     ppsLock();
  4202  03D6  3184  2474         	fcall	_ppsLock
  4203                           
  4204                           ;PicConfig.c: 98:     INTCONbits.GIE = 1;
  4205  03D8  178B               	bsf	11,7	;volatile
  4206                           
  4207                           ;PicConfig.c: 99:     INTCONbits.PEIE = 1;
  4208  03D9  170B               	bsf	11,6	;volatile
  4209                           
  4210                           ;PicConfig.c: 100:     SSP1IF = 0;
  4211  03DA  002E               	movlb	14	; select bank14
  4212  03DB  100F               	bcf	15,0	;volatile
  4213                           
  4214                           ;PicConfig.c: 101:     SSP1IE = 1;
  4215  03DC  1419               	bsf	25,0	;volatile
  4216  03DD  0008               	return
  4217  03DE                     __end_of_picInit:	
  4218                           
  4219                           	psect	text6
  4220  045A                     __ptext6:	
  4221 ;; *************** function _spiInit *****************
  4222 ;; Defined at:
  4223 ;;		line 10 in file "Spi.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  sType           1    wreg     enum E12122
  4226 ;;  sDataSample     1    0[BANK0 ] enum E12130
  4227 ;;  sClockIdle      1    1[BANK0 ] enum E12134
  4228 ;;  sTransmitEdg    1    2[BANK0 ] enum E12138
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  sType           1    3[BANK0 ] enum E12122
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4240 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4243 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:        4 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    3
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_picInit
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function _spiInit
  4256  045A                     _spiInit:	
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4260                           ;spiInit@sType stored from wreg
  4261  045A  0020               	movlb	0	; select bank0
  4262  045B  00E1               	movwf	spiInit@sType
  4263                           
  4264                           ;Spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);Spi.c: 11: {;Spi.c: 13:     if(sType & 0b00000
      +                          100)
  4265  045C  1D61               	btfss	spiInit@sType,2
  4266  045D  2C60               	goto	l2252
  4267                           
  4268                           ;Spi.c: 14:     {;Spi.c: 15:         SSP1STAT = sTransmitEdge;
  4269  045E  0860               	movf	spiInit@sTransmitEdge,w
  4270  045F  2C62               	goto	L1
  4271  0460                     l2252:	
  4272                           ;Spi.c: 17:     }
  4273                           
  4274                           
  4275                           ;Spi.c: 19:     {;Spi.c: 20:         SSP1STAT = sDataSample | sTransmitEdge;
  4276  0460  085E               	movf	spiInit@sDataSample,w
  4277  0461  0460               	iorwf	spiInit@sTransmitEdge,w
  4278  0462                     L1:	
  4279  0462  0023               	movlb	3	; select bank3
  4280  0463  008F               	movwf	15	;volatile
  4281                           
  4282                           ;Spi.c: 24:     SSP1CON1 = sType | sClockIdle;
  4283                           
  4284                           ;Spi.c: 22:     }
  4285  0464  0020               	movlb	0	; select bank0
  4286  0465  0861               	movf	spiInit@sType,w
  4287  0466  045F               	iorwf	spiInit@sClockIdle,w
  4288  0467  0023               	movlb	3	; select bank3
  4289  0468  0090               	movwf	16	;volatile
  4290  0469  0008               	return
  4291  046A                     __end_of_spiInit:	
  4292                           
  4293                           	psect	text7
  4294  047C                     __ptext7:	
  4295 ;; *************** function _ppsUnlock *****************
  4296 ;; Defined at:
  4297 ;;		line 3 in file "PicConfig.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    3
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_picInit
  4322 ;;		_pwmInit
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _ppsUnlock
  4328  047C                     _ppsUnlock:	
  4329                           
  4330                           ;PicConfig.c: 4:     PPSLOCK = 0x55;
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in _ppsUnlock: [wreg+status,2]
  4334  047C  3055               	movlw	85
  4335  047D  003D               	movlb	29	; select bank29
  4336  047E  008F               	movwf	15	;volsfr
  4337                           
  4338                           ;PicConfig.c: 5:     PPSLOCK = 0xAA;
  4339  047F  30AA               	movlw	170
  4340  0480  008F               	movwf	15	;volsfr
  4341                           
  4342                           ;PicConfig.c: 6:     PPSLOCK = 0;
  4343  0481  018F               	clrf	15	;volsfr
  4344  0482  0008               	return
  4345  0483                     __end_of_ppsUnlock:	
  4346                           
  4347                           	psect	text8
  4348  0474                     __ptext8:	
  4349 ;; *************** function _ppsLock *****************
  4350 ;; Defined at:
  4351 ;;		line 9 in file "PicConfig.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    3
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_picInit
  4376 ;;		_pwmInit
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           
  4381                           ;psect for function _ppsLock
  4382  0474                     _ppsLock:	
  4383                           
  4384                           ;PicConfig.c: 10:     PPSLOCK = 0x55;
  4385                           
  4386                           ;incstack = 0
  4387                           ; Regs used in _ppsLock: [wreg]
  4388  0474  3055               	movlw	85
  4389  0475  003D               	movlb	29	; select bank29
  4390  0476  008F               	movwf	15	;volsfr
  4391                           
  4392                           ;PicConfig.c: 11:     PPSLOCK = 0xAA;
  4393  0477  30AA               	movlw	170
  4394  0478  008F               	movwf	15	;volsfr
  4395                           
  4396                           ;PicConfig.c: 12:     PPSLOCK = 1;
  4397  0479  3001               	movlw	1
  4398  047A  008F               	movwf	15	;volsfr
  4399  047B  0008               	return
  4400  047C                     __end_of_ppsLock:	
  4401                           
  4402                           	psect	text9
  4403  049F                     __ptext9:	
  4404 ;; *************** function _configureController *****************
  4405 ;; Defined at:
  4406 ;;		line 381 in file "main.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		None
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    3
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _configureController
  4436  049F                     _configureController:	
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in _configureController: []
  4440  049F  0008               	return
  4441  04A0                     __end_of_configureController:	
  4442                           
  4443                           	psect	text10
  4444  046A                     __ptext10:	
  4445 ;; *************** function _adcInit *****************
  4446 ;; Defined at:
  4447 ;;		line 15 in file "PicConfig.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    3
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _adcInit
  4477  046A                     _adcInit:	
  4478                           
  4479                           ;PicConfig.c: 16:     ADCON0 = 0x04;
  4480                           
  4481                           ;incstack = 0
  4482                           ; Regs used in _adcInit: [wreg+status,2]
  4483  046A  3004               	movlw	4
  4484  046B  0021               	movlb	1	; select bank1
  4485  046C  0093               	movwf	19	;volatile
  4486                           
  4487                           ;PicConfig.c: 17:     ADCON1 = 0;
  4488  046D  0194               	clrf	20	;volatile
  4489                           
  4490                           ;PicConfig.c: 18:     ADCON2 = 0;
  4491  046E  0195               	clrf	21	;volatile
  4492                           
  4493                           ;PicConfig.c: 19:     ADREF = 0;
  4494  046F  019A               	clrf	26	;volatile
  4495                           
  4496                           ;PicConfig.c: 20:     ADCLK = 0x3F;
  4497  0470  303F               	movlw	63
  4498  0471  0098               	movwf	24	;volatile
  4499                           
  4500                           ;PicConfig.c: 21:     ADCON0bits.ADON = 1;
  4501  0472  1793               	bsf	19,7	;volatile
  4502  0473  0008               	return
  4503  0474                     __end_of_adcInit:	
  4504                           
  4505                           	psect	intentry
  4506  0004                     __pintentry:	
  4507 ;; *************** function _PS2Command *****************
  4508 ;; Defined at:
  4509 ;;		line 56 in file "main.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  cmd             1    4[COMMON] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        3 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    2
  4530 ;; This function calls:
  4531 ;;		_pollController
  4532 ;;		_spiRead
  4533 ;;		_spiWrite
  4534 ;; This function is called by:
  4535 ;;		Interrupt level 1
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539  0004                     _PS2Command:	
  4540                           
  4541                           ;incstack = 0
  4542  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4543                           
  4544                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4545  0005  3180               	pagesel	$
  4546                           
  4547                           ;main.c: 58:     if (SSP1IF) {
  4548  0006  002E               	movlb	14	; select bank14
  4549  0007  1C0F               	btfss	15,0	;volatile
  4550  0008  2950               	goto	i1l138
  4551                           
  4552                           ;main.c: 60:         char cmd = spiRead();
  4553  0009  3184  2494  3180   	fcall	_spiRead
  4554  000C  00F2               	movwf	??_PS2Command
  4555  000D  0872               	movf	??_PS2Command,w
  4556  000E  00F4               	movwf	PS2Command@cmd
  4557                           
  4558                           ;main.c: 62:         switch (cmdCounter) {
  4559  000F  2917               	goto	i1l1928
  4560  0010                     i1l1784:	
  4561                           
  4562                           ;main.c: 70:                         if(cmd == 0x80)
  4563  0010  3080               	movlw	128
  4564  0011  0674               	xorwf	PS2Command@cmd,w
  4565  0012  1D03               	btfss	3,2
  4566  0013  2817               	goto	i1l92
  4567                           
  4568                           ;main.c: 71:                             RD4 = 1;
  4569  0014  0020               	movlb	0	; select bank0
  4570  0015  160F               	bsf	15,4	;volatile
  4571  0016  2927               	goto	i1l1930
  4572  0017                     i1l92:	
  4573                           ;main.c: 72:                         else
  4574                           
  4575                           
  4576                           ;main.c: 73:                             RD4 = 0;
  4577  0017  0020               	movlb	0	; select bank0
  4578  0018  120F               	bcf	15,4	;volatile
  4579  0019  2927               	goto	i1l1930
  4580  001A                     i1l1788:	
  4581                           
  4582                           ;main.c: 78:                         if (cmd == 0x80)
  4583  001A  3080               	movlw	128
  4584  001B  0674               	xorwf	PS2Command@cmd,w
  4585  001C  1D03               	btfss	3,2
  4586  001D  2822               	goto	i1l1792
  4587                           
  4588                           ;main.c: 79:                             escapeMode = 1;
  4589  001E  0020               	movlb	0	; select bank0
  4590  001F  01C0               	clrf	_escapeMode
  4591  0020  0AC0               	incf	_escapeMode,f
  4592  0021  2927               	goto	i1l1930
  4593  0022                     i1l1792:	
  4594                           
  4595                           ;main.c: 81:                             escapeMode = 0;
  4596  0022  0020               	movlb	0	; select bank0
  4597  0023  01C0               	clrf	_escapeMode
  4598  0024  2927               	goto	i1l1930
  4599  0025                     i1l1794:	
  4600                           
  4601                           ;main.c: 86:                         if (cmd == 0x80)
  4602  0025  3080               	movlw	128
  4603  0026  0674               	xorwf	PS2Command@cmd,w
  4604  0027  1D03               	btfss	3,2
  4605  0028  282C               	goto	i1l1798
  4606                           
  4607                           ;main.c: 87:                             analogMode = 1;
  4608  0029  01F8               	clrf	_analogMode
  4609  002A  0AF8               	incf	_analogMode,f
  4610  002B  2927               	goto	i1l1930
  4611  002C                     i1l1798:	
  4612                           
  4613                           ;main.c: 89:                             analogMode = 0;
  4614  002C  01F8               	clrf	_analogMode
  4615  002D  2927               	goto	i1l1930
  4616  002E                     i1l1800:	
  4617                           
  4618                           ;main.c: 94:                         if (cmd == 0x80) {
  4619  002E  3080               	movlw	128
  4620  002F  0674               	xorwf	PS2Command@cmd,w
  4621  0030  1D03               	btfss	3,2
  4622  0031  283C               	goto	i1l1810
  4623                           
  4624                           ;main.c: 95:                             response[2] = 0x00;
  4625  0032  0020               	movlb	0	; select bank0
  4626  0033  01CC               	clrf	_response+2
  4627                           
  4628                           ;main.c: 96:                             response[3] = 0x00;
  4629  0034  01CD               	clrf	_response+3
  4630                           
  4631                           ;main.c: 97:                             response[4] = 0x00;
  4632  0035  01CE               	clrf	_response+4
  4633                           
  4634                           ;main.c: 98:                             response[5] = 0x60;
  4635  0036  3060               	movlw	96
  4636  0037                     L3:	
  4637  0037  00F2               	movwf	??_PS2Command
  4638  0038  0872               	movf	??_PS2Command,w
  4639  0039  00CF               	movwf	_response+5
  4640                           
  4641                           ;main.c: 99:                             response[6] = 0x00;
  4642  003A  01D0               	clrf	_response+6
  4643  003B  28B0               	goto	L2
  4644  003C                     i1l1810:	
  4645                           ;main.c: 101:                         } else {
  4646                           
  4647                           ;main.c: 100:                             response[7] = 0x00;
  4648                           
  4649                           
  4650                           ;main.c: 102:                             response[2] = 0x00;
  4651  003C  0020               	movlb	0	; select bank0
  4652  003D  01CC               	clrf	_response+2
  4653                           
  4654                           ;main.c: 103:                             response[3] = 0x00;
  4655  003E  01CD               	clrf	_response+3
  4656                           
  4657                           ;main.c: 104:                             response[4] = 0x00;
  4658  003F  01CE               	clrf	_response+4
  4659                           
  4660                           ;main.c: 105:                             response[5] = 0x20;
  4661  0040  3020               	movlw	32
  4662  0041  2837               	goto	L3
  4663  0042                     i1l1820:	
  4664  0042  0875               	movf	_previousCmd,w
  4665  0043  00F2               	movwf	??_PS2Command
  4666  0044  01F3               	clrf	??_PS2Command+1
  4667                           
  4668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4669                           ; Switch size 1, requested type "simple"
  4670                           ; Number of cases is 1, Range of values is 0 to 0
  4671                           ; switch strategies available:
  4672                           ; Name         Instructions Cycles
  4673                           ; simple_byte            4     3 (average)
  4674                           ; direct_byte            8     6 (fixed)
  4675                           ; jumptable            260     6 (fixed)
  4676                           ;	Chosen strategy is simple_byte
  4677  0045  0873               	movf	??_PS2Command+1,w
  4678  0046  3A00               	xorlw	0	; case 0
  4679  0047  1903               	skipnz
  4680  0048  284A               	goto	i1l2580
  4681  0049  2927               	goto	i1l1930
  4682  004A                     i1l2580:	
  4683                           
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 5, Range of values is 34 to 242
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte           16     9 (average)
  4689                           ; jumptable            263     9 (fixed)
  4690                           ;	Chosen strategy is simple_byte
  4691  004A  0872               	movf	??_PS2Command,w
  4692  004B  3A22               	xorlw	34	; case 34
  4693  004C  1903               	skipnz
  4694  004D  2825               	goto	i1l1794
  4695  004E  3A10               	xorlw	16	; case 50
  4696  004F  1903               	skipnz
  4697  0050  282E               	goto	i1l1800
  4698  0051  3A70               	xorlw	112	; case 66
  4699  0052  1903               	skipnz
  4700  0053  2810               	goto	i1l1784
  4701  0054  3A80               	xorlw	128	; case 194
  4702  0055  1903               	skipnz
  4703  0056  281A               	goto	i1l1788
  4704  0057  3A30               	xorlw	48	; case 242
  4705  0058  1903               	skipnz
  4706  0059  2927               	goto	i1l1930
  4707  005A  2927               	goto	i1l1930
  4708  005B                     i1l1822:	
  4709  005B  2927               	goto	i1l1930
  4710  005C                     i1l1828:	
  4711  005C  0875               	movf	_previousCmd,w
  4712  005D  00F2               	movwf	??_PS2Command
  4713  005E  01F3               	clrf	??_PS2Command+1
  4714                           
  4715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4716                           ; Switch size 1, requested type "simple"
  4717                           ; Number of cases is 1, Range of values is 0 to 0
  4718                           ; switch strategies available:
  4719                           ; Name         Instructions Cycles
  4720                           ; simple_byte            4     3 (average)
  4721                           ; direct_byte            8     6 (fixed)
  4722                           ; jumptable            260     6 (fixed)
  4723                           ;	Chosen strategy is simple_byte
  4724  005F  0873               	movf	??_PS2Command+1,w
  4725  0060  3A00               	xorlw	0	; case 0
  4726  0061  1903               	skipnz
  4727  0062  2864               	goto	i1l2582
  4728  0063  2927               	goto	i1l1930
  4729  0064                     i1l2582:	
  4730                           
  4731                           ; Switch size 1, requested type "simple"
  4732                           ; Number of cases is 2, Range of values is 66 to 242
  4733                           ; switch strategies available:
  4734                           ; Name         Instructions Cycles
  4735                           ; simple_byte            7     4 (average)
  4736                           ; jumptable            263     9 (fixed)
  4737                           ;	Chosen strategy is simple_byte
  4738  0064  0872               	movf	??_PS2Command,w
  4739  0065  3A42               	xorlw	66	; case 66
  4740  0066  1903               	skipnz
  4741  0067  285B               	goto	i1l1822
  4742  0068  3AB0               	xorlw	176	; case 242
  4743  0069  1903               	skipnz
  4744  006A  2927               	goto	i1l1930
  4745  006B  2927               	goto	i1l1930
  4746  006C                     i1l1830:	
  4747                           
  4748                           ;main.c: 154:                         if (analogMode) {
  4749  006C  0878               	movf	_analogMode,w
  4750  006D  1903               	btfsc	3,2
  4751  006E  287D               	goto	i1l1838
  4752                           
  4753                           ;main.c: 155:                             response[2] = 0xFF;
  4754  006F  30FF               	movlw	255
  4755  0070  00F2               	movwf	??_PS2Command
  4756  0071  0872               	movf	??_PS2Command,w
  4757  0072  0020               	movlb	0	; select bank0
  4758  0073  00CC               	movwf	_response+2
  4759                           
  4760                           ;main.c: 156:                             response[3] = 0xFF;
  4761  0074  30FF               	movlw	255
  4762  0075  00F2               	movwf	??_PS2Command
  4763  0076  0872               	movf	??_PS2Command,w
  4764  0077  00CD               	movwf	_response+3
  4765                           
  4766                           ;main.c: 157:                             response[4] = 0xC0;
  4767  0078  30C0               	movlw	192
  4768  0079  00F2               	movwf	??_PS2Command
  4769  007A  0872               	movf	??_PS2Command,w
  4770  007B  00CE               	movwf	_response+4
  4771  007C  2881               	goto	L7
  4772  007D                     i1l1838:	
  4773                           ;main.c: 161:                         } else {
  4774                           
  4775                           ;main.c: 160:                             response[7] = 0x5A;
  4776                           
  4777                           ;main.c: 159:                             response[6] = 0x00;
  4778                           
  4779                           ;main.c: 158:                             response[5] = 0x00;
  4780                           
  4781                           
  4782                           ;main.c: 162:                             response[2] = 0x00;
  4783  007D  0020               	movlb	0	; select bank0
  4784  007E  01CC               	clrf	_response+2
  4785                           
  4786                           ;main.c: 163:                             response[3] = 0x00;
  4787  007F  01CD               	clrf	_response+3
  4788                           
  4789                           ;main.c: 164:                             response[4] = 0x00;
  4790  0080  01CE               	clrf	_response+4
  4791  0081                     L7:	
  4792                           
  4793                           ;main.c: 165:                             response[5] = 0x00;
  4794  0081  01CF               	clrf	_response+5
  4795                           
  4796                           ;main.c: 166:                             response[6] = 0x00;
  4797  0082  01D0               	clrf	_response+6
  4798                           
  4799                           ;main.c: 167:                             response[7] = 0x5A;
  4800  0083  305A               	movlw	90
  4801  0084  28E8               	goto	L5
  4802  0085                     i1l1842:	
  4803  0085  286C               	goto	i1l1830
  4804  0086                     i1l1854:	
  4805                           ;main.c: 178:                         if (analogMode) {
  4806                           
  4807                           
  4808                           ;main.c: 203:                         pollController(response);
  4809  0086  304A               	movlw	(low (_response| 0))& (0+255)
  4810  0087  3182  2285  3180   	fcall	_pollController
  4811  008A                     i1l1856:	
  4812                           
  4813                           ;main.c: 204:                         previousCmd = cmd;
  4814  008A  0874               	movf	PS2Command@cmd,w
  4815  008B  00F2               	movwf	??_PS2Command
  4816  008C  0872               	movf	??_PS2Command,w
  4817  008D  00F5               	movwf	_previousCmd
  4818                           
  4819                           ;main.c: 207:                         break;
  4820  008E  2927               	goto	i1l1930
  4821  008F                     i1l1858:	
  4822  008F  2886               	goto	i1l1854
  4823  0090                     i1l1862:	
  4824                           ;main.c: 215:                         pollController(response);
  4825                           
  4826                           
  4827                           ;main.c: 225:                         response[2] = 0x00;
  4828  0090  0020               	movlb	0	; select bank0
  4829  0091  01CC               	clrf	_response+2
  4830                           
  4831                           ;main.c: 226:                         response[3] = 0x00;
  4832  0092  01CD               	clrf	_response+3
  4833                           
  4834                           ;main.c: 227:                         response[4] = 0x00;
  4835  0093  01CE               	clrf	_response+4
  4836                           
  4837                           ;main.c: 228:                         response[5] = 0x00;
  4838  0094  01CF               	clrf	_response+5
  4839  0095  28D4               	goto	L8
  4840  0096                     i1l1866:	
  4841                           ;main.c: 230:                         response[7] = 0x00;
  4842                           
  4843                           ;main.c: 229:                         response[6] = 0x00;
  4844                           
  4845                           
  4846                           ;main.c: 244:                         response[2] = 0xC0;
  4847  0096  30C0               	movlw	192
  4848  0097  00F2               	movwf	??_PS2Command
  4849  0098  0872               	movf	??_PS2Command,w
  4850  0099  0020               	movlb	0	; select bank0
  4851  009A  00CC               	movwf	_response+2
  4852                           
  4853                           ;main.c: 245:                         response[3] = 0x40;
  4854  009B  3040               	movlw	64
  4855  009C  00F2               	movwf	??_PS2Command
  4856  009D  0872               	movf	??_PS2Command,w
  4857  009E  00CD               	movwf	_response+3
  4858                           
  4859                           ;main.c: 247:                         if (analogMode)
  4860  009F  0878               	movf	_analogMode,w
  4861  00A0  1903               	btfsc	3,2
  4862  00A1  28A7               	goto	i1l1872
  4863                           
  4864                           ;main.c: 248:                             response[4] = 0x80;
  4865  00A2  3080               	movlw	128
  4866  00A3  00F2               	movwf	??_PS2Command
  4867  00A4  0872               	movf	??_PS2Command,w
  4868  00A5  00CE               	movwf	_response+4
  4869  00A6  28A8               	goto	i1l1874
  4870  00A7                     i1l1872:	
  4871                           
  4872                           ;main.c: 250:                             response[4] = 0x00;
  4873  00A7  01CE               	clrf	_response+4
  4874  00A8                     i1l1874:	
  4875                           
  4876                           ;main.c: 252:                         response[5] = 0x40;
  4877  00A8  3040               	movlw	64
  4878  00A9  00F2               	movwf	??_PS2Command
  4879  00AA  0872               	movf	??_PS2Command,w
  4880  00AB  00CF               	movwf	_response+5
  4881  00AC                     L9:	
  4882                           
  4883                           ;main.c: 253:                         response[6] = 0x80;
  4884  00AC  3080               	movlw	128
  4885  00AD  00F2               	movwf	??_PS2Command
  4886  00AE  0872               	movf	??_PS2Command,w
  4887  00AF  00D0               	movwf	_response+6
  4888  00B0                     L2:	
  4889                           
  4890                           ;main.c: 254:                         response[7] = 0x00;
  4891  00B0  01D1               	clrf	_response+7
  4892                           
  4893                           ;main.c: 257:                         break;
  4894  00B1  2927               	goto	i1l1930
  4895  00B2                     i1l1878:	
  4896                           
  4897                           ;main.c: 265:                         response[2] = 0x00;
  4898  00B2  0020               	movlb	0	; select bank0
  4899  00B3  01CC               	clrf	_response+2
  4900                           
  4901                           ;main.c: 266:                         response[3] = 0x00;
  4902  00B4  01CD               	clrf	_response+3
  4903                           
  4904                           ;main.c: 267:                         response[4] = 0x80;
  4905  00B5  3080               	movlw	128
  4906  00B6  00F2               	movwf	??_PS2Command
  4907  00B7  0872               	movf	??_PS2Command,w
  4908  00B8  00CE               	movwf	_response+4
  4909                           
  4910                           ;main.c: 268:                         response[5] = 0x80;
  4911  00B9  3080               	movlw	128
  4912  00BA  00F2               	movwf	??_PS2Command
  4913  00BB  0872               	movf	??_PS2Command,w
  4914  00BC  00CF               	movwf	_response+5
  4915                           
  4916                           ;main.c: 269:                         response[6] = 0x80;
  4917  00BD  3080               	movlw	128
  4918  00BE  00F2               	movwf	??_PS2Command
  4919  00BF  0872               	movf	??_PS2Command,w
  4920  00C0  00D0               	movwf	_response+6
  4921                           
  4922                           ;main.c: 270:                         response[7] = 0x50;
  4923  00C1  3050               	movlw	80
  4924  00C2  28E8               	goto	L5
  4925  00C3                     i1l1888:	
  4926                           ;main.c: 272:                         break;
  4927                           
  4928                           
  4929                           ;main.c: 281:                         response[2] = 0x00;
  4930  00C3  0020               	movlb	0	; select bank0
  4931  00C4  01CC               	clrf	_response+2
  4932                           
  4933                           ;main.c: 282:                         response[3] = 0x00;
  4934  00C5  01CD               	clrf	_response+3
  4935                           
  4936                           ;main.c: 283:                         response[4] = 0x40;
  4937  00C6  3040               	movlw	64
  4938  00C7  00F2               	movwf	??_PS2Command
  4939  00C8  0872               	movf	??_PS2Command,w
  4940  00C9  00CE               	movwf	_response+4
  4941                           
  4942                           ;main.c: 284:                         response[5] = 0x00;
  4943  00CA  01CF               	clrf	_response+5
  4944  00CB  28AC               	goto	L9
  4945  00CC                     i1l1896:	
  4946                           ;main.c: 285:                         response[6] = 0x80;
  4947                           
  4948                           
  4949                           ;main.c: 298:                         response[2] = 0x00;
  4950  00CC  0020               	movlb	0	; select bank0
  4951  00CD  01CC               	clrf	_response+2
  4952                           
  4953                           ;main.c: 299:                         response[3] = 0x00;
  4954  00CE  01CD               	clrf	_response+3
  4955                           
  4956                           ;main.c: 300:                         response[4] = 0x00;
  4957  00CF  01CE               	clrf	_response+4
  4958                           
  4959                           ;main.c: 301:                         response[5] = 0x20;
  4960  00D0  3020               	movlw	32
  4961  00D1  00F2               	movwf	??_PS2Command
  4962  00D2  0872               	movf	??_PS2Command,w
  4963  00D3  00CF               	movwf	_response+5
  4964  00D4                     L8:	
  4965                           
  4966                           ;main.c: 302:                         response[6] = 0x00;
  4967  00D4  01D0               	clrf	_response+6
  4968                           
  4969                           ;main.c: 303:                         response[7] = 0x00;
  4970  00D5  01D1               	clrf	_response+7
  4971  00D6  288A               	goto	i1l1856
  4972  00D7                     i1l1906:	
  4973                           
  4974                           ;main.c: 317:                         response[2] = 0x00;
  4975  00D7  0020               	movlb	0	; select bank0
  4976  00D8  01CC               	clrf	_response+2
  4977                           
  4978                           ;main.c: 318:                         response[3] = 0x01;
  4979  00D9  01CD               	clrf	_response+3
  4980  00DA  0ACD               	incf	_response+3,f
  4981                           
  4982                           ;main.c: 319:                         response[4] = 0xFF;
  4983  00DB  30FF               	movlw	255
  4984  00DC  00F2               	movwf	??_PS2Command
  4985  00DD  0872               	movf	??_PS2Command,w
  4986  00DE  00CE               	movwf	_response+4
  4987                           
  4988                           ;main.c: 320:                         response[5] = 0xFF;
  4989  00DF  30FF               	movlw	255
  4990  00E0  00F2               	movwf	??_PS2Command
  4991  00E1  0872               	movf	??_PS2Command,w
  4992  00E2  00CF               	movwf	_response+5
  4993                           
  4994                           ;main.c: 321:                         response[6] = 0xFF;
  4995  00E3  30FF               	movlw	255
  4996  00E4  00F2               	movwf	??_PS2Command
  4997  00E5  0872               	movf	??_PS2Command,w
  4998  00E6  00D0               	movwf	_response+6
  4999                           
  5000                           ;main.c: 322:                         response[7] = 0xFF;
  5001  00E7  30FF               	movlw	255
  5002  00E8                     L5:	
  5003  00E8  00F2               	movwf	??_PS2Command
  5004  00E9  0872               	movf	??_PS2Command,w
  5005  00EA  00D1               	movwf	_response+7
  5006                           
  5007                           ;main.c: 324:                         break;
  5008  00EB  2927               	goto	i1l1930
  5009  00EC                     i1l1924:	
  5010  00EC  0874               	movf	PS2Command@cmd,w
  5011  00ED  00F2               	movwf	??_PS2Command
  5012  00EE  01F3               	clrf	??_PS2Command+1
  5013                           
  5014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5015                           ; Switch size 1, requested type "simple"
  5016                           ; Number of cases is 1, Range of values is 0 to 0
  5017                           ; switch strategies available:
  5018                           ; Name         Instructions Cycles
  5019                           ; simple_byte            4     3 (average)
  5020                           ; direct_byte            8     6 (fixed)
  5021                           ; jumptable            260     6 (fixed)
  5022                           ;	Chosen strategy is simple_byte
  5023  00EF  0873               	movf	??_PS2Command+1,w
  5024  00F0  3A00               	xorlw	0	; case 0
  5025  00F1  1903               	skipnz
  5026  00F2  28F4               	goto	i1l2584
  5027  00F3  2927               	goto	i1l1930
  5028  00F4                     i1l2584:	
  5029                           
  5030                           ; Switch size 1, requested type "simple"
  5031                           ; Number of cases is 11, Range of values is 2 to 242
  5032                           ; switch strategies available:
  5033                           ; Name         Instructions Cycles
  5034                           ; simple_byte           34    18 (average)
  5035                           ; jumptable            263     9 (fixed)
  5036                           ;	Chosen strategy is simple_byte
  5037  00F4  0872               	movf	??_PS2Command,w
  5038  00F5  3A02               	xorlw	2	; case 2
  5039  00F6  1903               	skipnz
  5040  00F7  286C               	goto	i1l1830
  5041  00F8  3A10               	xorlw	16	; case 18
  5042  00F9  1903               	skipnz
  5043  00FA  2885               	goto	i1l1842
  5044  00FB  3A30               	xorlw	48	; case 34
  5045  00FC  1903               	skipnz
  5046  00FD  2890               	goto	i1l1862
  5047  00FE  3A10               	xorlw	16	; case 50
  5048  00FF  1903               	skipnz
  5049  0100  28CC               	goto	i1l1896
  5050  0101  3A70               	xorlw	112	; case 66
  5051  0102  1903               	skipnz
  5052  0103  2886               	goto	i1l1854
  5053  0104  3A20               	xorlw	32	; case 98
  5054  0105  1903               	skipnz
  5055  0106  28B2               	goto	i1l1878
  5056  0107  3AC0               	xorlw	192	; case 162
  5057  0108  1903               	skipnz
  5058  0109  2896               	goto	i1l1866
  5059  010A  3A10               	xorlw	16	; case 178
  5060  010B  1903               	skipnz
  5061  010C  28D7               	goto	i1l1906
  5062  010D  3A70               	xorlw	112	; case 194
  5063  010E  1903               	skipnz
  5064  010F  288F               	goto	i1l1858
  5065  0110  3A20               	xorlw	32	; case 226
  5066  0111  1903               	skipnz
  5067  0112  28C3               	goto	i1l1888
  5068  0113  3A10               	xorlw	16	; case 242
  5069  0114  1903               	skipnz
  5070  0115  287D               	goto	i1l1838
  5071  0116  2927               	goto	i1l1930
  5072  0117                     i1l1928:	
  5073  0117  0876               	movf	_cmdCounter,w
  5074  0118  00F2               	movwf	??_PS2Command
  5075  0119  01F3               	clrf	??_PS2Command+1
  5076                           
  5077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5078                           ; Switch size 1, requested type "simple"
  5079                           ; Number of cases is 1, Range of values is 0 to 0
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte            4     3 (average)
  5083                           ; direct_byte            8     6 (fixed)
  5084                           ; jumptable            260     6 (fixed)
  5085                           ;	Chosen strategy is simple_byte
  5086  011A  0873               	movf	??_PS2Command+1,w
  5087  011B  3A00               	xorlw	0	; case 0
  5088  011C  1903               	skipnz
  5089  011D  291F               	goto	i1l2586
  5090  011E  28EC               	goto	i1l1924
  5091  011F                     i1l2586:	
  5092                           
  5093                           ; Switch size 1, requested type "simple"
  5094                           ; Number of cases is 2, Range of values is 3 to 4
  5095                           ; switch strategies available:
  5096                           ; Name         Instructions Cycles
  5097                           ; simple_byte            7     4 (average)
  5098                           ; direct_byte           13     9 (fixed)
  5099                           ; jumptable            263     9 (fixed)
  5100                           ;	Chosen strategy is simple_byte
  5101  011F  0872               	movf	??_PS2Command,w
  5102  0120  3A03               	xorlw	3	; case 3
  5103  0121  1903               	skipnz
  5104  0122  2842               	goto	i1l1820
  5105  0123  3A07               	xorlw	7	; case 4
  5106  0124  1903               	skipnz
  5107  0125  285C               	goto	i1l1828
  5108  0126  28EC               	goto	i1l1924
  5109  0127                     i1l1930:	
  5110                           
  5111                           ;main.c: 349:         if (escapeMode) {
  5112  0127  0020               	movlb	0	; select bank0
  5113  0128  0840               	movf	_escapeMode,w
  5114  0129  1903               	btfsc	3,2
  5115  012A  292D               	goto	i1l1934
  5116                           
  5117                           ;main.c: 350:             response[0] = 0xCF;
  5118  012B  30CF               	movlw	207
  5119  012C  2933               	goto	L6
  5120  012D                     i1l1934:	
  5121                           ;main.c: 351:         } else {
  5122                           
  5123                           
  5124                           ;main.c: 353:             if (analogMode)
  5125  012D  0878               	movf	_analogMode,w
  5126  012E  1903               	btfsc	3,2
  5127  012F  2932               	goto	i1l1938
  5128                           
  5129                           ;main.c: 354:                 response[0] = 0x9E;
  5130  0130  309E               	movlw	158
  5131  0131  2933               	goto	L6
  5132  0132                     i1l1938:	
  5133                           
  5134                           ;main.c: 356:                 response[0] = 0x82;
  5135  0132  3082               	movlw	130
  5136  0133                     L6:	
  5137  0133  00F2               	movwf	??_PS2Command
  5138  0134  0872               	movf	??_PS2Command,w
  5139  0135  00CA               	movwf	_response
  5140                           
  5141                           ;main.c: 362:         spiWrite(response[cmdCounter]);
  5142  0136  0876               	movf	_cmdCounter,w
  5143  0137  3E4A               	addlw	(low (_response| 0))& (0+255)
  5144  0138  0086               	movwf	6
  5145  0139  0187               	clrf	7
  5146  013A  0801               	movf	1,w
  5147  013B  3184  248F  3180   	fcall	_spiWrite
  5148                           
  5149                           ;main.c: 365:         if (cmdCounter < responseLength) {
  5150  013E  0020               	movlb	0	; select bank0
  5151  013F  0842               	movf	_responseLength,w
  5152  0140  0276               	subwf	_cmdCounter,w
  5153  0141  1803               	skipnc
  5154  0142  2947               	goto	i1l1946
  5155                           
  5156                           ;main.c: 366:             cmdCounter++;
  5157  0143  3001               	movlw	1
  5158  0144  00F2               	movwf	??_PS2Command
  5159  0145  0872               	movf	??_PS2Command,w
  5160  0146  07F6               	addwf	_cmdCounter,f
  5161  0147                     i1l1946:	
  5162                           
  5163                           ;main.c: 370:         RA4 = 0;
  5164  0147  120C               	bcf	12,4	;volatile
  5165                           
  5166                           ;main.c: 371:         _delay((unsigned long)((1)*(32000000/4000000.0)));
  5167  0148  3200               	nop2	;2 cycle nop
  5168  0149  3200               	nop2	;2 cycle nop
  5169  014A  3200               	nop2	;2 cycle nop
  5170  014B  3200               	nop2	;2 cycle nop
  5171                           
  5172                           ;main.c: 372:         RA4 = 1;
  5173  014C  0020               	movlb	0	; select bank0
  5174  014D  160C               	bsf	12,4	;volatile
  5175                           
  5176                           ;main.c: 374:         SSP1IF = 0;
  5177  014E  002E               	movlb	14	; select bank14
  5178  014F  100F               	bcf	15,0	;volatile
  5179  0150                     i1l138:	
  5180  0150  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5181  0151  0009               	retfie
  5182  0152                     __end_of_PS2Command:	
  5183                           
  5184                           	psect	text12
  5185  048F                     __ptext12:	
  5186 ;; *************** function _spiWrite *****************
  5187 ;; Defined at:
  5188 ;;		line 32 in file "Spi.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  dat             1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  dat             1    0[COMMON] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_PS2Command
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _spiWrite
  5217  048F                     _spiWrite:	
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _spiWrite: [wreg]
  5221                           ;spiWrite@dat stored from wreg
  5222  048F  00F0               	movwf	spiWrite@dat
  5223                           
  5224                           ;Spi.c: 32: void spiWrite(char dat);Spi.c: 33: {;Spi.c: 34:     SSP1BUF = dat;
  5225  0490  0870               	movf	spiWrite@dat,w
  5226  0491  0023               	movlb	3	; select bank3
  5227  0492  008C               	movwf	12	;volatile
  5228  0493  0008               	return
  5229  0494                     __end_of_spiWrite:	
  5230                           
  5231                           	psect	text13
  5232  0494                     __ptext13:	
  5233 ;; *************** function _spiRead *****************
  5234 ;; Defined at:
  5235 ;;		line 37 in file "Spi.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      unsigned char 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, pclath, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5253 ;;Total ram usage:        0 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    1
  5256 ;; This function calls:
  5257 ;;		_spiReceiveWait
  5258 ;; This function is called by:
  5259 ;;		_PS2Command
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           
  5264                           ;psect for function _spiRead
  5265  0494                     _spiRead:	
  5266                           
  5267                           ;Spi.c: 39:     spiReceiveWait();
  5268                           
  5269                           ;incstack = 0
  5270                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  5271  0494  3184  2499         	fcall	_spiReceiveWait
  5272                           
  5273                           ;Spi.c: 40:     return(SSP1BUF);
  5274  0496  0023               	movlb	3	; select bank3
  5275  0497  080C               	movf	12,w	;volatile
  5276  0498  0008               	return
  5277  0499                     __end_of_spiRead:	
  5278                           
  5279                           	psect	text14
  5280  0499                     __ptext14:	
  5281 ;; *************** function _spiReceiveWait *****************
  5282 ;; Defined at:
  5283 ;;		line 27 in file "Spi.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		None
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_spiRead
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _spiReceiveWait
  5312  0499                     _spiReceiveWait:	
  5313  0499                     i1l373:	
  5314                           ;Spi.c: 29:     while ( !SSP1STATbits.BF );
  5315                           
  5316                           ;incstack = 0
  5317                           ; Regs used in _spiReceiveWait: []
  5318                           
  5319  0499  0023               	movlb	3	; select bank3
  5320  049A  180F               	btfsc	15,0	;volatile
  5321  049B  0008               	return
  5322  049C  2C99               	goto	i1l373
  5323  049D                     __end_of_spiReceiveWait:	
  5324                           
  5325                           	psect	text15
  5326  0285                     __ptext15:	
  5327 ;; *************** function _pollController *****************
  5328 ;; Defined at:
  5329 ;;		line 23 in file "main.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  response        1    wreg     PTR unsigned char 
  5332 ;;		 -> response(20), 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  response        1    1[COMMON] PTR unsigned char 
  5335 ;;		 -> response(20), 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5349 ;;Total ram usage:        2 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_PS2Command
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _pollController
  5360  0285                     _pollController:	
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  5364                           ;pollController@response stored from wreg
  5365  0285  00F1               	movwf	pollController@response
  5366                           
  5367                           ;main.c: 25:     responseLength = 5;
  5368  0286  3005               	movlw	5
  5369  0287  00F0               	movwf	??_pollController
  5370  0288  0870               	movf	??_pollController,w
  5371  0289  0020               	movlb	0	; select bank0
  5372  028A  00C2               	movwf	_responseLength
  5373                           
  5374                           ;main.c: 27:     response[2] = digitalStateFirst;
  5375  028B  0879               	movf	_digitalStateFirst,w
  5376  028C  00F0               	movwf	??_pollController
  5377  028D  0871               	movf	pollController@response,w
  5378  028E  3E02               	addlw	2
  5379  028F  0086               	movwf	6
  5380  0290  0187               	clrf	7
  5381  0291  0870               	movf	??_pollController,w
  5382  0292  0081               	movwf	1
  5383                           
  5384                           ;main.c: 28:     response[3] = digitalStateSecond;
  5385  0293  0849               	movf	_digitalStateSecond,w
  5386  0294  00F0               	movwf	??_pollController
  5387  0295  0871               	movf	pollController@response,w
  5388  0296  3E03               	addlw	3
  5389  0297  0086               	movwf	6
  5390  0298  0187               	clrf	7
  5391  0299  0870               	movf	??_pollController,w
  5392  029A  0081               	movwf	1
  5393                           
  5394                           ;main.c: 30:     response[4] = rxData;
  5395  029B  0848               	movf	_rxData,w
  5396  029C  00F0               	movwf	??_pollController
  5397  029D  0871               	movf	pollController@response,w
  5398  029E  3E04               	addlw	4
  5399  029F  0086               	movwf	6
  5400  02A0  0187               	clrf	7
  5401  02A1  0870               	movf	??_pollController,w
  5402  02A2  0081               	movwf	1
  5403                           
  5404                           ;main.c: 31:     response[5] = ryData;
  5405  02A3  0847               	movf	_ryData,w
  5406  02A4  00F0               	movwf	??_pollController
  5407  02A5  0871               	movf	pollController@response,w
  5408  02A6  3E05               	addlw	5
  5409  02A7  0086               	movwf	6
  5410  02A8  0187               	clrf	7
  5411  02A9  0870               	movf	??_pollController,w
  5412  02AA  0081               	movwf	1
  5413                           
  5414                           ;main.c: 32:     response[6] = lxData;
  5415  02AB  0846               	movf	_lxData,w
  5416  02AC  00F0               	movwf	??_pollController
  5417  02AD  0871               	movf	pollController@response,w
  5418  02AE  3E06               	addlw	6
  5419  02AF  0086               	movwf	6
  5420  02B0  0187               	clrf	7
  5421  02B1  0870               	movf	??_pollController,w
  5422  02B2  0081               	movwf	1
  5423                           
  5424                           ;main.c: 33:     response[7] = lyData;
  5425  02B3  0845               	movf	_lyData,w
  5426  02B4  00F0               	movwf	??_pollController
  5427  02B5  0871               	movf	pollController@response,w
  5428  02B6  3E07               	addlw	7
  5429  02B7  0086               	movwf	6
  5430  02B8  0187               	clrf	7
  5431  02B9  0870               	movf	??_pollController,w
  5432  02BA  0081               	movwf	1
  5433                           
  5434                           ;main.c: 35:     if (analogMode) {
  5435  02BB  0878               	movf	_analogMode,w
  5436  02BC  1903               	btfsc	3,2
  5437  02BD  0008               	return
  5438                           
  5439                           ;main.c: 37:         responseLength = 20;
  5440  02BE  3014               	movlw	20
  5441  02BF  00F0               	movwf	??_pollController
  5442  02C0  0870               	movf	??_pollController,w
  5443  02C1  00C2               	movwf	_responseLength
  5444                           
  5445                           ;main.c: 39:         response[8] = analogStateFirst[2];
  5446  02C2  083A               	movf	_analogStateFirst+2,w
  5447  02C3  00F0               	movwf	??_pollController
  5448  02C4  0871               	movf	pollController@response,w
  5449  02C5  3E08               	addlw	8
  5450  02C6  0086               	movwf	6
  5451  02C7  0187               	clrf	7
  5452  02C8  0870               	movf	??_pollController,w
  5453  02C9  0081               	movwf	1
  5454                           
  5455                           ;main.c: 40:         response[9] = analogStateFirst[0];
  5456  02CA  0838               	movf	_analogStateFirst,w
  5457  02CB  00F0               	movwf	??_pollController
  5458  02CC  0871               	movf	pollController@response,w
  5459  02CD  3E09               	addlw	9
  5460  02CE  0086               	movwf	6
  5461  02CF  0187               	clrf	7
  5462  02D0  0870               	movf	??_pollController,w
  5463  02D1  0081               	movwf	1
  5464                           
  5465                           ;main.c: 41:         response[10] = analogStateFirst[3];
  5466  02D2  083B               	movf	_analogStateFirst+3,w
  5467  02D3  00F0               	movwf	??_pollController
  5468  02D4  0871               	movf	pollController@response,w
  5469  02D5  3E0A               	addlw	10
  5470  02D6  0086               	movwf	6
  5471  02D7  0187               	clrf	7
  5472  02D8  0870               	movf	??_pollController,w
  5473  02D9  0081               	movwf	1
  5474                           
  5475                           ;main.c: 42:         response[11] = analogStateFirst[1];
  5476  02DA  0839               	movf	_analogStateFirst+1,w
  5477  02DB  00F0               	movwf	??_pollController
  5478  02DC  0871               	movf	pollController@response,w
  5479  02DD  3E0B               	addlw	11
  5480  02DE  0086               	movwf	6
  5481  02DF  0187               	clrf	7
  5482  02E0  0870               	movf	??_pollController,w
  5483  02E1  0081               	movwf	1
  5484                           
  5485                           ;main.c: 43:         response[12] = analogStateSecond[3];
  5486  02E2  0833               	movf	_analogStateSecond+3,w
  5487  02E3  00F0               	movwf	??_pollController
  5488  02E4  0871               	movf	pollController@response,w
  5489  02E5  3E0C               	addlw	12
  5490  02E6  0086               	movwf	6
  5491  02E7  0187               	clrf	7
  5492  02E8  0870               	movf	??_pollController,w
  5493  02E9  0081               	movwf	1
  5494                           
  5495                           ;main.c: 44:         response[13] = analogStateSecond[2];
  5496  02EA  0832               	movf	_analogStateSecond+2,w
  5497  02EB  00F0               	movwf	??_pollController
  5498  02EC  0871               	movf	pollController@response,w
  5499  02ED  3E0D               	addlw	13
  5500  02EE  0086               	movwf	6
  5501  02EF  0187               	clrf	7
  5502  02F0  0870               	movf	??_pollController,w
  5503  02F1  0081               	movwf	1
  5504                           
  5505                           ;main.c: 45:         response[14] = analogStateSecond[1];
  5506  02F2  0831               	movf	_analogStateSecond+1,w
  5507  02F3  00F0               	movwf	??_pollController
  5508  02F4  0871               	movf	pollController@response,w
  5509  02F5  3E0E               	addlw	14
  5510  02F6  0086               	movwf	6
  5511  02F7  0187               	clrf	7
  5512  02F8  0870               	movf	??_pollController,w
  5513  02F9  0081               	movwf	1
  5514                           
  5515                           ;main.c: 46:         response[15] = analogStateSecond[0];
  5516  02FA  0830               	movf	_analogStateSecond,w
  5517  02FB  00F0               	movwf	??_pollController
  5518  02FC  0871               	movf	pollController@response,w
  5519  02FD  3E0F               	addlw	15
  5520  02FE  0086               	movwf	6
  5521  02FF  0187               	clrf	7
  5522  0300  0870               	movf	??_pollController,w
  5523  0301  0081               	movwf	1
  5524                           
  5525                           ;main.c: 47:         response[16] = analogStateSecond[5];
  5526  0302  0835               	movf	_analogStateSecond+5,w
  5527  0303  00F0               	movwf	??_pollController
  5528  0304  0871               	movf	pollController@response,w
  5529  0305  3E10               	addlw	16
  5530  0306  0086               	movwf	6
  5531  0307  0187               	clrf	7
  5532  0308  0870               	movf	??_pollController,w
  5533  0309  0081               	movwf	1
  5534                           
  5535                           ;main.c: 48:         response[17] = analogStateSecond[4];
  5536  030A  0834               	movf	_analogStateSecond+4,w
  5537  030B  00F0               	movwf	??_pollController
  5538  030C  0871               	movf	pollController@response,w
  5539  030D  3E11               	addlw	17
  5540  030E  0086               	movwf	6
  5541  030F  0187               	clrf	7
  5542  0310  0870               	movf	??_pollController,w
  5543  0311  0081               	movwf	1
  5544                           
  5545                           ;main.c: 49:         response[18] = analogStateSecond[7];
  5546  0312  0837               	movf	_analogStateSecond+7,w
  5547  0313  00F0               	movwf	??_pollController
  5548  0314  0871               	movf	pollController@response,w
  5549  0315  3E12               	addlw	18
  5550  0316  0086               	movwf	6
  5551  0317  0187               	clrf	7
  5552  0318  0870               	movf	??_pollController,w
  5553  0319  0081               	movwf	1
  5554                           
  5555                           ;main.c: 50:         response[19] = analogStateSecond[6];
  5556  031A  0836               	movf	_analogStateSecond+6,w
  5557  031B  00F0               	movwf	??_pollController
  5558  031C  0871               	movf	pollController@response,w
  5559  031D  3E13               	addlw	19
  5560  031E  0086               	movwf	6
  5561  031F  0187               	clrf	7
  5562  0320  0870               	movf	??_pollController,w
  5563  0321  0081               	movwf	1
  5564  0322  0008               	return
  5565  0323                     __end_of_pollController:	
  5566  007E                     btemp	set	126	;btemp
  5567  007E                     int$flags	set	126
  5568  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         69
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     14      76
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_readControllerAnalog
    _readControllerAnalog->_readADC
    _picInit->_spiInit

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1370
                                             10 BANK0      4     4      0
                            _adcInit
                _configureController
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 1     1      0     617
                                              9 BANK0      1     1      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2     391
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureController                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _PS2Command                                           3     3      0     705
                                              2 COMMON     3     3      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _configureController
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      76      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      76      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 13 20:36:56 2019

                  __CFG_CP$OFF 0000                    __CFG_LVP$ON 0000                            l241 022A  
                          l243 0249                            l148 0387                            l245 0268  
                          l237 01D3                            l253 041D                            _RA0 0060  
                          _RA1 0061                            _RB0 0068                            _RA2 0062  
                          _RB1 0069                            _RA3 0063                            _RA4 0064  
                          _RB2 006A                            _RB3 006B                            _RA5 0065  
                          _RA6 0066                            _RD0 0078                            _RC2 0072  
                          _RB4 006C                            _RA7 0067                            _RB5 006D  
                          _RB6 006E                            _RB7 006F                            _RD4 007C  
                          _PR2 028D                   __CFG_CPD$OFF 0000                            u905 03E4  
                          u915 03EA                            u925 03F7                            u935 03FD  
                          u945 040A                            u885 0423                            u895 042F  
                 __CFG_BORV$LO 0000                            wreg 0009                   __CFG_ZCD$OFF 0000  
                         l2310 01E2                           l2320 0206                           l2252 0460  
                         l2360 037B                           l2352 0372                           l2378 039C  
                         u1004 01F8                           u1005 01F7                           u1034 021C  
                         u1035 021B                           u1064 0237                           u1065 0236  
                         u1094 0256                           u1095 0255                           i1l92 0017  
                         _WPUA 0F39                           _WPUB 0F44                           _WPUC 0F4F  
                         _WPUD 0F5A                           _WPUE 0F65                   __CFG_WRT$OFF 0000  
                __CFG_FCMEN$ON 0000                           _main 0364                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0152                    ?_PS2Command 0070  
                __CFG_CSWEN$ON 0000                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0474  
                        _ADREF 009A                          _ADPRE 009C                  __CFG_WDTE$OFF 0000  
     main@slaveSelectStatePrev 0069                          i1l138 0150                          i1l373 0499  
                        _TRISA 0011                          _TRISB 0012                          _TRISC 0013  
                        _TRISD 0014                          _TRISE 0015    __end_of_configureController 04A0  
              __end_of_readADC 043E                __end_of_picInit 03DE                          _index 0077  
__size_of_readControllerAnalog 0041                __end_of_ppsLock 047C                __end_of_spiInit 046A  
              __end_of_spiRead 0499                          status 0003                          wtemp0 007E  
                PS2Command@cmd 0074                 __CFG_MCLRE$OFF 0000                __initialization 0154  
                 __end_of_main 03A4                         ??_main 0068            __size_of_PS2Command 014E  
                       _ADCON0 0093                         _ADCON1 0094                         _ADCON2 0095  
                       _ADRESH 008D                         _ADRESL 008C                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0  
                       _RC3PPS 0F23                         _RD1PPS 0F29                         _RC5PPS 0F25  
                       i1l1800 002E                         i1l1810 003C                         i1l1820 0042  
                       i1l1830 006C                         i1l1822 005B                         i1l1906 00D7  
                       i1l1842 0085                         i1l1930 0127                         i1l1924 00EC  
                       i1l1828 005C                         i1l2580 004A                         i1l1934 012D  
                       i1l1862 0090                         i1l1854 0086                         i1l1838 007D  
                       i1l2582 0064                         i1l2584 00F4                         i1l1872 00A7  
                       i1l1856 008A                         i1l1792 0022                         i1l1784 0010  
                       i1l1928 0117                         i1l1946 0147                         i1l1938 0132  
                       i1l2586 011F                         i1l1874 00A8                         i1l1866 0096  
                       i1l1858 008F                         i1l1794 0025                         i1l1788 001A  
                       i1l1878 00B2                         i1l1798 002C                         i1l1896 00CC  
                       i1l1888 00C3                 __CFG_WDTCCS$SC 0000                         _SSP1IE 38C8  
                       _SSP1IF 3878                 __CFG_PWRTE$OFF 0000                      ??_adcInit 005E  
               __CFG_STVREN$ON 0000        __size_of_pollController 009E                         _lxData 0046  
                       _lyData 0045                         _rxData 0048                         _ryData 0047  
                 ?_reversebyte 0070                      ??_readADC 0060                      ??_picInit 0062  
                 __pdataCOMMON 0078               __end_of_spiWrite 0494                      ??_ppsLock 005E  
                    ??_spiInit 0061                      ??_spiRead 0070              _IndexDigitalByte1 00A8  
            _IndexDigitalByte2 00A0        __end_of__initialization 017A                 __pcstackCOMMON 0070  
                 __pidataBANK0 043E         _DigitalControllerByte1 0028         _DigitalControllerByte2 0020  
      __size_of_readController 0107                     _cmdCounter 0076                     __pbssBANK0 0020  
                   __pbssBANK1 00A0                     _analogMode 0078                   ??_PS2Command 0072  
                   __pmaintext 0364                     __pintentry 0004        __size_of_spiReceiveWait 0004  
          __CFG_RSTOSC$HFINT32 0000             __size_of_ppsUnlock 0007                        _PWM6DCH 038D  
                      _PWM6DCL 038C                        _PWM7DCH 0391                        _PWM7DCL 0390  
           __end_of_PS2Command 0152                        _PPSLOCK 0E8F                        _SSP1BUF 018C  
                   _escapeMode 0040       readController@analogMode 0060   __end_of_readControllerAnalog 0364  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 046A  
               _pollController 0285                        __ptext1 0323                        __ptext2 03DE  
                      __ptext3 0415                        __ptext4 017E                        __ptext5 03A4  
                      __ptext6 045A                        __ptext7 047C                        __ptext8 0474  
                      __ptext9 049F                        _readADC 0415                        _picInit 03A4  
         __size_of_reversebyte 0037                      _T2CONbits 028E                        _ppsLock 0474  
                      _spiInit 045A                        _spiRead 0494                        clrloop0 048A  
         end_of_initialization 017A                        init_ram 0483   __size_of_configureController 0001  
                      initloop 0484              __end_of_ppsUnlock 0483         __end_of_pollController 0323  
                   ??_spiWrite 0070                reversebyte@byte 0061          __CFG_WDTCPS$WDTCPS_31 0000  
               _readController 017E                      _TRISAbits 0011                      _TRISCbits 0013  
                    _TRISDbits 0014                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
           _digitalStateSecond 0049                ?_pollController 0070                 _spiReceiveWait 0499  
                __pidataCOMMON 049D         __end_of_readController 0285            start_initialization 0154  
         _readControllerAnalog 0323                  _debounceLoops 0044               __CFG_LPBOREN$OFF 0000  
       __end_of_spiReceiveWait 049D                    __pdataBANK0 0042                ?_readController 0070  
                  __pbssCOMMON 0075                      ___latbits 0003                  __pcstackBANK0 005E  
        ?_readControllerAnalog 0070                 _responseLength 0042              _analogStateSecond 0030  
                    _analogMax 0043                      _analogMin 0041                ?_spiReceiveWait 0070  
                     ?_adcInit 0070               __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005  
          _configureController 049F                       ?_readADC 005E                       ?_picInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 005E                       ?_spiRead 0070  
         spiInit@sTransmitEdge 0060           ?_configureController 0070                      clear_ram0 0489  
           spiInit@sDataSample 005E                      _ppsUnlock 047C                       _SSP1CON1 0190  
                     _SSP1STAT 018F                  ??_reversebyte 005E                     _ADCON0bits 0093  
            _digitalStateFirst 0079                      main@count 006A         ??_readControllerAnalog 0067  
        ??_configureController 005E               ??_pollController 0070                     ?_ppsUnlock 0070  
             __size_of_adcInit 000A                 readADC@channel 005E               _analogStateFirst 0038  
             __size_of_readADC 0029               __size_of_picInit 003A            __end_of_reversebyte 0415  
                     __ptext10 046A                       __ptext12 048F                       __ptext13 0494  
                     __ptext14 0499                       __ptext15 0285               __size_of_ppsLock 0008  
             __size_of_spiInit 0010               __size_of_spiRead 0005                  __size_of_main 0040  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 004A               ??_readController 005E  
                     _spiWrite 048F                       int$flags 007E                   spiInit@sType 0061  
              main@slaveSelect 006B                   _SSP1STATbits 018F              spiInit@sClockIdle 005F  
                   _INTCONbits 000B         pollController@response 0071                    _PWM6CONbits 038E  
                  _PWM7CONbits 0392                       intlevel1 0000               ??_spiReceiveWait 0070  
            __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004                    ??_ppsUnlock 005E  
                  _reversebyte 03DE                    _previousCmd 0075  
